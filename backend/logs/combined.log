{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:30"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:30"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:30"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:32"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:32"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:32"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:33"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:33"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:33"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:34"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:34"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:34"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:35"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:35"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:35"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:36"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:36"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:36"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:38"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:39"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:39"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:39"}
{"level":"error","message":"Claude API error: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:40"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-14 13:52:40"}
{"level":"error","message":"Error generating molecule: Error calling Claude API: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-14 13:52:40"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-14 23:52:53"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-14 23:52:53"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-14 23:52:53"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-15 00:00:50"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:00:51"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 00:00:51"}
{"level":"info","message":"Using fallback test response since API call failed","service":"breaking-good-api","timestamp":"2025-04-15 00:00:51"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:14:33"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 00:14:33"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:14:33"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:28:03"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 00:28:03"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:28:03"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:28:26"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 00:28:26"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:28:26"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:33:15"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 00:33:15"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 00:33:15"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Extracted 8029 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Validating SMILES: CC(C)(C)C(=O)C(CS(=O)C(=O)NC)N1CCCC1","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)C(=O)C(CS(=O)C(=O)NC)N1CCCC1","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Validating SMILES: COc1ccc(CCN2CCN(c3ncnc4[nH]ccc34)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:36:46"}
{"level":"info","message":"Successfully validated SMILES: COc1ccc(CCN2CCN(c3ncnc4[nH]ccc34)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:36:47"}
{"level":"info","message":"Validating SMILES: COc1cc(OC)c(CCNC(=O)C2CCN(CC3=Cc4ccccc4C3)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:36:47"}
{"level":"info","message":"Successfully validated SMILES: COc1cc(OC)c(CCNC(=O)C2CCN(CC3=Cc4ccccc4C3)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:36:48"}
{"level":"info","message":"Validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 00:36:48"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Extracted 8364 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Found 4 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Validating SMILES: CC(C(=O)OC)C1CCN(C)CC1c1ccccc1F","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Successfully validated SMILES: CC(C(=O)OC)C1CCN(C)CC1c1ccccc1F","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(C(=O)CS(=O)c2ccccc2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 00:38:31"}
{"level":"info","message":"Successfully validated SMILES: CC(N)Cc1ccc(C(=O)CS(=O)c2ccccc2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 00:38:32"}
{"level":"info","message":"Validating SMILES: COc1cc(CC(=O)N2CCN(CCCOc3ccc(F)cc3)CC2)ccc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:38:32"}
{"level":"info","message":"Successfully validated SMILES: COc1cc(CC(=O)N2CCN(CCCOc3ccc(F)cc3)CC2)ccc1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:38:33"}
{"level":"info","message":"Validating SMILES: N-substituted-2-amino-3-(4-ethoxy-phenyl)propane","service":"breaking-good-api","timestamp":"2025-04-15 00:38:33"}
{"level":"info","message":"Successfully validated SMILES: N-substituted-2-amino-3-(4-ethoxy-phenyl)propane","service":"breaking-good-api","timestamp":"2025-04-15 00:38:33"}
{"level":"info","message":"Validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-15 00:38:33"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Extracted 9582 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Validating SMILES: CC(C)C(=O)OCCCN1C(=O)C2=C(C1=O)C(=O)N(C(=O)N2)CCCOC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Successfully validated SMILES: CC(C)C(=O)OCCCN1C(=O)C2=C(C1=O)C(=O)N(C(=O)N2)CCCOC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Validating SMILES: COc1cc(CC(=O)N2CCN(CCCOc3ccc4c(c3)OCO4)CC2)cc(OC)c1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:50:55"}
{"level":"info","message":"Successfully validated SMILES: COc1cc(CC(=O)N2CCN(CCCOc3ccc4c(c3)OCO4)CC2)cc(OC)c1OC","service":"breaking-good-api","timestamp":"2025-04-15 00:50:56"}
{"level":"info","message":"Validating SMILES: 3,4,5-trimethoxy-N-[1-(3-(1,3-benzodioxol-5-yloxy)propyl)piperidin-4-yl]benzamide","service":"breaking-good-api","timestamp":"2025-04-15 00:50:56"}
{"level":"info","message":"Successfully validated SMILES: 3,4,5-trimethoxy-N-[1-(3-(1,3-benzodioxol-5-yloxy)propyl)piperidin-4-yl]benzamide","service":"breaking-good-api","timestamp":"2025-04-15 00:50:57"}
{"level":"info","message":"Validating SMILES: COc1ccc(OC)c(CC(=O)NCCCNc2ncnc3[nH]cnc23)c1","service":"breaking-good-api","timestamp":"2025-04-15 00:50:57"}
{"level":"info","message":"Successfully validated SMILES: COc1ccc(OC)c(CC(=O)NCCCNc2ncnc3[nH]cnc23)c1","service":"breaking-good-api","timestamp":"2025-04-15 00:50:57"}
{"level":"info","message":"Validating SMILES: N-(3-(9H-purin-6-ylamino)propyl)-2-(2,5-dimethoxyphenyl)acetamide","service":"breaking-good-api","timestamp":"2025-04-15 00:50:57"}
{"level":"info","message":"Successfully validated SMILES: N-(3-(9H-purin-6-ylamino)propyl)-2-(2,5-dimethoxyphenyl)acetamide","service":"breaking-good-api","timestamp":"2025-04-15 00:50:58"}
{"level":"info","message":"Validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-15 00:50:58"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 00:52:18"}
{"level":"info","message":"Extracted 6670 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 00:52:18"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 00:52:18"}
{"level":"info","message":"Validating SMILES: O=C(O)C1C(=O)N(CC2=CC=C(F)C=C2)C(=O)N1CC3=CC=CC=C3","service":"breaking-good-api","timestamp":"2025-04-15 00:52:18"}
{"level":"info","message":"Successfully validated SMILES: O=C(O)C1C(=O)N(CC2=CC=C(F)C=C2)C(=O)N1CC3=CC=CC=C3","service":"breaking-good-api","timestamp":"2025-04-15 00:52:19"}
{"level":"info","message":"Validating SMILES: COC1=CC=C(CC(=O)N2CCN(C3CCN(C(=O)C4=CC=C(F)C=C4)CC3)CC2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 00:52:19"}
{"level":"info","message":"Successfully validated SMILES: COC1=CC=C(CC(=O)N2CCN(C3CCN(C(=O)C4=CC=C(F)C=C4)CC3)CC2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 00:52:19"}
{"level":"info","message":"Validating SMILES: N-(4-(4-(2-methoxyphenyl)piperazin-1-yl)butyl)-4-fluorobenzamide","service":"breaking-good-api","timestamp":"2025-04-15 00:52:19"}
{"level":"info","message":"Successfully validated SMILES: N-(4-(4-(2-methoxyphenyl)piperazin-1-yl)butyl)-4-fluorobenzamide","service":"breaking-good-api","timestamp":"2025-04-15 00:52:20"}
{"level":"info","message":"Validating SMILES: CC(C)NC(=O)C1(C2=CC(Cl)=C(OC)C=C2)CCN(CC3=CC=C(F)C=C3)CC1","service":"breaking-good-api","timestamp":"2025-04-15 00:52:20"}
{"level":"info","message":"Successfully validated SMILES: CC(C)NC(=O)C1(C2=CC(Cl)=C(OC)C=C2)CCN(CC3=CC=C(F)C=C3)CC1","service":"breaking-good-api","timestamp":"2025-04-15 00:52:20"}
{"level":"info","message":"Validating SMILES: N-Isopropyl-1-(3-chloro-4-methoxyphenyl)-4-(4-fluorobenzyl)piperidine-4-carboxamide","service":"breaking-good-api","timestamp":"2025-04-15 00:52:20"}
{"level":"info","message":"Successfully validated SMILES: N-Isopropyl-1-(3-chloro-4-methoxyphenyl)-4-(4-fluorobenzyl)piperidine-4-carboxamide","service":"breaking-good-api","timestamp":"2025-04-15 00:52:21"}
{"level":"info","message":"Validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-15 00:52:21"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Extracted 9597 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Validating SMILES: CC(C)(C)C(=O)C(CS(=O)NC)NC(=O)OC1CCCCC1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)C(=O)C(CS(=O)NC)NC(=O)OC1CCCCC1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Validating SMILES: 2-[(diphenylmethyl)sulfinyl]-N-methyl-acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:00:43"}
{"level":"info","message":"Successfully validated SMILES: 2-[(diphenylmethyl)sulfinyl]-N-methyl-acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:00:44"}
{"level":"info","message":"Validating SMILES: COC(=O)C(C1CCCC1)N1CCN(C2=CC=CC=C2F)CC1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:44"}
{"level":"info","message":"Successfully validated SMILES: COC(=O)C(C1CCCC1)N1CCN(C2=CC=CC=C2F)CC1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:45"}
{"level":"info","message":"Validating SMILES: 2-(1-piperidyl)-2-(cyclopentyl)acetate-N-(2-fluorophenyl)piperazine","service":"breaking-good-api","timestamp":"2025-04-15 01:00:45"}
{"level":"info","message":"Successfully validated SMILES: 2-(1-piperidyl)-2-(cyclopentyl)acetate-N-(2-fluorophenyl)piperazine","service":"breaking-good-api","timestamp":"2025-04-15 01:00:45"}
{"level":"info","message":"Validating SMILES: C1CN(CC(C1)OC(=O)N1CCCCC1)C(=O)C1=CC=C(C=C1)C#CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:45"}
{"level":"info","message":"Successfully validated SMILES: C1CN(CC(C1)OC(=O)N1CCCCC1)C(=O)C1=CC=C(C=C1)C#CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:00:46"}
{"level":"info","message":"Validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:00:46"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:06:46"}
{"level":"info","message":"Extracted 8003 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:06:46"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:06:46"}
{"level":"info","message":"Validating SMILES: C[C@H](OS(=O)(=O)c1ccccc1)C(=O)NCCCC(c1ccccc1)N(C)C","service":"breaking-good-api","timestamp":"2025-04-15 01:06:46"}
{"level":"info","message":"Successfully validated SMILES: C[C@H](OS(=O)(=O)c1ccccc1)C(=O)NCCCC(c1ccccc1)N(C)C","service":"breaking-good-api","timestamp":"2025-04-15 01:06:47"}
{"level":"info","message":"Validating SMILES: COc1cc(OC)c(cc1OC)C(=O)N1CCN(CC1)C(C)Cc1ccccc1F","service":"breaking-good-api","timestamp":"2025-04-15 01:06:47"}
{"level":"info","message":"Successfully validated SMILES: COc1cc(OC)c(cc1OC)C(=O)N1CCN(CC1)C(C)Cc1ccccc1F","service":"breaking-good-api","timestamp":"2025-04-15 01:06:47"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(cc1)OCCCOc1cccc(c1)C#N","service":"breaking-good-api","timestamp":"2025-04-15 01:06:47"}
{"level":"info","message":"Successfully validated SMILES: CC(N)Cc1ccc(cc1)OCCCOc1cccc(c1)C#N","service":"breaking-good-api","timestamp":"2025-04-15 01:06:48"}
{"level":"info","message":"Validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:06:48"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:08:34"}
{"level":"info","message":"Extracted 5870 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:08:34"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:08:34"}
{"level":"info","message":"Validating SMILES: N-methyl-4-phenyl-3-(pyrrolidin-1-yl)butan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:08:34"}
{"level":"info","message":"Successfully validated SMILES: N-methyl-4-phenyl-3-(pyrrolidin-1-yl)butan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:08:35"}
{"level":"info","message":"Validating SMILES: CC(CCCN(C)C)C1=CC=CC=C1N1CCCC1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:35"}
{"level":"info","message":"Successfully validated SMILES: CC(CCCN(C)C)C1=CC=CC=C1N1CCCC1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:35"}
{"level":"info","message":"Validating SMILES: CN(C)C(CC1=CC=CC=C1)C1=NC(N)=CO1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:35"}
{"level":"info","message":"Successfully validated SMILES: CN(C)C(CC1=CC=CC=C1)C1=NC(N)=CO1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:36"}
{"level":"info","message":"Validating SMILES: 3-(benzofuran-4-yl)-N,N-dimethyl-3-(methylamino)propan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:08:36"}
{"level":"info","message":"Successfully validated SMILES: 3-(benzofuran-4-yl)-N,N-dimethyl-3-(methylamino)propan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:08:37"}
{"level":"info","message":"Validating SMILES: CN(C)CCCC(NC)C1=CC2=CC=CC=C2O1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:37"}
{"level":"info","message":"Successfully validated SMILES: CN(C)CCCC(NC)C1=CC2=CC=CC=C2O1","service":"breaking-good-api","timestamp":"2025-04-15 01:08:37"}
{"level":"info","message":"Validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:08:37"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:17:17"}
{"level":"info","message":"Extracted 7530 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:17:17"}
{"level":"info","message":"Found 4 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:17:17"}
{"level":"info","message":"Validating SMILES: CC(NC(=O)C1=CC(=C(C=C1)S(=O)(=O)N)OC2CCOCC2)C(=O)O","service":"breaking-good-api","timestamp":"2025-04-15 01:17:17"}
{"level":"info","message":"Successfully validated SMILES: CC(NC(=O)C1=CC(=C(C=C1)S(=O)(=O)N)OC2CCOCC2)C(=O)O","service":"breaking-good-api","timestamp":"2025-04-15 01:17:18"}
{"level":"info","message":"Validating SMILES: CCCC(C(=O)N1CCN(CC1)C2=CC=C(C=C2)OC)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-15 01:17:18"}
{"level":"info","message":"Successfully validated SMILES: CCCC(C(=O)N1CCN(CC1)C2=CC=C(C=C2)OC)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-15 01:17:18"}
{"level":"info","message":"Validating SMILES: COC1=CC(=CC=C1OC)C(=O)NC2CCN(CC2)CC3=CC=CC=C3CN4C=NC=N4","service":"breaking-good-api","timestamp":"2025-04-15 01:17:18"}
{"level":"info","message":"Successfully validated SMILES: COC1=CC(=CC=C1OC)C(=O)NC2CCN(CC2)CC3=CC=CC=C3CN4C=NC=N4","service":"breaking-good-api","timestamp":"2025-04-15 01:17:19"}
{"level":"info","message":"Validating SMILES: N-(1-(benzylimidazol-1-yl)piperidin-4-yl)-3,4-dimethoxybenzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:17:19"}
{"level":"info","message":"Successfully validated SMILES: N-(1-(benzylimidazol-1-yl)piperidin-4-yl)-3,4-dimethoxybenzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:17:20"}
{"level":"info","message":"Validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:17:20"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:18:23"}
{"level":"info","message":"Extracted 7165 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:18:23"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:18:23"}
{"level":"info","message":"Validating SMILES: COC(=O)C(CS(=O)C(C)(C)NC(=O)OC)NC(=O)OCH3","service":"breaking-good-api","timestamp":"2025-04-15 01:18:23"}
{"level":"info","message":"Successfully validated SMILES: COC(=O)C(CS(=O)C(C)(C)NC(=O)OC)NC(=O)OCH3","service":"breaking-good-api","timestamp":"2025-04-15 01:18:24"}
{"level":"info","message":"Validating SMILES: CC(NC(=O)C1CCCC1)C(=O)N1CCN(CC1)C1=CC=C(F)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:18:24"}
{"level":"info","message":"Successfully validated SMILES: CC(NC(=O)C1CCCC1)C(=O)N1CCN(CC1)C1=CC=C(F)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:18:25"}
{"level":"info","message":"Validating SMILES: COC1=CC(=CC=C1OC)CCN1CC(CC2=CC=C(Cl)C=C2)N(C)CC1","service":"breaking-good-api","timestamp":"2025-04-15 01:18:25"}
{"level":"info","message":"Successfully validated SMILES: COC1=CC(=CC=C1OC)CCN1CC(CC2=CC=C(Cl)C=C2)N(C)CC1","service":"breaking-good-api","timestamp":"2025-04-15 01:18:25"}
{"level":"info","message":"Validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:18:25"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Extracted 5776 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Found 6 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Validating SMILES: CC(C)(C)C(=O)CNC(=O)OS(=O)(=O)c1ccc(N)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)C(=O)CNC(=O)OS(=O)(=O)c1ccc(N)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Validating SMILES: N-(2,2-dimethylpropanoyl)-2-[(4-aminophenyl)sulfonyloxy]acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:23:58"}
{"level":"info","message":"Successfully validated SMILES: N-(2,2-dimethylpropanoyl)-2-[(4-aminophenyl)sulfonyloxy]acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:23:59"}
{"level":"info","message":"Validating SMILES: C1CN2CCC1CC2C(c1ccccc1)OC(=O)N(C)C","service":"breaking-good-api","timestamp":"2025-04-15 01:23:59"}
{"level":"info","message":"Successfully validated SMILES: C1CN2CCC1CC2C(c1ccccc1)OC(=O)N(C)C","service":"breaking-good-api","timestamp":"2025-04-15 01:24:00"}
{"level":"info","message":"Validating SMILES: N-methyl-N-(3","service":"breaking-good-api","timestamp":"2025-04-15 01:24:00"}
{"level":"info","message":"Successfully validated SMILES: N-methyl-N-(3","service":"breaking-good-api","timestamp":"2025-04-15 01:24:00"}
{"level":"info","message":"Validating SMILES: COc1ccc(CC(NC)C(=O)NCC2=CC(=O)OC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:24:00"}
{"level":"info","message":"Successfully validated SMILES: COc1ccc(CC(NC)C(=O)NCC2=CC(=O)OC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:24:01"}
{"level":"info","message":"Validating SMILES: N-methyl-2-(4-methoxyphenyl)-3-oxo-3-((2-oxo-2H-pyran-4-yl)methylamino)propan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:24:01"}
{"level":"info","message":"Successfully validated SMILES: N-methyl-2-(4-methoxyphenyl)-3-oxo-3-((2-oxo-2H-pyran-4-yl)methylamino)propan-1-amine","service":"breaking-good-api","timestamp":"2025-04-15 01:24:01"}
{"level":"info","message":"Validated 6 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:24:01"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:25:05"}
{"level":"info","message":"Extracted 7089 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:25:05"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:25:05"}
{"level":"info","message":"Validating SMILES: CNC(=O)C(C1=CC=CC=C1)C2CCN(C)CC2","service":"breaking-good-api","timestamp":"2025-04-15 01:25:05"}
{"level":"info","message":"Successfully validated SMILES: CNC(=O)C(C1=CC=CC=C1)C2CCN(C)CC2","service":"breaking-good-api","timestamp":"2025-04-15 01:25:06"}
{"level":"info","message":"Validating SMILES: CC(C)(C)C(=O)NCCCC1=CC=C(OS(=O)(=O)C)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:25:06"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)C(=O)NCCCC1=CC=C(OS(=O)(=O)C)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:25:06"}
{"level":"info","message":"Validating SMILES: COC1=CC=C(CCNC(=O)C2CCN(CC3=CC=C(F)C=C3)CC2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:25:06"}
{"level":"info","message":"Successfully validated SMILES: COC1=CC=C(CCNC(=O)C2CCN(CC3=CC=C(F)C=C3)CC2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:25:07"}
{"level":"info","message":"Validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:25:07"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:29:45"}
{"level":"info","message":"Extracted 8237 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:29:45"}
{"level":"info","message":"Found 4 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:29:45"}
{"level":"info","message":"Validating SMILES: CC(C(=O)OC)C(C1=CC=CC=C1)N2CCN(CC2)C3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-15 01:29:45"}
{"level":"info","message":"Successfully validated SMILES: CC(C(=O)OC)C(C1=CC=CC=C1)N2CCN(CC2)C3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-15 01:29:46"}
{"level":"info","message":"Validating SMILES: CNC(=O)C1=CC(=C(C=C1)NS(=O)(=O)C2=CC=C(C=C2)OC)OC3CCNCC3","service":"breaking-good-api","timestamp":"2025-04-15 01:29:46"}
{"level":"info","message":"Successfully validated SMILES: CNC(=O)C1=CC(=C(C=C1)NS(=O)(=O)C2=CC=C(C=C2)OC)OC3CCNCC3","service":"breaking-good-api","timestamp":"2025-04-15 01:29:47"}
{"level":"info","message":"Validating SMILES: N-methyl-3-methoxy-4-(3-piperidinyloxy)-N-(4-methoxyphenylsulfonyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:29:47"}
{"level":"info","message":"Successfully validated SMILES: N-methyl-3-methoxy-4-(3-piperidinyloxy)-N-(4-methoxyphenylsulfonyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:29:47"}
{"level":"info","message":"Validating SMILES: CC1C2CCC(C1(C)C(=O)C(C)(C)S(=O)C3=CC=C(C=C3)OC)N2C","service":"breaking-good-api","timestamp":"2025-04-15 01:29:47"}
{"level":"info","message":"Successfully validated SMILES: CC1C2CCC(C1(C)C(=O)C(C)(C)S(=O)C3=CC=C(C=C3)OC)N2C","service":"breaking-good-api","timestamp":"2025-04-15 01:29:48"}
{"level":"info","message":"Validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:29:48"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:31:04"}
{"level":"info","message":"Extracted 7796 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:31:04"}
{"level":"info","message":"Found 4 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:31:04"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(OC(=O)NC2CCCCC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:31:04"}
{"level":"info","message":"Successfully validated SMILES: CC(N)Cc1ccc(OC(=O)NC2CCCCC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:31:05"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(S(=O)C(=O)NC2CCCCC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:31:05"}
{"level":"info","message":"Successfully validated SMILES: CC(N)Cc1ccc(S(=O)C(=O)NC2CCCCC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 01:31:06"}
{"level":"info","message":"Validating SMILES: COc1ccc(C(=O)NCCc2ccc(F)cc2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 01:31:06"}
{"level":"info","message":"Successfully validated SMILES: COc1ccc(C(=O)NCCc2ccc(F)cc2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-15 01:31:06"}
{"level":"info","message":"Validating SMILES: N-(4-fluorophenethyl)-3,4-dimethoxybenzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:31:06"}
{"level":"info","message":"Successfully validated SMILES: N-(4-fluorophenethyl)-3,4-dimethoxybenzamide","service":"breaking-good-api","timestamp":"2025-04-15 01:31:07"}
{"level":"info","message":"Validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:31:07"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Extracted 8676 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Found 4 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Validating SMILES: CC(C)(C)NC(=O)C[C@@H](C(=O)NC(C)(C)C)S(=O)C1=CC=C(C=C1)OC","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)NC(=O)C[C@@H](C(=O)NC(C)(C)C)S(=O)C1=CC=C(C=C1)OC","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Validating SMILES: 2-[(diphenylmethyl)sulfinyl]-N-[2-(4-methoxyphenyl)ethyl]acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:40:41"}
{"level":"info","message":"Successfully validated SMILES: 2-[(diphenylmethyl)sulfinyl]-N-[2-(4-methoxyphenyl)ethyl]acetamide","service":"breaking-good-api","timestamp":"2025-04-15 01:40:42"}
{"level":"info","message":"Validating SMILES: CCOC(=O)C(C1CCCCN1)C1=CC=C(C=C1)C(F)(F)F","service":"breaking-good-api","timestamp":"2025-04-15 01:40:42"}
{"level":"info","message":"Successfully validated SMILES: CCOC(=O)C(C1CCCCN1)C1=CC=C(C=C1)C(F)(F)F","service":"breaking-good-api","timestamp":"2025-04-15 01:40:43"}
{"level":"info","message":"Validating SMILES: COC1=CC=C(CC(N)CC2=CC(OC)=C(OC)C=C2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:40:43"}
{"level":"info","message":"Successfully validated SMILES: COC1=CC=C(CC(N)CC2=CC(OC)=C(OC)C=C2)C=C1","service":"breaking-good-api","timestamp":"2025-04-15 01:40:43"}
{"level":"info","message":"Validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-15 01:40:43"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 01:58:16"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 01:58:16"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 01:58:16"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:04:11"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 02:04:11"}
{"level":"error","message":"Error in molecule generation: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:04:11"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-15 02:12:06"}
{"level":"info","message":"Created request ID: 4188bbd8-e522-42c8-a711-03547da661ec","service":"breaking-good-api","timestamp":"2025-04-15 02:12:06"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-15 02:12:06"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:12:15"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 02:12:15"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:12:15"}
{"level":"error","message":"Error in molecule generation: Claude API call failed: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:12:15"}
{"level":"info","message":"Received molecule generation request with requirements: Design a non-stimulant ADHD medication that targets dopamine transporters with minimal side effects.","service":"breaking-good-api","timestamp":"2025-04-15 02:13:15"}
{"level":"info","message":"Created request ID: f85b9484-cd97-4a98-bc83-33f104f2686f","service":"breaking-good-api","timestamp":"2025-04-15 02:13:15"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-15 02:13:15"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:13:18"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 02:13:18"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:13:18"}
{"level":"error","message":"Error in molecule generation: Claude API call failed: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:13:18"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-15 02:18:00"}
{"level":"info","message":"Created request ID: e8c2a69e-ac76-4b5f-9150-2debb94408c5","service":"breaking-good-api","timestamp":"2025-04-15 02:18:00"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-15 02:18:00"}
{"level":"error","message":"Claude API error: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"overloaded_error\",\"message\":\"Overloaded\"}}","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 529","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Generating fallback molecules due to Claude API error","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Successfully created fallback response","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Extracted 509 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validating SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error validating SMILES CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validating SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error validating SMILES C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validating SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error validating SMILES CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validating SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error validating SMILES CN1C=NC2=C1C(=O)N(C(=O)N2C)C: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validating SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error validating SMILES CC(CS)C(=O)N1CCCC1C(=O)O: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Validated 0 molecules","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"No valid molecules could be validated","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"error","message":"Error in molecule generation: Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 02:18:03"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-15 11:52:14"}
{"level":"info","message":"Created request ID: 3553c4d5-d592-4032-bf56-0d9ea1600903","service":"breaking-good-api","timestamp":"2025-04-15 11:52:14"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-15 11:52:14"}
{"level":"info","message":"Received Claude response with ID: msg_01GaAHpBm1e26niU6V2irMrS","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Claude response has array content with 1 items","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Content item 0 type: text","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Extracted 7593 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Validating SMILES: COC(=O)C(C1CCCC1)N(C)Cc1cccc(c1)C(=O)NC(C)(C)CS(=O)(=O)c1ccccc1","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Error validating SMILES COC(=O)C(C1CCCC1)N(C)Cc1cccc(c1)C(=O)NC(C)(C)CS(=O)(=O)c1ccccc1: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Validating SMILES: COC(=O)C(C1CCCC1)N(C)Cc1ccc(F)c(c1)C(O)C#N","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Error validating SMILES COC(=O)C(C1CCCC1)N(C)Cc1ccc(F)c(c1)C(O)C#N: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Validating SMILES: CC(NC(=O)OC(C)(C)C)C(=O)NCCc1ccc(OC)c(OC)c1","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Error validating SMILES CC(NC(=O)OC(C)(C)C)C(=O)NCCc1ccc(OC)c(OC)c1: Invalid URL","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Validated 0 molecules","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"No valid molecules could be validated","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"error","message":"Error in molecule generation: Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 11:52:53"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-15 14:00:27"}
{"level":"info","message":"Created request ID: 6ae9bbb0-99e6-4fd9-a965-420ed10695e8","service":"breaking-good-api","timestamp":"2025-04-15 14:00:27"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-15 14:00:27"}
{"level":"info","message":"Received Claude response with ID: msg_012vm6UqPzEf21xbfZNCNW1M","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Claude response has array content with 1 items","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Content item 0 type: text","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Extracted 8547 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Validating SMILES: COC(=O)c1cc2ccccc2cc1N1CCC(c2ccc(F)cc2)(C)C(C)C1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Successfully validated SMILES: COC(=O)c1cc2ccccc2cc1N1CCC(c2ccc(F)cc2)(C)C(C)C1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Validating SMILES: CC1(C)OCC(CN(C)C(=O)c2ccc(C)cc2)C(c2ccc(Cl)c(Cl)cc2)N1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:08"}
{"level":"info","message":"Successfully validated SMILES: CC1(C)OCC(CN(C)C(=O)c2ccc(C)cc2)C(c2ccc(Cl)c(Cl)cc2)N1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Validating SMILES: CCN(CC)CCOc1ccc(N2CCN(c3ccc4oc(c5c(F)cccc5F)nc4c3)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Successfully validated SMILES: CCN(CC)CCOc1ccc(N2CCN(c3ccc4oc(c5c(F)cccc5F)nc4c3)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Successfully extracted 3 molecules","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Saving results to file for request 6ae9bbb0-99e6-4fd9-a965-420ed10695e8","service":"breaking-good-api","timestamp":"2025-04-15 14:01:09"}
{"level":"info","message":"Received molecule generation request with requirements: \nI want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-19 18:56:05"}
{"level":"info","message":"Created request ID: b69bdc80-fbeb-4c3e-a27b-5e2981a12263","service":"breaking-good-api","timestamp":"2025-04-19 18:56:05"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 18:56:05"}
{"level":"info","message":"Received Claude response with ID: msg_01YUdrsGwycmeLTAhKXSR9mN","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Claude response has array content with 1 items","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Content item 0 type: text","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Extracted 7439 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Validating SMILES: CC(NC)C(=O)c1ccc(cc1)OC(F)(F)F","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error validating SMILES CC(NC)C(=O)c1ccc(cc1)OC(F)(F)F: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(c(c1)OC)NS(=O)(=O)C(F)(F)F","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error validating SMILES CC(N)Cc1ccc(c(c1)OC)NS(=O)(=O)C(F)(F)F: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Validating SMILES: CCCN1CCN(CC1)C(=O)c1ccc(cc1)C(C)NC","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error validating SMILES CCCN1CCN(CC1)C(=O)c1ccc(cc1)C(C)NC: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Validated 0 molecules","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"No valid molecules could be validated","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"error","message":"Error in molecule generation: Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:56:39"}
{"level":"info","message":"Received molecule generation request with requirements: \nI want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-19 18:56:49"}
{"level":"info","message":"Created request ID: 3668773d-b529-490c-88dd-efef149d4a47","service":"breaking-good-api","timestamp":"2025-04-19 18:56:49"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 18:56:49"}
{"level":"info","message":"Received Claude response with ID: msg_01N1r6wdXkUEq3FtCMKEJCJ6","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Claude response has array content with 1 items","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Content item 0 type: text","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Extracted 9618 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Found 3 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Validating SMILES: C(=O)(NS(=O)(=O)C1=CC=C(C=C1)OC)C2C(C2)C3=CC=C(C=C3)OC4=CC=C(N)C=C4","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error validating SMILES C(=O)(NS(=O)(=O)C1=CC=C(C=C1)OC)C2C(C2)C3=CC=C(C=C3)OC4=CC=C(N)C=C4: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Validating SMILES: COC1=CC(=CC=C1)C2CCCN2CC(=O)C3=CC=C(F)C=C3NC4=CC=CC=C4","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error validating SMILES COC1=CC(=CC=C1)C2CCCN2CC(=O)C3=CC=C(F)C=C3NC4=CC=CC=C4: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Validating SMILES: CC1=C(C(=O)N(C)C2=CC=CC=C12)CC3CCNCC3C4=CC=C(OC)C=C4","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error validating SMILES CC1=C(C(=O)N(C)C2=CC=CC=C12)CC3CCNCC3C4=CC=C(OC)C=C4: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Validated 0 molecules","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"No valid molecules could be validated","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"error","message":"Error in molecule generation: Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 18:57:34"}
{"level":"info","message":"Received molecule generation request with requirements: \nI want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someone's productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-19 19:01:16"}
{"level":"info","message":"Created request ID: fc360418-703a-42a1-ba9e-ad04c4002201","service":"breaking-good-api","timestamp":"2025-04-19 19:01:16"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 19:01:16"}
{"level":"info","message":"Received Claude response with ID: msg_012uSaZfvoG8mnj1oWAoZ12r","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Claude response has array content with 1 items","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Content item 0 type: text","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Extracted 8020 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Found 5 SMILES candidates","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validating SMILES: FC(F)(F)c1ccc(cc1)C(=O)NC2CCN(CC2)CCCOc3ccc(F)cc3","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error validating SMILES FC(F)(F)c1ccc(cc1)C(=O)NC2CCN(CC2)CCCOc3ccc(F)cc3: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validating SMILES: N-(4-(trifluoromethyl)phenyl)-1-(3-(4-fluorophenoxy)propyl)piperidine-4-carboxamide","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error validating SMILES N-(4-(trifluoromethyl)phenyl)-1-(3-(4-fluorophenoxy)propyl)piperidine-4-carboxamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validating SMILES: N-{1-[3-(3-fluoro-phenyl)-propyl]-piperidin-4-yl}-N-phenyl-propionamide","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error validating SMILES N-{1-[3-(3-fluoro-phenyl)-propyl]-piperidin-4-yl}-N-phenyl-propionamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validating SMILES: COc1ccc2c(c1)C(=O)N(C2)CCCN3CCN(CC3)c4cccc(Cl)c4","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error validating SMILES COc1ccc2c(c1)C(=O)N(C2)CCCN3CCN(CC3)c4cccc(Cl)c4: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validating SMILES: Cc1nc(sc1C(=O)NCCN2CCN(CC2)c3ccc(F)cc3F)N4CCN(CC4)CC(=O)O","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error validating SMILES Cc1nc(sc1C(=O)NCCN2CCN(CC2)c3ccc(F)cc3F)N4CCN(CC4)CC(=O)O: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Validated 0 molecules","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"No valid molecules could be validated","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"error","message":"Error in molecule generation: Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:01:56"}
{"level":"info","message":"Received molecule generation request with requirements: \nI want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-19 19:14:02"}
{"level":"info","message":"Created request ID: 3554d0ee-534e-48b8-b602-352f19735c70","service":"breaking-good-api","timestamp":"2025-04-19 19:14:02"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 19:14:02"}
{"level":"info","message":"Received Claude response with ID: msg_01LCnyk5nWn3PHQkfamaSM9e","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Extracted 7170 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Validating SMILES: CC(N)C(=O)NC1CCCC(C1)C(C)NC(=O)C2=CC=CC=C2OC","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"error","message":"Error during validation/property call for SMILES CC(N)C(=O)NC1CCCC(C1)C(C)NC(=O)C2=CC=CC=C2OC: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"info","message":"Validating SMILES: S)-2-amino-N-((R)-1-cyclohexyl-2-(methylamino)-2-oxoethyl)-3-(4-methoxyphenyl)propanamide","service":"breaking-good-api","timestamp":"2025-04-19 19:14:38"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error during validation/property call for SMILES S)-2-amino-N-((R)-1-cyclohexyl-2-(methylamino)-2-oxoethyl)-3-(4-methoxyphenyl)propanamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"info","message":"Validating SMILES: CNCC1=CC(OC)=C(OC)C=C1CC(=O)NC2CCCCC2N","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error during validation/property call for SMILES CNCC1=CC(OC)=C(OC)C=C1CC(=O)NC2CCCCC2N: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"info","message":"Validating SMILES: 3-(3,4-dimethoxyphenyl)-N-(2-aminocyclohexyl)-N-methylpropanamide","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error during validation/property call for SMILES 3-(3,4-dimethoxyphenyl)-N-(2-aminocyclohexyl)-N-methylpropanamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"info","message":"Validating SMILES: FC(F)(F)C1=CC=C(C=C1)C2CCCN2CC3=CC=C(O)C=C3","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error during validation/property call for SMILES FC(F)(F)C1=CC=C(C=C1)C2CCCN2CC3=CC=C(O)C=C3: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"info","message":"Validated 0 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"No valid molecules could be validated from response or fallback.","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:14:39"}
{"level":"error","message":"Error in Claude Chat: Request failed with status code 400","service":"breaking-good-api","timestamp":"2025-04-19 19:26:12"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"invalid_request_error\",\"message\":\"anthropic_version: Extra inputs are not permitted\"}}","service":"breaking-good-api","timestamp":"2025-04-19 19:26:12"}
{"level":"info","message":"Received molecule generation request with requirements: Generate","service":"breaking-good-api","timestamp":"2025-04-19 19:26:22"}
{"level":"info","message":"Created request ID: 2dbcf70c-dcfd-4a4b-85e5-53a9b2ec19a8","service":"breaking-good-api","timestamp":"2025-04-19 19:26:22"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 19:26:22"}
{"level":"info","message":"Received Claude response with ID: msg_01P2FZUTGnX5siweKDvz4aDH","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Extracted 7240 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validating SMILES: CC(NC)Cc1ccc(OC(=O)N2CCN(C)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error during validation/property call for SMILES CC(NC)Cc1ccc(OC(=O)N2CCN(C)CC2)cc1: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validating SMILES: 2-(4-(4-methylpiperazine-1-carbonyloxy)phenyl)-N-methylethan-1-amine","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error during validation/property call for SMILES 2-(4-(4-methylpiperazine-1-carbonyloxy)phenyl)-N-methylethan-1-amine: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validating SMILES: COc1cc(CC(=O)N2CCN(CCCc3ccccc3)CC2)ccc1OC","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error during validation/property call for SMILES COc1cc(CC(=O)N2CCN(CCCc3ccccc3)CC2)ccc1OC: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validating SMILES: CNC(=O)c1ccc(N2CCN(CC(O)c3ccc(F)cc3)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error during validation/property call for SMILES CNC(=O)c1ccc(N2CCN(CC(O)c3ccc(F)cc3)CC2)cc1: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validating SMILES: 4-(4-(1-hydroxy-2-(4-fluorophenyl)ethyl)piperazin-1-yl)-N-methylbenzamide","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error during validation/property call for SMILES 4-(4-(1-hydroxy-2-(4-fluorophenyl)ethyl)piperazin-1-yl)-N-methylbenzamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Validated 0 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"No valid molecules could be validated from response or fallback.","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:26:59"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-19 19:30:52"}
{"level":"info","message":"Created request ID: 4ed02fe6-df96-4c53-8b6f-0891a6a134f5","service":"breaking-good-api","timestamp":"2025-04-19 19:30:52"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-19 19:30:52"}
{"level":"info","message":"Received Claude response with ID: msg_013dTVi7zucwmW6kYbYyyW21","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Extracted 6959 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Validating SMILES: CC(NC(=O)C1CCCCC1)C(=O)NCCC2=CNC3=C2C=C(OC)C=C3","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"error","message":"Error during validation/property call for SMILES CC(NC(=O)C1CCCCC1)C(=O)NCCC2=CNC3=C2C=C(OC)C=C3: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"info","message":"Validating SMILES: N-(1-(1H-indol-4-yloxy)propan-2-yl)-cyclohexanecarboxamide","service":"breaking-good-api","timestamp":"2025-04-19 19:31:26"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error during validation/property call for SMILES N-(1-(1H-indol-4-yloxy)propan-2-yl)-cyclohexanecarboxamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"info","message":"Validating SMILES: CC(C)NC(=O)C1=CC(=C(C=C1)OC)OCC2CCCN2CC3=CC=CC=C3","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error during validation/property call for SMILES CC(C)NC(=O)C1=CC(=C(C=C1)OC)OCC2CCCN2CC3=CC=CC=C3: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"info","message":"Validating SMILES: N-isopropyl-4-methoxy-3-((1-phenethylpyrrolidin-3-yl)methoxy)benzamide","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error during validation/property call for SMILES N-isopropyl-4-methoxy-3-((1-phenethylpyrrolidin-3-yl)methoxy)benzamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"info","message":"Validating SMILES: CCCN1CCN(CC1)C(=O)C2=CN=C(N)S2.Cl","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\r\n  File \"C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\utils\\rdkit\\molecular_properties.py\", line 6, in <module>\r\n    from rdkit import Chem\r\nModuleNotFoundError: No module named 'rdkit'\r\n","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error during validation/property call for SMILES CCCN1CCN(CC1)C(=O)C2=CN=C(N)S2.Cl: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"info","message":"Validated 0 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"No valid molecules could be validated from response or fallback.","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Error processing molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"error","message":"Failed to process Claude response: Failed to process molecule design: No valid molecules could be validated from Claude response or fallbacks","service":"breaking-good-api","timestamp":"2025-04-19 19:31:27"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-20 13:25:26"}
{"level":"info","message":"Created request ID: 76c6829f-e83f-44bd-bb28-42b56f6865ee","service":"breaking-good-api","timestamp":"2025-04-20 13:25:26"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-20 13:25:26"}
{"level":"info","message":"Received Claude response with ID: msg_012i67F1HcGgCT6CWTYxwuJr","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Extracted 7231 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Found 6 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Validating SMILES: 2-[(4-fluorophenyl)(1-methylpiperidin-4-yl)methoxy]-N-methyl-N-(2-phenylethyl)ethan-1-amine","service":"breaking-good-api","timestamp":"2025-04-20 13:26:03"}
{"level":"info","message":"Successfully validated SMILES: 2-[(4-fluorophenyl)(1-methylpiperidin-4-yl)methoxy]-N-methyl-N-(2-phenylethyl)ethan-1-amine","service":"breaking-good-api","timestamp":"2025-04-20 13:28:13"}
{"level":"info","message":"Validating SMILES: FC1=CC=C(C(OCCN(C)CCC2=CC=CC=C2)C2CCN(C)CC2)C=C1","service":"breaking-good-api","timestamp":"2025-04-20 13:28:13"}
{"level":"error","message":"Error comparing molecules: RDKit script exited with code 2: usage: molecule_operations.py [-h] [--smiles SMILES] --operation\r\n                              {validate,descriptors,svg,optimize_3d,fingerprint}\r\n                              [--output {json,text}]\r\nmolecule_operations.py: error: the following arguments are required: --operation\r\n","service":"breaking-good-api","timestamp":"2025-04-20 17:05:14"}
{"level":"info","message":"Searching PubMed for: adhd AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:05:40"}
{"level":"info","message":"Found 10 IDs (total 53951)","service":"breaking-good-api","timestamp":"2025-04-20 17:05:41"}
{"level":"info","message":"Formatted 10 articles","service":"breaking-good-api","timestamp":"2025-04-20 17:05:41"}
{"level":"info","message":"Fetching details for ID: 32938246","service":"breaking-good-api","timestamp":"2025-04-20 17:05:45"}
{"level":"info","message":"Fetching details for ID: 32938246","service":"breaking-good-api","timestamp":"2025-04-20 17:05:46"}
{"level":"info","message":"Fetching details for ID: 32938246","service":"breaking-good-api","timestamp":"2025-04-20 17:05:47"}
{"level":"info","message":"Searching PubMed for: Adderall AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:06:14"}
{"level":"info","message":"Found 10 IDs (total 44853)","service":"breaking-good-api","timestamp":"2025-04-20 17:06:15"}
{"level":"error","message":"Literature search error: pubmedData?.ArticleIdList?.ArticleId?.find is not a function","service":"breaking-good-api","stack":"TypeError: pubmedData?.ArticleIdList?.ArticleId?.find is not a function\n    at C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\api\\literature.js:87:59\n    at Array.map (<anonymous>)\n    at C:\\Users\\nicks\\Downloads\\breakinggood\\backend\\api\\literature.js:62:40\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-04-20 17:06:16"}
{"level":"info","message":"Searching PubMed for: ADHD AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:06:19"}
{"level":"info","message":"Found 10 IDs (total 53951)","service":"breaking-good-api","timestamp":"2025-04-20 17:06:19"}
{"level":"info","message":"Formatted 10 articles","service":"breaking-good-api","timestamp":"2025-04-20 17:06:20"}
{"level":"info","message":"Searching PubMed for: Aderall AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:06:26"}
{"level":"info","message":"Found 0 IDs (total 0)","service":"breaking-good-api","timestamp":"2025-04-20 17:06:26"}
{"level":"info","message":"Searching PubMed for: Neuro AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:06:35"}
{"level":"info","message":"Found 10 IDs (total 56201)","service":"breaking-good-api","timestamp":"2025-04-20 17:06:35"}
{"level":"info","message":"Formatted 10 articles","service":"breaking-good-api","timestamp":"2025-04-20 17:06:36"}
{"level":"info","message":"Searching PubMed for: ADHD AND (ADHD OR attention deficit hyperactivity disorder OR neuropharmacology OR stimulant OR neurotransmitter), limit: 10, start: 0","service":"breaking-good-api","timestamp":"2025-04-20 17:06:43"}
{"level":"info","message":"Found 10 IDs (total 53951)","service":"breaking-good-api","timestamp":"2025-04-20 17:06:44"}
{"level":"info","message":"Formatted 10 articles","service":"breaking-good-api","timestamp":"2025-04-20 17:06:44"}
{"level":"info","message":"Fetching details for ID: 29428394","service":"breaking-good-api","timestamp":"2025-04-20 17:06:46"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-20 17:19:04"}
{"level":"info","message":"Created request ID: c9b61eb2-3679-4fc0-b7aa-56ce285360c7","service":"breaking-good-api","timestamp":"2025-04-20 17:19:04"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-20 17:19:04"}
{"level":"info","message":"Received Claude response with ID: msg_01XLXUNvmwUNkeKR9xMm1B5R","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Extracted 6700 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Validating SMILES: CC(C)(OCC(=O)N(C)CS(=O)(=O)c1ccc(cc1)C(=O)NC2C(=O)N(CC(c3ccccc3)C2)C","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(OCC(=O)N(C)CS(=O)(=O)c1ccc(cc1)C(=O)NC2C(=O)N(CC(c3ccccc3)C2)C","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Validating SMILES: 2-[(Diphenylmethyl)sulfinyl]-N-[2-(1-oxo-4-phenyl-2-pyrrolidinyl)acetamide]methylacetamide","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Successfully validated SMILES: 2-[(Diphenylmethyl)sulfinyl]-N-[2-(1-oxo-4-phenyl-2-pyrrolidinyl)acetamide]methylacetamide","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Validating SMILES: C1CC(CNC(=O)C2CCN(CC2)c3nc4c(cnn4)c(n3)C(F)(F)F)C(=O)N1CCc5ccccc5OC","service":"breaking-good-api","timestamp":"2025-04-20 17:19:41"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-20 17:27:23"}
{"level":"info","message":"Created request ID: a82d4b9c-4c4f-4b0d-8a32-4969f7af9fac","service":"breaking-good-api","timestamp":"2025-04-20 17:27:23"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-20 17:27:23"}
{"level":"info","message":"Received Claude response with ID: msg_01RJH8r4DhAKVYi5Tbd3iYr3","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Extracted 8554 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Found 6 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(cc1)Oc1ccc(cc1)C(=O)NC(C)(C)C","service":"breaking-good-api","timestamp":"2025-04-20 17:28:05"}
{"level":"info","message":"Successfully validated SMILES: CC(N)Cc1ccc(cc1)Oc1ccc(cc1)C(=O)NC(C)(C)C","service":"breaking-good-api","timestamp":"2025-04-20 17:28:08"}
{"level":"info","message":"Validating SMILES: 2-(4-(4-(2-aminopropyl)phenoxy)phenyl)-N-tert-butyl-acetamide","service":"breaking-good-api","timestamp":"2025-04-20 17:28:08"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-20 17:44:50"}
{"level":"info","message":"Created request ID: 7cd5360a-ac3e-4314-b341-9ffca932ff97","service":"breaking-good-api","timestamp":"2025-04-20 17:44:50"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-20 17:44:50"}
{"level":"info","message":"Received Claude response with ID: msg_01TxuvMqtuhgTNRGyWMCNLEU","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Extracted 7240 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Validating SMILES: 2-[(R)-1-amino-2-methylpropyl]-N-methyl-benzhydrylsulfinamide","service":"breaking-good-api","timestamp":"2025-04-20 17:45:24"}
{"level":"info","message":"Successfully validated SMILES: 2-[(R)-1-amino-2-methylpropyl]-N-methyl-benzhydrylsulfinamide","service":"breaking-good-api","timestamp":"2025-04-20 17:45:25"}
{"level":"info","message":"Validating SMILES: CC(C)[C@H](N)C1=CC=CC=C1C(C2=CC=CC=C2)S(=O)NCH3","service":"breaking-good-api","timestamp":"2025-04-20 17:45:25"}
{"level":"info","message":"Successfully validated SMILES: CC(C)[C@H](N)C1=CC=CC=C1C(C2=CC=CC=C2)S(=O)NCH3","service":"breaking-good-api","timestamp":"2025-04-20 17:45:25"}
{"level":"info","message":"Validating SMILES: S)-N-(4-fluorophenethyl)-3-(1H-imidazol-5-yl)-2-methyl-propanamide","service":"breaking-good-api","timestamp":"2025-04-20 17:45:25"}
{"level":"info","message":"Received molecule generation request with requirements: \nI want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Created request ID: 8f7c476b-07f4-46a0-940d-2eeccce0db79","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"error","message":"Claude API error: Request failed with status code 401","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"authentication_error\",\"message\":\"invalid x-api-key\"}}","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 401. Using fallback molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Extracted 509 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Validating SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Successfully validated SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Validating SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:21"}
{"level":"info","message":"Successfully validated SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Validating SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Validating SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Successfully validated SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Validating SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Successfully validated SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Validated 5 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Saving results to file for request 8f7c476b-07f4-46a0-940d-2eeccce0db79","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-22 15:03:22"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:03:23"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-22 15:05:52"}
{"level":"info","message":"Created request ID: 94660d83-dd94-4b2c-80e2-673cc7797043","service":"breaking-good-api","timestamp":"2025-04-22 15:05:52"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-22 15:05:52"}
{"level":"error","message":"Claude API error: Request failed with status code 401","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"authentication_error\",\"message\":\"invalid x-api-key\"}}","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 401. Using fallback molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Extracted 509 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Validating SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Successfully validated SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Validating SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Successfully validated SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Validating SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Validating SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Successfully validated SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Validating SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:53"}
{"level":"info","message":"Successfully validated SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Validated 5 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Saving results to file for request 94660d83-dd94-4b2c-80e2-673cc7797043","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:05:54"}
{"level":"info","message":"Received molecule generation request with requirements: I want you to help me develop an alternative neuro-stimulant (that simulates Adderall) that will boost someones productivity and performance consistently without the downsides as possible.","service":"breaking-good-api","timestamp":"2025-04-22 15:07:44"}
{"level":"info","message":"Created request ID: 41eb4027-95a7-417d-94bb-8aae4f0d3401","service":"breaking-good-api","timestamp":"2025-04-22 15:07:44"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-22 15:07:44"}
{"level":"error","message":"Claude API error: Request failed with status code 401","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"authentication_error\",\"message\":\"invalid x-api-key\"}}","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 401. Using fallback molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Extracted 509 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Validating SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Successfully validated SMILES: CN1C2=C(C=C(C=C2)Cl)N(C(=O)CC1=O)CC3=CC=C(C=C3)F","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Validating SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Successfully validated SMILES: C1=CC=C(C=C1)C2=COC3=CC(=CC(=C3)OC4=CC=CC=C4)C2=O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Validating SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Successfully validated SMILES: CC(C)(C)NCC(COC1=CC=CC2=CC=CC=C21)O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Validating SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:07:45"}
{"level":"info","message":"Successfully validated SMILES: CN1C=NC2=C1C(=O)N(C(=O)N2C)C","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Validating SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Successfully validated SMILES: CC(CS)C(=O)N1CCCC1C(=O)O","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Validated 5 molecules out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Saving results to file for request 41eb4027-95a7-417d-94bb-8aae4f0d3401","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-22 15:07:46"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 11:56:21"}
{"level":"info","message":"Received molecule generation request with requirements: gg","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"Created request ID: e998a3e7-29ac-4048-9bf5-65a2404c5a3f","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"User prompt length: 627 characters","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"error","message":"Claude API error: Request failed with status code 401","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"error","message":"Claude API response: {\"type\":\"error\",\"error\":{\"type\":\"authentication_error\",\"message\":\"invalid x-api-key\"}}","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"error","message":"Claude API call failed: Error calling Claude API: Request failed with status code 401","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"error","message":"Error details: {}","service":"breaking-good-api","timestamp":"2025-04-26 11:57:13"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 11:58:39"}
{"level":"info","message":"Received molecule generation request with requirements: ADHD gen","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"Created request ID: 00681153-a2c6-4f4e-b25d-98509316fd4d","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"User prompt length: 633 characters","service":"breaking-good-api","timestamp":"2025-04-26 11:59:07"}
{"level":"info","message":"Claude API response received: msg_01RupSKDf6qjehuAeLskv14E","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Response content type: object","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Content is array with 1 items","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Received Claude response with ID: msg_01RupSKDf6qjehuAeLskv14E","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using string content directly, length: 8657","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Extracted 8657 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validating SMILES: CC(N)Cc1ccc(O)c(O)c1C(=O)NC2CCCCC2","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/molecular_properties.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"warn","message":"Error calculating properties for SMILES: CC(N)Cc1ccc(O)c(O)c1C(=O)NC2CCCCC2. Error: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using basic validation for SMILES since RDKit failed: CC(N)Cc1ccc(O)c(O)c1C(=O)NC2CCCCC2","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Added molecule with basic validation (RDKit unavailable): CC(N)Cc1ccc(O)c(O)c1C(=O)NC2CCCCC2","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validating SMILES: N-cyclohexyl-4,5-dihydroxy-2-(2-aminopropyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/molecular_properties.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"warn","message":"Error calculating properties for SMILES: N-cyclohexyl-4,5-dihydroxy-2-(2-aminopropyl)benzamide. Error: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using basic validation for SMILES since RDKit failed: N-cyclohexyl-4,5-dihydroxy-2-(2-aminopropyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Added molecule with basic validation (RDKit unavailable): N-cyclohexyl-4,5-dihydroxy-2-(2-aminopropyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validating SMILES: COc1cc(CC(=O)NCC2CCN(CC3=CNC=N3)CC2)c(OC)cc1Br","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/molecular_properties.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"warn","message":"Error calculating properties for SMILES: COc1cc(CC(=O)NCC2CCN(CC3=CNC=N3)CC2)c(OC)cc1Br. Error: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using basic validation for SMILES since RDKit failed: COc1cc(CC(=O)NCC2CCN(CC3=CNC=N3)CC2)c(OC)cc1Br","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Added molecule with basic validation (RDKit unavailable): COc1cc(CC(=O)NCC2CCN(CC3=CNC=N3)CC2)c(OC)cc1Br","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validating SMILES: 3-bromo-2,5-dimethoxy-N-(1-(imidazol-4-ylmethyl)piperidin-4-yl)methylphenylacetamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/molecular_properties.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"warn","message":"Error calculating properties for SMILES: 3-bromo-2,5-dimethoxy-N-(1-(imidazol-4-ylmethyl)piperidin-4-yl)methylphenylacetamide. Error: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using basic validation for SMILES since RDKit failed: 3-bromo-2,5-dimethoxy-N-(1-(imidazol-4-ylmethyl)piperidin-4-yl)methylphenylacetamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Added molecule with basic validation (RDKit unavailable): 3-bromo-2,5-dimethoxy-N-(1-(imidazol-4-ylmethyl)piperidin-4-yl)methylphenylacetamide","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validating SMILES: COC(=O)c1cc(OC)c(OCCN2CCN(C(=O)c3ccc(F)cc3)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calculating molecular properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/molecular_properties.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"warn","message":"Error calculating properties for SMILES: COC(=O)c1cc(OC)c(OCCN2CCN(C(=O)c3ccc(F)cc3)CC2)cc1OC. Error: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Using basic validation for SMILES since RDKit failed: COC(=O)c1cc(OC)c(OCCN2CCN(C(=O)c3ccc(F)cc3)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Added molecule with basic validation (RDKit unavailable): COC(=O)c1cc(OC)c(OCCN2CCN(C(=O)c3ccc(F)cc3)CC2)cc1OC","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Validated 5 molecules (Props & 3D) out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Saving results to file for request 00681153-a2c6-4f4e-b25d-98509316fd4d","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error predicting ADMET properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/admet_prediction.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calling ADMET endpoint for CC(N)Cc1ccc(O)c(O)c1C(=O)NC2CCCCC2: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error predicting ADMET properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/admet_prediction.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calling ADMET endpoint for N-cyclohexyl-4,5-dihydroxy-2-(2-aminopropyl)benzamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error predicting ADMET properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/admet_prediction.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calling ADMET endpoint for COc1cc(CC(=O)NCC2CCN(CC3=CNC=N3)CC2)c(OC)cc1Br: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error predicting ADMET properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/admet_prediction.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calling ADMET endpoint for 3-bromo-2,5-dimethoxy-N-(1-(imidazol-4-ylmethyl)piperidin-4-yl)methylphenylacetamide: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error predicting ADMET properties: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/admet_prediction.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error calling ADMET endpoint for COC(=O)c1cc(OC)c(OCCN2CCN(C(=O)c3ccc(F)cc3)CC2)cc1OC: Request failed with status code 500","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error generating 3D structure: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/structure_generation.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:49"}
{"level":"error","message":"Error generating 3D structure: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/structure_generation.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:50"}
{"level":"error","message":"Error generating 3D structure: RDKit script exited with code 1: Traceback (most recent call last):\n  File \"/Users/siddhantpatel/bga/backend/utils/rdkit/structure_generation.py\", line 6, in <module>\n    from rdkit import Chem\nModuleNotFoundError: No module named 'rdkit'\n","service":"breaking-good-api","timestamp":"2025-04-26 11:59:50"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:01:02"}
{"level":"info","message":"Received molecule generation request with requirements: work \n","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"Created request ID: fcd8580a-edfe-406d-bf77-cfda3a3f4460","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"User prompt length: 631 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:01:21"}
{"level":"info","message":"Claude API response received: msg_01WrqgZPjgEDgbN2w6WbvX37","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Response content type: object","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Content is array with 1 items","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Received Claude response with ID: msg_01WrqgZPjgEDgbN2w6WbvX37","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Using string content directly, length: 8658","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Extracted 8658 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Validating SMILES: FC(F)(F)c1ccc(cc1)C(=O)N1CCNC(C1)C1CCN(CC1)c1ncnc2[nH]ccc12","service":"breaking-good-api","timestamp":"2025-04-26 12:02:04"}
{"level":"info","message":"Attempting 3D structure generation for: FC(F)(F)c1ccc(cc1)C(=O)N1CCNC(C1)C1CCN(CC1)c1ncnc2[nH]ccc12","service":"breaking-good-api","timestamp":"2025-04-26 12:02:31"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): FC(F)(F)c1ccc(cc1)C(=O)N1CCNC(C1)C1CCN(CC1)c1ncnc2[nH]ccc12","service":"breaking-good-api","timestamp":"2025-04-26 12:02:31"}
{"level":"info","message":"Validating SMILES: 4-[4-(1H-pyrrolo[2,3-d]pyrimidin-4-yl)piperazin-1-yl]piperidin-2-yl-N-(4-trifluoromethylphenyl)formamide","service":"breaking-good-api","timestamp":"2025-04-26 12:02:31"}
{"level":"info","message":"Attempting 3D structure generation for: 4-[4-(1H-pyrrolo[2,3-d]pyrimidin-4-yl)piperazin-1-yl]piperidin-2-yl-N-(4-trifluoromethylphenyl)formamide","service":"breaking-good-api","timestamp":"2025-04-26 12:02:32"}
{"level":"warn","message":"Failed 3D structure generation for valid SMILES: 4-[4-(1H-pyrrolo[2,3-d]pyrimidin-4-yl)piperazin-1-yl]piperidin-2-yl-N-(4-trifluoromethylphenyl)formamide - Unknown structure error","service":"breaking-good-api","timestamp":"2025-04-26 12:02:32"}
{"level":"info","message":"Added molecule with properties but without 3D structure: 4-[4-(1H-pyrrolo[2,3-d]pyrimidin-4-yl)piperazin-1-yl]piperidin-2-yl-N-(4-trifluoromethylphenyl)formamide","service":"breaking-good-api","timestamp":"2025-04-26 12:02:32"}
{"level":"info","message":"Validating SMILES: CC(C)N1CCN(CC1)c1cc(nc2c1ccnc2)c1cccc(c1)C(=O)N1CCC(CC1)N1CCOCC1","service":"breaking-good-api","timestamp":"2025-04-26 12:02:32"}
{"level":"info","message":"Attempting 3D structure generation for: CC(C)N1CCN(CC1)c1cc(nc2c1ccnc2)c1cccc(c1)C(=O)N1CCC(CC1)N1CCOCC1","service":"breaking-good-api","timestamp":"2025-04-26 12:02:32"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): CC(C)N1CCN(CC1)c1cc(nc2c1ccnc2)c1cccc(c1)C(=O)N1CCC(CC1)N1CCOCC1","service":"breaking-good-api","timestamp":"2025-04-26 12:02:33"}
{"level":"info","message":"Validating SMILES: 4-(4-morpholinylpiperidin-1-yl)-N-isopropyl-N-(4-(quinazolin-6-yl)benzoyl)piperazine","service":"breaking-good-api","timestamp":"2025-04-26 12:02:33"}
{"level":"info","message":"Attempting 3D structure generation for: 4-(4-morpholinylpiperidin-1-yl)-N-isopropyl-N-(4-(quinazolin-6-yl)benzoyl)piperazine","service":"breaking-good-api","timestamp":"2025-04-26 12:02:33"}
{"level":"warn","message":"Failed 3D structure generation for valid SMILES: 4-(4-morpholinylpiperidin-1-yl)-N-isopropyl-N-(4-(quinazolin-6-yl)benzoyl)piperazine - Unknown structure error","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Added molecule with properties but without 3D structure: 4-(4-morpholinylpiperidin-1-yl)-N-isopropyl-N-(4-(quinazolin-6-yl)benzoyl)piperazine","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Validating SMILES: COc1ccc(cc1OC)CCN1CCN(CC1)C(=O)c1cc(on1)c1ccc(F)cc1F.Cl","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Attempting 3D structure generation for: COc1ccc(cc1OC)CCN1CCN(CC1)C(=O)c1cc(on1)c1ccc(F)cc1F.Cl","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): COc1ccc(cc1OC)CCN1CCN(CC1)C(=O)c1cc(on1)c1ccc(F)cc1F.Cl","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Validated 5 molecules (Props & 3D) out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Saving results to file for request fcd8580a-edfe-406d-bf77-cfda3a3f4460","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-26 12:02:34"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-26 12:02:35"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 1, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 12:03:37"}
{"0":"[","1":"\n","10":"\"","100":"l","101":"o","102":"!","103":" ","104":"H","105":"o","106":"w","107":" ","108":"c","109":"a","11":"r","110":"n","111":" ","112":"I","113":" ","114":"h","115":"e","116":"l","117":"p","118":" ","119":"w","12":"o","120":"i","121":"t","122":"h","123":" ","124":"d","125":"r","126":"u","127":"g","128":" ","129":"d","13":"l","130":"e","131":"s","132":"i","133":"g","134":"n","135":" ","136":"t","137":"o","138":"d","139":"a","14":"e","140":"y","141":"?","142":"\"","143":"\n","144":" ","145":" ","146":" ","147":" ","148":" ","149":" ","15":"\"","150":"}","151":"\n","152":" ","153":" ","154":" ","155":" ","156":"]","157":"\n","158":" ","159":" ","16":":","160":"}","161":",","162":"\n","163":" ","164":" ","165":"{","166":"\n","167":" ","168":" ","169":" ","17":" ","170":" ","171":"\"","172":"r","173":"o","174":"l","175":"e","176":"\"","177":":","178":" ","179":"\"","18":"\"","180":"u","181":"s","182":"e","183":"r","184":"\"","185":",","186":"\n","187":" ","188":" ","189":" ","19":"a","190":" ","191":"\"","192":"c","193":"o","194":"n","195":"t","196":"e","197":"n","198":"t","199":"\"","2":" ","20":"s","200":":","201":" ","202":"[","203":"\n","204":" ","205":" ","206":" ","207":" ","208":" ","209":" ","21":"s","210":"{","211":"\n","212":" ","213":" ","214":" ","215":" ","216":" ","217":" ","218":" ","219":" ","22":"i","220":"\"","221":"t","222":"y","223":"p","224":"e","225":"\"","226":":","227":" ","228":"\"","229":"t","23":"s","230":"e","231":"x","232":"t","233":"\"","234":",","235":"\n","236":" ","237":" ","238":" ","239":" ","24":"t","240":" ","241":" ","242":" ","243":" ","244":"\"","245":"t","246":"e","247":"x","248":"t","249":"\"","25":"a","250":":","251":" ","252":"\"","253":"[","254":"F","255":"o","256":"c","257":"u","258":"s","259":" ","26":"n","260":"o","261":"n","262":" ","263":"M","264":"o","265":"l","266":"e","267":"c","268":"u","269":"l","27":"t","270":"e","271":":","272":" ","273":"M","274":"o","275":"l","276":"e","277":"c","278":"u","279":"l","28":"\"","280":"e","281":" ","282":"C","283":"a","284":"n","285":"d","286":"i","287":"d","288":"a","289":"t","29":",","290":"e","291":" ","292":"1","293":",","294":" ","295":"S","296":"M","297":"I","298":"L","299":"E","3":" ","30":"\n","300":"S","301":":","302":" ","303":"F","304":"C","305":"(","306":"F","307":")","308":"(","309":"F","31":" ","310":")","311":"c","312":"1","313":"c","314":"c","315":"c","316":"(","317":"c","318":"c","319":"1","32":" ","320":")","321":"C","322":"(","323":"=","324":"O","325":")","326":"N","327":"1","328":"C","329":"C","33":" ","330":"N","331":"C","332":"(","333":"C","334":"1","335":")","336":"C","337":"1","338":"C","339":"C","34":" ","340":"N","341":"(","342":"C","343":"C","344":"1","345":")","346":"c","347":"1","348":"n","349":"c","35":"\"","350":"n","351":"c","352":"2","353":"[","354":"n","355":"H","356":"]","357":"c","358":"c","359":"c","36":"c","360":"1","361":"2","362":"]","363":"\"","364":"\n","365":" ","366":" ","367":" ","368":" ","369":" ","37":"o","370":" ","371":"}","372":"\n","373":" ","374":" ","375":" ","376":" ","377":"]","378":"\n","379":" ","38":"n","380":" ","381":"}","382":",","383":"\n","384":" ","385":" ","386":"{","387":"\n","388":" ","389":" ","39":"t","390":" ","391":" ","392":"\"","393":"r","394":"o","395":"l","396":"e","397":"\"","398":":","399":" ","4":"{","40":"e","400":"\"","401":"u","402":"s","403":"e","404":"r","405":"\"","406":",","407":"\n","408":" ","409":" ","41":"n","410":" ","411":" ","412":"\"","413":"c","414":"o","415":"n","416":"t","417":"e","418":"n","419":"t","42":"t","420":"\"","421":":","422":" ","423":"[","424":"\n","425":" ","426":" ","427":" ","428":" ","429":" ","43":"\"","430":" ","431":"{","432":"\n","433":" ","434":" ","435":" ","436":" ","437":" ","438":" ","439":" ","44":":","440":" ","441":"\"","442":"t","443":"y","444":"p","445":"e","446":"\"","447":":","448":" ","449":"\"","45":" ","450":"t","451":"e","452":"x","453":"t","454":"\"","455":",","456":"\n","457":" ","458":" ","459":" ","46":"[","460":" ","461":" ","462":" ","463":" ","464":" ","465":"\"","466":"t","467":"e","468":"x","469":"t","47":"\n","470":"\"","471":":","472":" ","473":"\"","474":"e","475":"x","476":"p","477":"l","478":"a","479":"i","48":" ","480":"n","481":" ","482":"t","483":"h","484":"i","485":"s","486":" ","487":"c","488":"a","489":"n","49":" ","490":"d","491":"i","492":"d","493":"a","494":"t","495":"e","496":"\"","497":"\n","498":" ","499":" ","5":"\n","50":" ","500":" ","501":" ","502":" ","503":" ","504":"}","505":"\n","506":" ","507":" ","508":" ","509":" ","51":" ","510":"]","511":"\n","512":" ","513":" ","514":"}","515":"\n","516":"]","52":" ","53":" ","54":"{","55":"\n","56":" ","57":" ","58":" ","59":" ","6":" ","60":" ","61":" ","62":" ","63":" ","64":"\"","65":"t","66":"y","67":"p","68":"e","69":"\"","7":" ","70":":","71":" ","72":"\"","73":"t","74":"e","75":"x","76":"t","77":"\"","78":",","79":"\n","8":" ","80":" ","81":" ","82":" ","83":" ","84":" ","85":" ","86":" ","87":" ","88":"\"","89":"t","9":" ","90":"e","91":"x","92":"t","93":"\"","94":":","95":" ","96":"\"","97":"H","98":"e","99":"l","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 12:03:37"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 12:03:37"}
{"level":"info","message":"Received response from Anthropic API.","service":"breaking-good-api","timestamp":"2025-04-26 12:03:46"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:16:48"}
{"level":"info","message":"Received molecule generation request with requirements: ADHD thing make","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"Created request ID: 67ee80bf-579e-4b8a-bf54-2f3e1e91bf0f","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"User prompt length: 640 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:17:15"}
{"level":"info","message":"Claude API response received: msg_01PPo5M58A7rvBHM4UW2ygbm","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Response content type: object","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Content is array with 1 items","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Received Claude response with ID: msg_01PPo5M58A7rvBHM4UW2ygbm","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Using string content directly, length: 8166","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Extracted 8166 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Found 3 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Validating SMILES: C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4","service":"breaking-good-api","timestamp":"2025-04-26 12:17:59"}
{"level":"info","message":"Attempting 3D structure generation for: C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4","service":"breaking-good-api","timestamp":"2025-04-26 12:18:00"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4","service":"breaking-good-api","timestamp":"2025-04-26 12:18:00"}
{"level":"info","message":"Validating SMILES: COc1cc(OC)c(cc1NC(=O)C2CCN(CC2)Cc3c(OC)cc4c(c3)OCO4)C(=O)N5CCCN(C)CC5","service":"breaking-good-api","timestamp":"2025-04-26 12:18:00"}
{"level":"info","message":"Attempting 3D structure generation for: COc1cc(OC)c(cc1NC(=O)C2CCN(CC2)Cc3c(OC)cc4c(c3)OCO4)C(=O)N5CCCN(C)CC5","service":"breaking-good-api","timestamp":"2025-04-26 12:18:01"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): COc1cc(OC)c(cc1NC(=O)C2CCN(CC2)Cc3c(OC)cc4c(c3)OCO4)C(=O)N5CCCN(C)CC5","service":"breaking-good-api","timestamp":"2025-04-26 12:18:01"}
{"level":"info","message":"Validating SMILES: C1CN(CCN1CCCOc2ccc(F)cc2F)C(=O)c3cncc(c3)C#Cc4cccnc4N","service":"breaking-good-api","timestamp":"2025-04-26 12:18:01"}
{"level":"info","message":"Attempting 3D structure generation for: C1CN(CCN1CCCOc2ccc(F)cc2F)C(=O)c3cncc(c3)C#Cc4cccnc4N","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): C1CN(CCN1CCCOc2ccc(F)cc2F)C(=O)c3cncc(c3)C#Cc4cccnc4N","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Validated 3 molecules (Props & 3D) out of 3 candidates.","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Successfully extracted and validated 3 molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Saving results to file for request 67ee80bf-579e-4b8a-bf54-2f3e1e91bf0f","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-26 12:18:02"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:22:38"}
{"level":"info","message":"Comparing molecules - SMILES1: C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4, SMILES2: COc1cc(OC)c(cc1NC(=O)C2CCN(CC2)Cc3c(OC)cc4c(c3)OCO4)C(=O)N5CCCN(C)CC5, Method: tanimoto","service":"breaking-good-api","timestamp":"2025-04-26 12:23:46"}
{"0":"D","1":"e","10":"p","100":":","1000":"c","1001":"3","1002":")","1003":"O","1004":"C","1005":"O","1006":"4","1007":")","1008":"C","1009":"(","101":" ","1010":"=","1011":"O","1012":")","1013":"N","1014":"5","1015":"C","1016":"C","1017":"C","1018":"N","1019":"(","102":"C","1020":"C","1021":")","1022":"C","1023":"C","1024":"5","1025":"\"","1026":",","1027":" ","1028":"\"","1029":"p","103":"O","1030":"r","1031":"o","1032":"p","1033":"e","1034":"r","1035":"t","1036":"i","1037":"e","1038":"s","1039":"\"","104":"c","1040":":","1041":" ","1042":"{","1043":"\"","1044":"m","1045":"o","1046":"l","1047":"e","1048":"c","1049":"u","105":"1","1050":"l","1051":"a","1052":"r","1053":"_","1054":"w","1055":"e","1056":"i","1057":"g","1058":"h","1059":"t","106":"c","1060":"\"","1061":":","1062":" ","1063":"5","1064":"6","1065":"8","1066":".","1067":"6","1068":"7","1069":"1","107":"c","1070":"0","1071":"0","1072":"0","1073":"0","1074":"0","1075":"0","1076":"0","1077":"0","1078":"1","1079":"9","108":"(","1080":",","1081":" ","1082":"\"","1083":"l","1084":"o","1085":"g","1086":"p","1087":"\"","1088":":","1089":" ","109":"O","1090":"3","1091":".","1092":"0","1093":"6","1094":"9","1095":"5","1096":"0","1097":"0","1098":"0","1099":"0","11":"a","110":"C","1100":"0","1101":"0","1102":"0","1103":"0","1104":"0","1105":"0","1106":"1","1107":"4","1108":",","1109":" ","111":")","1110":"\"","1111":"n","1112":"u","1113":"m","1114":"_","1115":"h","1116":"_","1117":"d","1118":"o","1119":"n","112":"c","1120":"o","1121":"r","1122":"s","1123":"\"","1124":":","1125":" ","1126":"1","1127":",","1128":" ","1129":"\"","113":"(","1130":"n","1131":"u","1132":"m","1133":"_","1134":"h","1135":"_","1136":"a","1137":"c","1138":"c","1139":"e","114":"c","1140":"p","1141":"t","1142":"o","1143":"r","1144":"s","1145":"\"","1146":":","1147":" ","1148":"9","1149":",","115":"c","1150":" ","1151":"\"","1152":"n","1153":"u","1154":"m","1155":"_","1156":"r","1157":"o","1158":"t","1159":"a","116":"1","1160":"t","1161":"a","1162":"b","1163":"l","1164":"e","1165":"_","1166":"b","1167":"o","1168":"n","1169":"d","117":"N","1170":"s","1171":"\"","1172":":","1173":" ","1174":"1","1175":"2","1176":",","1177":" ","1178":"\"","1179":"n","118":"C","1180":"u","1181":"m","1182":"_","1183":"r","1184":"i","1185":"n","1186":"g","1187":"s","1188":"\"","1189":":","119":"(","1190":" ","1191":"5","1192":",","1193":" ","1194":"\"","1195":"t","1196":"p","1197":"s","1198":"a","1199":"\"","12":"r","120":"=","1200":":","1201":" ","1202":"1","1203":"0","1204":"2","1205":".","1206":"0","1207":"3","1208":"9","1209":"9","121":"O","1210":"9","1211":"9","1212":"9","1213":"9","1214":"9","1215":"9","1216":"9","1217":"9","1218":"9","1219":"9","122":")","1220":",","1221":" ","1222":"\"","1223":"q","1224":"e","1225":"d","1226":"\"","1227":":","1228":" ","1229":"0","123":"C","1230":".","1231":"5","1232":"1","1233":"4","1234":"8","1235":"7","1236":"5","1237":"5","1238":"2","1239":"3","124":"2","1240":"1","1241":"7","1242":"5","1243":"7","1244":"3","1245":"1","1246":"2","1247":",","1248":" ","1249":"\"","125":"C","1250":"f","1251":"o","1252":"r","1253":"m","1254":"u","1255":"l","1256":"a","1257":"\"","1258":":","1259":" ","126":"C","1260":"\"","1261":"C","1262":"3","1263":"0","1264":"H","1265":"4","1266":"0","1267":"N","1268":"4","1269":"O","127":"N","1270":"7","1271":"\"","1272":",","1273":" ","1274":"\"","1275":"l","1276":"i","1277":"p","1278":"i","1279":"n","128":"(","1280":"s","1281":"k","1282":"i","1283":"_","1284":"v","1285":"i","1286":"o","1287":"l","1288":"a","1289":"t","129":"C","1290":"i","1291":"o","1292":"n","1293":"s","1294":"\"","1295":":","1296":" ","1297":"1","1298":"}","1299":"}","13":"i","130":"C","1300":",","1301":" ","1302":"\"","1303":"m","1304":"c","1305":"s","1306":"\"","1307":":","1308":" ","1309":"{","131":"2","1310":"\"","1311":"s","1312":"m","1313":"a","1314":"r","1315":"t","1316":"s","1317":"\"","1318":":","1319":" ","132":")","1320":"\"","1321":"[","1322":"#","1323":"6","1324":"]","1325":"(","1326":"-","1327":",","1328":":","1329":"[","133":"C","1330":"#","1331":"6","1332":"]","1333":"-","1334":",","1335":":","1336":"[","1337":"#","1338":"6","1339":"]","134":"c","1340":"(","1341":"-","1342":"[","1343":"#","1344":"6","1345":"]","1346":"(","1347":"=","1348":"[","1349":"#","135":"3","1350":"8","1351":"]","1352":")","1353":"-","1354":"[","1355":"#","1356":"7","1357":"]","1358":"-","1359":"[","136":"c","1360":"#","1361":"6","1362":"]","1363":"-","1364":"[","1365":"#","1366":"6","1367":"]","1368":"-","1369":"[","137":"(","1370":"#","1371":"7","1372":"]","1373":"(","1374":"-","1375":"[","1376":"#","1377":"6","1378":"]","1379":"-","138":"O","1380":"[","1381":"#","1382":"6","1383":"]","1384":")","1385":"-","1386":"[","1387":"#","1388":"6","1389":"]","139":"C","1390":")","1391":"-","1392":",","1393":":","1394":"[","1395":"#","1396":"6","1397":"]","1398":")","1399":"-","14":"n","140":")","1400":",","1401":":","1402":"[","1403":"#","1404":"6","1405":"]","1406":"\"","1407":",","1408":" ","1409":"\"","141":"c","1410":"n","1411":"u","1412":"m","1413":"_","1414":"a","1415":"t","1416":"o","1417":"m","1418":"s","1419":"\"","142":"c","1420":":","1421":" ","1422":"1","1423":"4","1424":",","1425":" ","1426":"\"","1427":"n","1428":"u","1429":"m","143":"4","1430":"_","1431":"b","1432":"o","1433":"n","1434":"d","1435":"s","1436":"\"","1437":":","1438":" ","1439":"1","144":"c","1440":"3","1441":"}","1442":"}","1443":"\n","145":"(","146":"c","147":"3","148":")","149":"O","15":"g","150":"C","151":"O","152":"4","153":")","154":"C","155":"(","156":"=","157":"O","158":")","159":"N","16":" ","160":"5","161":"C","162":"C","163":"C","164":"N","165":"(","166":"C","167":")","168":"C","169":"C","17":"m","170":"5","171":",","172":" ","173":"M","174":"e","175":"t","176":"h","177":"o","178":"d","179":":","18":"o","180":" ","181":"t","182":"a","183":"n","184":"i","185":"m","186":"o","187":"t","188":"o","189":"\n","19":"l","190":"D","191":"e","192":"b","193":"u","194":"g","195":":","196":" ","197":"S","198":"u","199":"c","2":"b","20":"e","200":"c","201":"e","202":"s","203":"s","204":"f","205":"u","206":"l","207":"l","208":"y","209":" ","21":"c","210":"p","211":"a","212":"r","213":"s","214":"e","215":"d","216":" ","217":"b","218":"o","219":"t","22":"u","220":"h","221":" ","222":"m","223":"o","224":"l","225":"e","226":"c","227":"u","228":"l","229":"e","23":"l","230":"s","231":"\n","232":"D","233":"e","234":"b","235":"u","236":"g","237":":","238":" ","239":"G","24":"e","240":"e","241":"n","242":"e","243":"r","244":"a","245":"t","246":"e","247":"d","248":" ","249":"f","25":"s","250":"i","251":"n","252":"g","253":"e","254":"r","255":"p","256":"r","257":"i","258":"n","259":"t","26":" ","260":"s","261":" ","262":"-","263":" ","264":"F","265":"P","266":"1","267":" ","268":"b","269":"i","27":"-","270":"t","271":"s","272":":","273":" ","274":"5","275":"2","276":",","277":" ","278":"F","279":"P","28":" ","280":"2","281":" ","282":"b","283":"i","284":"t","285":"s","286":":","287":" ","288":"6","289":"2","29":"S","290":"\n","291":"D","292":"e","293":"b","294":"u","295":"g","296":":","297":" ","298":"C","299":"a","3":"u","30":"M","300":"l","301":"c","302":"u","303":"l","304":"a","305":"t","306":"e","307":"d","308":" ","309":"s","31":"I","310":"i","311":"m","312":"i","313":"l","314":"a","315":"r","316":"i","317":"t","318":"y","319":" ","32":"L","320":"u","321":"s","322":"i","323":"n","324":"g","325":" ","326":"t","327":"a","328":"n","329":"i","33":"E","330":"m","331":"o","332":"t","333":"o","334":":","335":" ","336":"0","337":".","338":"2","339":"1","34":"S","340":"2","341":"7","342":"6","343":"5","344":"9","345":"5","346":"7","347":"4","348":"4","349":"6","35":"1","350":"8","351":"0","352":"8","353":"5","354":"\n","355":"D","356":"e","357":"b","358":"u","359":"g","36":":","360":":","361":" ","362":"C","363":"a","364":"l","365":"c","366":"u","367":"l","368":"a","369":"t","37":" ","370":"e","371":"d","372":" ","373":"p","374":"r","375":"o","376":"p","377":"e","378":"r","379":"t","38":"C","380":"i","381":"e","382":"s","383":" ","384":"f","385":"o","386":"r","387":" ","388":"b","389":"o","39":"1","390":"t","391":"h","392":" ","393":"m","394":"o","395":"l","396":"e","397":"c","398":"u","399":"l","4":"g","40":"C","400":"e","401":"s","402":"\n","403":"D","404":"e","405":"b","406":"u","407":"g","408":":","409":" ","41":"C","410":"F","411":"o","412":"u","413":"n","414":"d","415":" ","416":"M","417":"C","418":"S","419":" ","42":"(","420":"-","421":" ","422":"A","423":"t","424":"o","425":"m","426":"s","427":":","428":" ","429":"1","43":"C","430":"4","431":",","432":" ","433":"B","434":"o","435":"n","436":"d","437":"s","438":":","439":" ","44":"(","440":"1","441":"3","442":"\n","443":"D","444":"e","445":"b","446":"u","447":"g","448":":","449":" ","45":"=","450":"R","451":"e","452":"t","453":"u","454":"r","455":"n","456":"i","457":"n","458":"g","459":" ","46":"O","460":"r","461":"e","462":"s","463":"u","464":"l","465":"t","466":" ","467":"w","468":"i","469":"t","47":")","470":"h","471":" ","472":"s","473":"i","474":"m","475":"i","476":"l","477":"a","478":"r","479":"i","48":"N","480":"t","481":"y","482":" ","483":"s","484":"c","485":"o","486":"r","487":"e","488":":","489":" ","49":"C","490":"0","491":".","492":"2","493":"1","494":"2","495":"7","496":"6","497":"5","498":"9","499":"5","5":":","50":"C","500":"7","501":"4","502":"4","503":"6","504":"8","505":"0","506":"8","507":"5","508":"\n","509":"{","51":"N","510":"\"","511":"s","512":"i","513":"m","514":"i","515":"l","516":"a","517":"r","518":"i","519":"t","52":"2","520":"y","521":"\"","522":":","523":" ","524":"{","525":"\"","526":"m","527":"e","528":"t","529":"h","53":"C","530":"o","531":"d","532":"\"","533":":","534":" ","535":"\"","536":"t","537":"a","538":"n","539":"i","54":"C","540":"m","541":"o","542":"t","543":"o","544":"\"","545":",","546":" ","547":"\"","548":"s","549":"c","55":"N","550":"o","551":"r","552":"e","553":"\"","554":":","555":" ","556":"0","557":".","558":"2","559":"1","56":"(","560":"2","561":"7","562":"6","563":"5","564":"9","565":"5","566":"7","567":"4","568":"4","569":"6","57":"C","570":"8","571":"0","572":"8","573":"5","574":"}","575":",","576":" ","577":"\"","578":"m","579":"o","58":"C","580":"l","581":"e","582":"c","583":"u","584":"l","585":"e","586":"1","587":"\"","588":":","589":" ","59":"2","590":"{","591":"\"","592":"s","593":"m","594":"i","595":"l","596":"e","597":"s","598":"\"","599":":","6":" ","60":")","600":" ","601":"\"","602":"C","603":"1","604":"C","605":"C","606":"(","607":"C","608":"(","609":"=","61":"c","610":"O","611":")","612":"N","613":"C","614":"C","615":"N","616":"2","617":"C","618":"C","619":"N","62":"3","620":"(","621":"C","622":"C","623":"2","624":")","625":"c","626":"3","627":"c","628":"c","629":"c","63":"c","630":"c","631":"(","632":"C","633":"l","634":")","635":"c","636":"3","637":")","638":"C","639":"N","64":"c","640":"(","641":"C","642":"1","643":")","644":"C","645":"(","646":"=","647":"O","648":")","649":"C","65":"c","650":"4","651":"C","652":"C","653":"C","654":"4","655":"\"","656":",","657":" ","658":"\"","659":"p","66":"c","660":"r","661":"o","662":"p","663":"e","664":"r","665":"t","666":"i","667":"e","668":"s","669":"\"","67":"(","670":":","671":" ","672":"{","673":"\"","674":"m","675":"o","676":"l","677":"e","678":"c","679":"u","68":"C","680":"l","681":"a","682":"r","683":"_","684":"w","685":"e","686":"i","687":"g","688":"h","689":"t","69":"l","690":"\"","691":":","692":" ","693":"4","694":"3","695":"2","696":".","697":"9","698":"9","699":"5","7":"C","70":")","700":"9","701":"9","702":"9","703":"9","704":"9","705":"9","706":"9","707":"9","708":"9","709":"6","71":"c","710":",","711":" ","712":"\"","713":"l","714":"o","715":"g","716":"p","717":"\"","718":":","719":" ","72":"3","720":"2","721":".","722":"6","723":"1","724":"6","725":"9","726":"0","727":"0","728":"0","729":"0","73":")","730":"0","731":"0","732":"0","733":"0","734":"0","735":"0","736":"1","737":",","738":" ","739":"\"","74":"C","740":"n","741":"u","742":"m","743":"_","744":"h","745":"_","746":"d","747":"o","748":"n","749":"o","75":"N","750":"r","751":"s","752":"\"","753":":","754":" ","755":"1","756":",","757":" ","758":"\"","759":"n","76":"(","760":"u","761":"m","762":"_","763":"h","764":"_","765":"a","766":"c","767":"c","768":"e","769":"p","77":"C","770":"t","771":"o","772":"r","773":"s","774":"\"","775":":","776":" ","777":"4","778":",","779":" ","78":"1","780":"\"","781":"n","782":"u","783":"m","784":"_","785":"r","786":"o","787":"t","788":"a","789":"t","79":")","790":"a","791":"b","792":"l","793":"e","794":"_","795":"b","796":"o","797":"n","798":"d","799":"s","8":"o","80":"C","800":"\"","801":":","802":" ","803":"6","804":",","805":" ","806":"\"","807":"n","808":"u","809":"m","81":"(","810":"_","811":"r","812":"i","813":"n","814":"g","815":"s","816":"\"","817":":","818":" ","819":"4","82":"=","820":",","821":" ","822":"\"","823":"t","824":"p","825":"s","826":"a","827":"\"","828":":","829":" ","83":"O","830":"5","831":"5","832":".","833":"8","834":"9","835":"0","836":"0","837":"0","838":"0","839":"0","84":")","840":"0","841":"0","842":"0","843":"0","844":"0","845":"0","846":"1","847":",","848":" ","849":"\"","85":"C","850":"q","851":"e","852":"d","853":"\"","854":":","855":" ","856":"0","857":".","858":"7","859":"5","86":"4","860":"0","861":"3","862":"2","863":"0","864":"7","865":"9","866":"2","867":"3","868":"3","869":"2","87":"C","870":"5","871":"8","872":"0","873":"2","874":",","875":" ","876":"\"","877":"f","878":"o","879":"r","88":"C","880":"m","881":"u","882":"l","883":"a","884":"\"","885":":","886":" ","887":"\"","888":"C","889":"2","89":"C","890":"3","891":"H","892":"3","893":"3","894":"C","895":"l","896":"N","897":"4","898":"O","899":"2","9":"m","90":"4","900":"\"","901":",","902":" ","903":"\"","904":"l","905":"i","906":"p","907":"i","908":"n","909":"s","91":",","910":"k","911":"i","912":"_","913":"v","914":"i","915":"o","916":"l","917":"a","918":"t","919":"i","92":" ","920":"o","921":"n","922":"s","923":"\"","924":":","925":" ","926":"0","927":"}","928":"}","929":",","93":"S","930":" ","931":"\"","932":"m","933":"o","934":"l","935":"e","936":"c","937":"u","938":"l","939":"e","94":"M","940":"2","941":"\"","942":":","943":" ","944":"{","945":"\"","946":"s","947":"m","948":"i","949":"l","95":"I","950":"e","951":"s","952":"\"","953":":","954":" ","955":"\"","956":"C","957":"O","958":"c","959":"1","96":"L","960":"c","961":"c","962":"(","963":"O","964":"C","965":")","966":"c","967":"(","968":"c","969":"c","97":"E","970":"1","971":"N","972":"C","973":"(","974":"=","975":"O","976":")","977":"C","978":"2","979":"C","98":"S","980":"C","981":"N","982":"(","983":"C","984":"C","985":"2","986":")","987":"C","988":"c","989":"3","99":"2","990":"c","991":"(","992":"O","993":"C","994":")","995":"c","996":"c","997":"4","998":"c","999":"(","level":"error","message":"Invalid similarity score in comparison result:","service":"breaking-good-api","timestamp":"2025-04-26 12:23:47"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:25:27"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:27:26"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:29:10"}
{"level":"info","message":"Received molecule generation request with requirements: help me with depression ","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"Created request ID: 4055c269-6e08-44f4-a26d-e16f29f2c4a7","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"User prompt length: 649 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:31:53"}
{"level":"info","message":"Claude API response received: msg_01QpyGjzmn1HqmW1azvx25mv","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Response content type: object","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Content is array with 1 items","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Received Claude response with ID: msg_01QpyGjzmn1HqmW1azvx25mv","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Using string content directly, length: 7340","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Extracted 7340 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Found 4 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Validating SMILES: Clc1ccc(cc1Cl)C2=CCN(CC2)CCCN(C)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Attempting 3D structure generation for: Clc1ccc(cc1Cl)C2=CCN(CC2)CCCN(C)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:30"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): Clc1ccc(cc1Cl)C2=CCN(CC2)CCCN(C)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"info","message":"Validating SMILES: R)-4-(2-(4-fluorophenyl)-4-methyl-5-oxo-4,5-dihydro-1H-imidazol-1-yl)-N-(3-(pyridin-3-yl)phenyl)butanamide","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"info","message":"Attempting 3D structure generation for: R)-4-(2-(4-fluorophenyl)-4-methyl-5-oxo-4,5-dihydro-1H-imidazol-1-yl)-N-(3-(pyridin-3-yl)phenyl)butanamide","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"warn","message":"Failed 3D structure generation for valid SMILES: R)-4-(2-(4-fluorophenyl)-4-methyl-5-oxo-4,5-dihydro-1H-imidazol-1-yl)-N-(3-(pyridin-3-yl)phenyl)butanamide - Unknown structure error","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"info","message":"Added molecule with properties but without 3D structure: R)-4-(2-(4-fluorophenyl)-4-methyl-5-oxo-4,5-dihydro-1H-imidazol-1-yl)-N-(3-(pyridin-3-yl)phenyl)butanamide","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"info","message":"Validating SMILES: Fc1ccc(cc1)C2=NC(=O)C(C)(N2CCCC(=O)Nc3cccc(c3)c4cccnc4)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:31"}
{"level":"info","message":"Attempting 3D structure generation for: Fc1ccc(cc1)C2=NC(=O)C(C)(N2CCCC(=O)Nc3cccc(c3)c4cccnc4)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:32"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): Fc1ccc(cc1)C2=NC(=O)C(C)(N2CCCC(=O)Nc3cccc(c3)c4cccnc4)C","service":"breaking-good-api","timestamp":"2025-04-26 12:32:32"}
{"level":"info","message":"Validating SMILES: Oc1ccc(cc1O)C2=CC(=O)c3ccc(NCCN)cc3O2","service":"breaking-good-api","timestamp":"2025-04-26 12:32:32"}
{"level":"info","message":"Attempting 3D structure generation for: Oc1ccc(cc1O)C2=CC(=O)c3ccc(NCCN)cc3O2","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): Oc1ccc(cc1O)C2=CC(=O)c3ccc(NCCN)cc3O2","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Validated 4 molecules (Props & 3D) out of 4 candidates.","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Successfully extracted and validated 4 molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Saving results to file for request 4055c269-6e08-44f4-a26d-e16f29f2c4a7","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-26 12:32:33"}
{"level":"info","message":"Received molecule generation request with requirements: help with depression","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"Created request ID: ac78feba-1c32-43c8-910a-eb1641905fbc","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"User prompt length: 645 characters","service":"breaking-good-api","timestamp":"2025-04-26 12:33:50"}
{"level":"info","message":"Claude API response received: msg_01HgX5PEHY4UrFCnRuyFgc3p","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Response content type: object","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Content is array with 1 items","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Received Claude response with ID: msg_01HgX5PEHY4UrFCnRuyFgc3p","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Processing Claude response to extract molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Processing Claude response for molecule design","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Using string content directly, length: 8552","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Extracted 8552 characters of text from Claude response","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Found 5 SMILES candidates via regex.","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Validating SMILES: COc1ccc2[nH]cc(CCN3CCN(c4cccc(F)c4)CC3)c2c1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Attempting 3D structure generation for: COc1ccc2[nH]cc(CCN3CCN(c4cccc(F)c4)CC3)c2c1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): COc1ccc2[nH]cc(CCN3CCN(c4cccc(F)c4)CC3)c2c1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Validating SMILES: COCCNC(=O)C1(c2ccc(Cl)cc2)CCC(NCCc2ccccc2)CC1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:37"}
{"level":"info","message":"Attempting 3D structure generation for: COCCNC(=O)C1(c2ccc(Cl)cc2)CCC(NCCc2ccccc2)CC1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:38"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): COCCNC(=O)C1(c2ccc(Cl)cc2)CCC(NCCc2ccccc2)CC1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:38"}
{"level":"info","message":"Validating SMILES: 1-(4-chlorophenyl)-4-(phenethylamino)cyclohexanecarboxamide-N-(2-methoxyethyl","service":"breaking-good-api","timestamp":"2025-04-26 12:34:38"}
{"level":"info","message":"Attempting 3D structure generation for: 1-(4-chlorophenyl)-4-(phenethylamino)cyclohexanecarboxamide-N-(2-methoxyethyl","service":"breaking-good-api","timestamp":"2025-04-26 12:34:39"}
{"level":"warn","message":"Failed 3D structure generation for valid SMILES: 1-(4-chlorophenyl)-4-(phenethylamino)cyclohexanecarboxamide-N-(2-methoxyethyl - Unknown structure error","service":"breaking-good-api","timestamp":"2025-04-26 12:34:39"}
{"level":"info","message":"Added molecule with properties but without 3D structure: 1-(4-chlorophenyl)-4-(phenethylamino)cyclohexanecarboxamide-N-(2-methoxyethyl","service":"breaking-good-api","timestamp":"2025-04-26 12:34:39"}
{"level":"info","message":"Validating SMILES: Cc1ccc(C(=O)NCCN2CCC(c3cccc(F)c3)(CC(=O)N)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:39"}
{"level":"info","message":"Attempting 3D structure generation for: Cc1ccc(C(=O)NCCN2CCC(c3cccc(F)c3)(CC(=O)N)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:39"}
{"level":"info","message":"Successfully validated SMILES (Props & 3D): Cc1ccc(C(=O)NCCN2CCC(c3cccc(F)c3)(CC(=O)N)CC2)cc1","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Validating SMILES: 4-methyl-N-(2-(4-(3-fluorophenyl)-4-(carbamoylmethyl)piperidin-1-yl)ethyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Attempting 3D structure generation for: 4-methyl-N-(2-(4-(3-fluorophenyl)-4-(carbamoylmethyl)piperidin-1-yl)ethyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"warn","message":"Failed 3D structure generation for valid SMILES: 4-methyl-N-(2-(4-(3-fluorophenyl)-4-(carbamoylmethyl)piperidin-1-yl)ethyl)benzamide - Unknown structure error","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Added molecule with properties but without 3D structure: 4-methyl-N-(2-(4-(3-fluorophenyl)-4-(carbamoylmethyl)piperidin-1-yl)ethyl)benzamide","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Validated 5 molecules (Props & 3D) out of 5 candidates.","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Successfully extracted and validated 5 molecules","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Saving results to file for request ac78feba-1c32-43c8-910a-eb1641905fbc","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Enhancing molecules with ADMET predictions...","service":"breaking-good-api","timestamp":"2025-04-26 12:34:40"}
{"level":"info","message":"Finished enhancing molecules.","service":"breaking-good-api","timestamp":"2025-04-26 12:34:41"}
{"level":"debug","message":"Received /convert request. Format: mol -> smiles. Preview: \n  -INDIGO-04262512362D\n\n  0  0  0  0  0  0  0  0  0  0999 V2000\nM  END\n","service":"breaking-good-api","timestamp":"2025-04-26 12:36:41"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:41"}
{"0":"\n  -INDIGO-04262512362D\n\n  0  0  0  0  0  0  0  0  0  0999 V2000\nM  END\n","1":"mol","2":"smiles","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:41"}
{"level":"debug","message":"Received /convert request. Format: mol -> smiles. Preview: \n  -INDIGO-04262512362D\n\n  0  0  0  0  0  0  0  0  0  0999 V2000\nM  END\n","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"0":"\n  -INDIGO-04262512362D\n\n  0  0  0  0  0  0  0  0  0  0999 V2000\nM  END\n","1":"mol","2":"smiles","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"debug","message":"Received /convert request. Format: smiles -> mol. Preview: C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"0":"C1CC(C(=O)NCCN2CCN(CC2)c3cccc(Cl)c3)CN(C1)C(=O)C4CCC4","1":"smiles","2":"mol","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"debug","message":"Received /convert request. Format: mol -> smiles. Preview: \n  -INDIGO-04262512362D\n\n 30 33  0  0  0  0  0  0  0  0999 V2000\n   14.6750   -1.5125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   14.1750   -2.3785    0.0000 C   0  0  0  0  0  0  0  0  0  0  ...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"0":"\n  -INDIGO-04262512362D\n\n 30 33  0  0  0  0  0  0  0  0999 V2000\n   14.6750   -1.5125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   14.1750   -2.3785    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.1750   -2.3785    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   12.6750   -3.2446    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.1750   -4.1106    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   11.6750   -3.2446    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   11.1750   -4.1106    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.1750   -4.1106    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    9.6750   -4.9767    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    8.6750   -4.9767    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.1750   -5.8427    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.6750   -6.7087    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    9.6750   -6.7087    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.1750   -5.8427    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.1750   -7.5747    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    7.1750   -7.5747    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.6750   -8.4407    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    7.1750   -9.3067    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.1750   -9.3067    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.6750  -10.1728    0.0000 Cl  0  0  0  0  0  0  0  0  0  0  0  0\n    8.6750   -8.4407    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   12.6750   -1.5125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.1750   -0.6465    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   14.1750   -0.6465    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   12.6750    0.2196    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   11.6750    0.2196    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   13.1750    1.0856    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   14.1409    1.3444    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.8821    2.3103    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   12.9162    2.0515    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  1  0  0  0  0\n  2  3  1  0  0  0  0\n  3  4  1  0  0  0  0\n  4  5  2  0  0  0  0\n  4  6  1  0  0  0  0\n  6  7  1  0  0  0  0\n  7  8  1  0  0  0  0\n  8  9  1  0  0  0  0\n  9 10  1  0  0  0  0\n 10 11  1  0  0  0  0\n 11 12  1  0  0  0  0\n 12 13  1  0  0  0  0\n 13 14  1  0  0  0  0\n 12 15  1  0  0  0  0\n 15 16  2  0  0  0  0\n 16 17  1  0  0  0  0\n 17 18  2  0  0  0  0\n 18 19  1  0  0  0  0\n 19 20  1  0  0  0  0\n 19 21  2  0  0  0  0\n  3 22  1  0  0  0  0\n 22 23  1  0  0  0  0\n 23 24  1  0  0  0  0\n 23 25  1  0  0  0  0\n 25 26  2  0  0  0  0\n 25 27  1  0  0  0  0\n 27 28  1  0  0  0  0\n 28 29  1  0  0  0  0\n 29 30  1  0  0  0  0\n 24  1  1  0  0  0  0\n 14  9  1  0  0  0  0\n 21 15  1  0  0  0  0\n 30 27  1  0  0  0  0\nM  END\n","1":"mol","2":"smiles","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:55"}
{"level":"debug","message":"Received /convert request. Format: smiles -> mol. Preview: O=C(NCCN1CCN(c2cccc(Cl)c2)CC1)C1CCCN(C(=O)C2CCC2)C1","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"0":"O=C(NCCN1CCN(c2cccc(Cl)c2)CC1)C1CCCN(C(=O)C2CCC2)C1","1":"smiles","2":"mol","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"level":"debug","message":"Received /convert request. Format: mol -> smiles. Preview: \n  -INDIGO-04262512362D\n\n 30 33  0  0  0  0  0  0  0  0999 V2000\n    9.4688   -8.5207    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688   -8.5207    0.0000 C   0  0  0  0  0  0  0  0  0  0  ...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"level":"info","message":"Running format converter script...","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"0":"\n  -INDIGO-04262512362D\n\n 30 33  0  0  0  0  0  0  0  0999 V2000\n    9.4688   -8.5207    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688   -8.5207    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.9688   -7.6547    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688   -6.7887    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.9688   -5.9227    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688   -5.0566    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   10.9688   -4.1906    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688   -3.3246    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    9.4688   -3.3246    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    8.9688   -2.4585    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    9.4688   -1.5925    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.9688   -0.7265    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    7.9688   -0.7265    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    7.4688   -1.5925    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    6.4688   -1.5925    0.0000 Cl  0  0  0  0  0  0  0  0  0  0  0  0\n    7.9688   -2.4585    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    8.9688   -4.1906    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    9.4688   -5.0566    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.9688   -9.3867    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.4688  -10.2528    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   10.9688  -11.1188    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   11.9688  -11.1188    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   12.4688  -10.2528    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n   13.4688  -10.2528    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.9688   -9.3867    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   13.9688  -11.1188    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   13.7100  -12.0847    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   14.6759  -12.3435    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   14.9347  -11.3776    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   11.9688   -9.3867    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  1  2  2  0  0  0  0\n  2  3  1  0  0  0  0\n  3  4  1  0  0  0  0\n  4  5  1  0  0  0  0\n  5  6  1  0  0  0  0\n  6  7  1  0  0  0  0\n  7  8  1  0  0  0  0\n  8  9  1  0  0  0  0\n  9 10  1  0  0  0  0\n 10 11  2  0  0  0  0\n 11 12  1  0  0  0  0\n 12 13  2  0  0  0  0\n 13 14  1  0  0  0  0\n 14 15  1  0  0  0  0\n 14 16  2  0  0  0  0\n  9 17  1  0  0  0  0\n 17 18  1  0  0  0  0\n  2 19  1  0  0  0  0\n 19 20  1  0  0  0  0\n 20 21  1  0  0  0  0\n 21 22  1  0  0  0  0\n 22 23  1  0  0  0  0\n 23 24  1  0  0  0  0\n 24 25  2  0  0  0  0\n 24 26  1  0  0  0  0\n 26 27  1  0  0  0  0\n 27 28  1  0  0  0  0\n 28 29  1  0  0  0  0\n 23 30  1  0  0  0  0\n 18  6  1  0  0  0  0\n 30 19  1  0  0  0  0\n 16 10  1  0  0  0  0\n 29 26  1  0  0  0  0\nM  END\n","1":"mol","2":"smiles","level":"debug","message":"Script args:","service":"breaking-good-api","timestamp":"2025-04-26 12:36:58"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:39:36"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 12:41:57"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 15:35:35"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 15:47:37"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:02:05"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:02:06"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:02:12"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:03:58"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:04:09"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:04:10"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:04:13"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:04:44"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:04:45"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:04:51"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:07:10"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:07:10"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:07:13"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:07:23"}
{"level":"info","message":"Searching Crossref for: d, limit: 10, page: [object Object]","service":"breaking-good-api","timestamp":"2025-04-26 16:07:47"}
{"level":"error","message":"Literature search error: Request failed with status code 500","response":{"message":{"cause":null,"description":"java.lang.NullPointerException: Cannot invoke \"java.lang.Character.charValue()\" because \"x\" is null","message":"Cannot invoke \"java.lang.Character.charValue()\" because \"x\" is null","name":"class java.lang.NullPointerException","stack":["clojure.lang.RT.intCast(RT.java:1221)","cayenne.api.v1.query$parse_offset_val.invokeStatic(query.clj:114)","cayenne.api.v1.query$parse_offset_val.invoke(query.clj:113)","cayenne.api.v1.validate$validate_offsets.invokeStatic(validate.clj:111)","cayenne.api.v1.validate$validate_offsets.doInvoke(validate.clj:109)","clojure.lang.RestFn.applyTo(RestFn.java:146)","clojure.core$apply.invokeStatic(core.clj:675)","clojure.core$partial$fn__5910.doInvoke(core.clj:2646)","clojure.lang.RestFn.invoke(RestFn.java:494)","cayenne.api.v1.validate$validate_paging_params.invokeStatic(validate.clj:430)","cayenne.api.v1.validate$validate_paging_params.invoke(validate.clj:393)","cayenne.api.v1.validate$validate_resource_context.invokeStatic(validate.clj:602)","cayenne.api.v1.validate$validate_resource_context.invoke(validate.clj:594)","cayenne.api.v1.validate$malformed_QMARK_$fn__27289.invoke(validate.clj:631)","liberator.core$decide.invokeStatic(core.clj:82)","liberator.core$decide.invoke(core.clj:74)","liberator.core$malformed_QMARK_.invokeStatic(core.clj:490)","liberator.core$malformed_QMARK_.invoke(core.clj:490)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$method_allowed_QMARK_.invokeStatic(core.clj:493)","liberator.core$method_allowed_QMARK_.invoke(core.clj:493)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$uri_too_long_QMARK_.invokeStatic(core.clj:496)","liberator.core$uri_too_long_QMARK_.invoke(core.clj:496)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$known_method_QMARK_.invokeStatic(core.clj:499)","liberator.core$known_method_QMARK_.invoke(core.clj:499)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$service_available_QMARK_.invokeStatic(core.clj:502)","liberator.core$service_available_QMARK_.invoke(core.clj:502)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$initialize_context.invokeStatic(core.clj:504)","liberator.core$initialize_context.invoke(core.clj:504)","liberator.core$run_resource.invokeStatic(core.clj:595)","liberator.core$run_resource.invoke(core.clj:593)","cayenne.api.v1.routes$works_resource.invokeStatic(routes.clj:109)","cayenne.api.v1.routes$works_resource.invoke(routes.clj:109)","compojure.response$fn__28452.invokeStatic(response.clj:47)","compojure.response$fn__28452.invoke(response.clj:35)","compojure.response$fn__28402$G__28397__28409.invoke(response.clj:7)","compojure.core$wrap_response$fn__28880.invoke(core.clj:158)","compojure.core$pre_init$fn__28931.invoke(core.clj:328)","cayenne.api.auth.apikey$wrap_auth_when_enabled$fn__16641.invoke(apikey.clj:67)","compojure.core$pre_init$fn__28933$fn__28936.invoke(core.clj:335)","compojure.core$wrap_route_middleware$fn__28864.invoke(core.clj:127)","compojure.core$wrap_route_info$fn__28869.invoke(core.clj:137)","compojure.core$wrap_route_matches$fn__28873.invoke(core.clj:146)","compojure.core$routing$fn__28888.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2718)","clojure.core$some.invoke(core.clj:2709)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:669)","clojure.core$apply.invoke(core.clj:662)","compojure.core$routes$fn__28892.invoke(core.clj:192)","compojure.core$routing$fn__28888.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2718)","clojure.core$some.invoke(core.clj:2709)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:669)","clojure.core$apply.invoke(core.clj:662)","compojure.core$routes$fn__28892.invoke(core.clj:192)","compojure.core$routing$fn__28888.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2718)","clojure.core$some.invoke(core.clj:2709)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:669)","clojure.core$apply.invoke(core.clj:662)","compojure.core$routes$fn__28892.invoke(core.clj:192)","compojure.core$wrap_routes$fn__28943.invoke(core.clj:348)","cayenne.api.route$wrap_async$fn__34566.invoke(route.clj:284)","ring.middleware.keyword_params$wrap_keyword_params$fn__34120.invoke(keyword_params.clj:38)","ring.middleware.nested_params$wrap_nested_params$fn__34170.invoke(nested_params.clj:91)","ring.middleware.params$wrap_params$fn__34088.invoke(params.clj:69)","cayenne.api.route$wrap_cors$fn__34525.invoke(route.clj:151)","cayenne.api.route$wrap_heartbeat$fn__34571.invoke(route.clj:310)","cayenne.api.conneg$wrap_accept$fn__18464.invoke(conneg.clj:53)","cayenne.api.route$wrap_exception_handler$fn__34540.invoke(route.clj:206)","cayenne.api.route$wrap_ignore_trailing_slash$fn__34543.invoke(route.clj:214)","ring.middleware.gzip$wrap_gzip$fn__33758.invoke(gzip.clj:102)","ring.logger$wrap_log_request_start$fn__33697.invoke(logger.clj:101)","ring.logger$wrap_log_response$fn__33710.invoke(logger.clj:175)","cayenne.api.route$wrap_raise$fn__34576.invoke(route.clj:315)","ring.adapter.jetty$async_proxy_handler$fn__33894.invoke(jetty.clj:59)","ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)","org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)","org.eclipse.jetty.server.Server.handle(Server.java:516)","org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)","org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)","org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)","org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)","org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)","org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)","org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)","org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)","org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)","org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)","java.base/java.lang.Thread.run(Thread.java:1583)"]},"message-type":"exception","message-version":"1.0.0","status":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 500\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:66:22","timestamp":"2025-04-26 16:07:48"}
{"level":"info","message":"Searching Crossref for: diddy, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:07:51"}
{"level":"info","message":"Found 1 articles (total 1)","service":"breaking-good-api","timestamp":"2025-04-26 16:07:52"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:07:59"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:08:00"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:08:05"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:10:35"}
{"level":"info","message":"Searching Crossref for: diddy, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:10:46"}
{"level":"info","message":"Found 1 articles (total 1)","service":"breaking-good-api","timestamp":"2025-04-26 16:10:47"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:10:52"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:13:49"}
{"level":"info","message":"Searching Crossref for: yes, limit: 10, page: [object Object]","service":"breaking-good-api","timestamp":"2025-04-26 16:14:03"}
{"level":"error","message":"Literature search error: Request failed with status code 500","response":{"message":{"cause":null,"description":"java.lang.NullPointerException","message":null,"name":"class java.lang.NullPointerException","stack":[]},"message-type":"exception","message-version":"1.0.0","status":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 500\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:66:22","timestamp":"2025-04-26 16:14:03"}
{"level":"info","message":"Searching Crossref for: patel, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:14:05"}
{"level":"info","message":"Found 10 articles (total 21729)","service":"breaking-good-api","timestamp":"2025-04-26 16:14:06"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:14:09"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:404:30","timestamp":"2025-04-26 16:14:13"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:23:21"}
{"level":"info","message":"Searching Crossref for: plea, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:23:35"}
{"level":"info","message":"Found 10 articles (total 270)","service":"breaking-good-api","timestamp":"2025-04-26 16:23:36"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:23:40"}
{"0":"[","1":"\n","10":"\"","100":"y","1000":"m","1001":" ","1002":"o","1003":"f","1004":" ","1005":"u","1006":"n","1007":"c","1008":"l","1009":"e","101":",","1010":"a","1011":"r","1012":" ","1013":"b","1014":"o","1015":"u","1016":"n","1017":"d","1018":"a","1019":"r","102":" ","1020":"i","1021":"e","1022":"s","1023":" ","1024":"i","1025":"n","1026":" ","1027":"t","1028":"h","1029":"e","103":"s","1030":" ","1031":"f","1032":"u","1033":"z","1034":"z","1035":"y","1036":" ","1037":"c","1038":"l","1039":"u","104":"p","1040":"s","1041":"t","1042":"e","1043":"r","1044":"i","1045":"n","1046":"g","1047":" ","1048":"p","1049":"r","105":"e","1050":"o","1051":"c","1052":"e","1053":"s","1054":"s","1055":".","1056":" ","1057":"T","1058":"h","1059":"e","106":"c","1060":"n","1061":",","1062":" ","1063":"b","1064":"a","1065":"s","1066":"e","1067":"d","1068":" ","1069":"o","107":"i","1070":"n","1071":" ","1072":"c","1073":"o","1074":"m","1075":"p","1076":"a","1077":"r","1078":"i","1079":"n","108":"a","1080":"g","1081":" ","1082":"t","1083":"h","1084":"e","1085":" ","1086":"o","1087":"r","1088":"i","1089":"g","109":"l","1090":"i","1091":"n","1092":"s","1093":" ","1094":"a","1095":"n","1096":"d","1097":" ","1098":"d","1099":"e","11":"r","110":"i","1100":"v","1101":"e","1102":"l","1103":"o","1104":"p","1105":"m","1106":"e","1107":"n","1108":"t","1109":" ","111":"z","1110":"o","1111":"f","1112":" ","1113":"t","1114":"h","1115":"e","1116":" ","1117":"p","1118":"l","1119":"e","112":"i","1120":"a","1121":"-","1122":"l","1123":"e","1124":"n","1125":"i","1126":"e","1127":"n","1128":"c","1129":"y","113":"n","1130":" ","1131":"s","1132":"y","1133":"s","1134":"t","1135":"e","1136":"m","1137":" ","1138":"a","1139":"n","114":"g","1140":"d","1141":" ","1142":"t","1143":"h","1144":"e","1145":" ","1146":"p","1147":"l","1148":"e","1149":"a","115":" ","1150":"-","1151":"b","1152":"a","1153":"r","1154":"g","1155":"a","1156":"i","1157":"n","1158":" ","1159":"s","116":"i","1160":"y","1161":"s","1162":"t","1163":"e","1164":"m","1165":",","1166":" ","1167":"b","1168":"i","1169":"g","117":"n","1170":" ","1171":"d","1172":"a","1173":"t","1174":"a","1175":" ","1176":"a","1177":"n","1178":"a","1179":"l","118":" ","1180":"y","1181":"s","1182":"i","1183":"s","1184":" ","1185":"o","1186":"f","1187":" ","1188":"t","1189":"h","119":"A","1190":"e","1191":" ","1192":"p","1193":"l","1194":"e","1195":"a","1196":"-","1197":"l","1198":"e","1199":"n","12":"o","120":"D","1200":"i","1201":"e","1202":"n","1203":"c","1204":"y","1205":" ","1206":"s","1207":"y","1208":"s","1209":"t","121":"H","1210":"e","1211":"m","1212":" ","1213":"c","1214":"a","1215":"s","1216":"e","1217":"s","1218":" ","1219":"i","122":"D","1220":"n","1221":" ","1222":"C","1223":"h","1224":"i","1225":"n","1226":"a","1227":" ","1228":"a","1229":"n","123":" ","1230":"d","1231":" ","1232":"t","1233":"h","1234":"e","1235":" ","1236":"p","1237":"l","1238":"e","1239":"a","124":"t","1240":"-","1241":"b","1242":"a","1243":"r","1244":"g","1245":"a","1246":"i","1247":"n","1248":" ","1249":"c","125":"r","1250":"a","1251":"s","1252":"e","1253":"s","1254":" ","1255":"i","1256":"n","1257":" ","1258":"t","1259":"h","126":"e","1260":"e","1261":" ","1262":"U","1263":"n","1264":"i","1265":"t","1266":"e","1267":"d","1268":" ","1269":"S","127":"a","1270":"t","1271":"a","1272":"t","1273":"e","1274":"s","1275":" ","1276":"i","1277":"s","1278":" ","1279":"c","128":"t","1280":"o","1281":"n","1282":"d","1283":"u","1284":"c","1285":"t","1286":"e","1287":"d","1288":" ","1289":"u","129":"m","1290":"s","1291":"i","1292":"n","1293":"g","1294":" ","1295":"t","1296":"h","1297":"e","1298":" ","1299":"f","13":"l","130":"e","1300":"u","1301":"z","1302":"z","1303":"y","1304":" ","1305":"c","1306":"l","1307":"u","1308":"s","1309":"t","131":"n","1310":"e","1311":"r","1312":"i","1313":"n","1314":"g","1315":" ","1316":"m","1317":"e","1318":"t","1319":"h","132":"t","1320":"o","1321":"d","1322":" ","1323":"b","1324":"a","1325":"s","1326":"e","1327":"d","1328":" ","1329":"o","133":"s","1330":"n","1331":" ","1332":"r","1333":"o","1334":"u","1335":"g","1336":"h","1337":" ","1338":"s","1339":"e","134":".","1340":"t","1341":"s","1342":".","1343":" ","1344":"T","1345":"h","1346":"e","1347":" ","1348":"a","1349":"p","135":" ","1350":"p","1351":"l","1352":"i","1353":"c","1354":"a","1355":"t","1356":"i","1357":"o","1358":"n","1359":" ","136":"A","1360":"r","1361":"a","1362":"t","1363":"e","1364":" ","1365":"o","1366":"f","1367":" ","1368":"C","1369":"h","137":"n","1370":"i","1371":"n","1372":"a","1373":"’","1374":"s","1375":" ","1376":"p","1377":"l","1378":"e","1379":"a","138":"a","1380":" ","1381":"l","1382":"e","1383":"n","1384":"i","1385":"e","1386":"n","1387":"c","1388":"y","1389":" ","139":"l","1390":"s","1391":"y","1392":"s","1393":"t","1394":"e","1395":"m","1396":" ","1397":"i","1398":"s","1399":",","14":"e","140":"y","1400":" ","1401":"o","1402":"n","1403":" ","1404":"a","1405":"v","1406":"e","1407":"r","1408":"a","1409":"g","141":"z","1410":"e","1411":",","1412":" ","1413":"4","1414":"9","1415":".","1416":"6","1417":"7","1418":"%","1419":" ","142":"e","1420":"l","1421":"o","1422":"w","1423":"e","1424":"r","1425":" ","1426":"t","1427":"h","1428":"a","1429":"n","143":" ","1430":" ","1431":"t","1432":"h","1433":"a","1434":"t","1435":" ","1436":"o","1437":"f","1438":" ","1439":"t","144":"t","1440":"h","1441":"e","1442":" ","1443":"U","1444":".","1445":"S","1446":".","1447":" ","1448":"p","1449":"l","145":"h","1450":"e","1451":"a","1452":" ","1453":"b","1454":"a","1455":"r","1456":"g","1457":"a","1458":"i","1459":"n","146":"e","1460":"i","1461":"n","1462":"g","1463":" ","1464":"s","1465":"y","1466":"s","1467":"t","1468":"e","1469":"m","147":" ","1470":".","1471":" ","1472":"I","1473":"n","1474":" ","1475":"t","1476":"e","1477":"r","1478":"m","1479":"s","148":"p","1480":" ","1481":"o","1482":"f","1483":" ","1484":"t","1485":"h","1486":"e","1487":" ","1488":"s","1489":"e","149":"r","1490":"n","1491":"t","1492":"e","1493":"n","1494":"c","1495":"i","1496":"n","1497":"g","1498":" ","1499":"r","15":"\"","150":"o","1500":"a","1501":"n","1502":"g","1503":"e","1504":",","1505":" ","1506":"t","1507":"h","1508":"e","1509":" ","151":"v","1510":"p","1511":"l","1512":"e","1513":"a","1514":" ","1515":"l","1516":"e","1517":"n","1518":"i","1519":"e","152":"i","1520":"n","1521":"c","1522":"y","1523":" ","1524":"s","1525":"y","1526":"s","1527":"t","1528":"e","1529":"m","153":"d","1530":" ","1531":"i","1532":"s","1533":" ","1534":"3","1535":"2","1536":".","1537":"7","1538":"3","1539":"%","154":"e","1540":" ","1541":"l","1542":"o","1543":"w","1544":"e","1545":"r","1546":" ","1547":"t","1548":"h","1549":"a","155":"d","1550":"n","1551":" ","1552":"t","1553":"h","1554":"e","1555":" ","1556":"p","1557":"l","1558":"e","1559":"a","156":" ","1560":" ","1561":"b","1562":"a","1563":"r","1564":"g","1565":"a","1566":"i","1567":"n","1568":"i","1569":"n","157":"l","1570":"g","1571":" ","1572":"s","1573":"y","1574":"s","1575":"t","1576":"e","1577":"m","1578":".","1579":" ","158":"i","1580":"C","1581":"o","1582":"m","1583":"p","1584":"a","1585":"r","1586":"e","1587":"d","1588":" ","1589":"t","159":"t","1590":"o","1591":" ","1592":"t","1593":"h","1594":"e","1595":" ","1596":"t","1597":"w","1598":"o","1599":",","16":":","160":"e","1600":" ","1601":"t","1602":"h","1603":"e","1604":" ","1605":"p","1606":"l","1607":"e","1608":"a","1609":" ","161":"r","1610":"l","1611":"e","1612":"n","1613":"i","1614":"e","1615":"n","1616":"c","1617":"y","1618":" ","1619":"s","162":"a","1620":"y","1621":"s","1622":"t","1623":"e","1624":"m","1625":" ","1626":"i","1627":"s","1628":" ","1629":"m","163":"t","1630":"o","1631":"r","1632":"e","1633":" ","1634":"s","1635":"t","1636":"r","1637":"i","1638":"n","1639":"g","164":"u","1640":"e","1641":"n","1642":"t","1643":" ","1644":"i","1645":"n","1646":" ","1647":"t","1648":"e","1649":"r","165":"r","1650":"m","1651":"s","1652":" ","1653":"o","1654":"f","1655":" ","1656":"d","1657":"i","1658":"s","1659":"c","166":"e","1660":"r","1661":"e","1662":"t","1663":"i","1664":"o","1665":"n","1666":"a","1667":"r","1668":"y","1669":" ","167":" ","1670":"l","1671":"i","1672":"m","1673":"i","1674":"t","1675":"s","1676":" ","1677":"a","1678":"n","1679":"d","168":"w","1680":" ","1681":"s","1682":"t","1683":"a","1684":"n","1685":"d","1686":"a","1687":"r","1688":"d","1689":"s","169":"i","1690":" ","1691":"o","1692":"f","1693":" ","1694":"p","1695":"r","1696":"o","1697":"o","1698":"f","1699":".","17":" ","170":"t","1700":" ","1701":"B","1702":"a","1703":"s","1704":"e","1705":"d","1706":" ","1707":"o","1708":"n","1709":" ","171":"h","1710":"t","1711":"h","1712":"e","1713":" ","1714":"b","1715":"i","1716":"g","1717":" ","1718":"d","1719":"a","172":" ","1720":"t","1721":"a","1722":" ","1723":"a","1724":"n","1725":"a","1726":"l","1727":"y","1728":"s","1729":"i","173":"a","1730":"s","1731":",","1732":" ","1733":"t","1734":"h","1735":"e","1736":" ","1737":"p","1738":"l","1739":"e","174":" ","1740":"a","1741":" ","1742":"l","1743":"e","1744":"n","1745":"i","1746":"e","1747":"n","1748":"c","1749":"y","175":"f","1750":" ","1751":"s","1752":"y","1753":"s","1754":"t","1755":"e","1756":"m","1757":" ","1758":"s","1759":"h","176":"o","1760":"o","1761":"u","1762":"l","1763":"d","1764":" ","1765":"e","1766":"x","1767":"p","1768":"a","1769":"n","177":"c","1770":"d","1771":" ","1772":"t","1773":"h","1774":"e","1775":" ","1776":"a","1777":"p","1778":"p","1779":"l","178":"u","1780":"i","1781":"c","1782":"a","1783":"t","1784":"i","1785":"o","1786":"n","1787":" ","1788":"a","1789":"r","179":"s","1790":"e","1791":"a","1792":" ","1793":"a","1794":"n","1795":"d","1796":" ","1797":"s","1798":"t","1799":"r","18":"\"","180":" ","1800":"i","1801":"c","1802":"t","1803":" ","1804":"l","1805":"e","1806":"n","1807":"i","1808":"e","1809":"n","181":"o","1810":"c","1811":"y","1812":" ","1813":"s","1814":"t","1815":"a","1816":"n","1817":"d","1818":"a","1819":"r","182":"n","1820":"d","1821":"s","1822":" ","1823":"a","1824":"n","1825":"d","1826":" ","1827":"i","1828":"m","1829":"p","183":" ","1830":"r","1831":"o","1832":"v","1833":"e","1834":" ","1835":"t","1836":"h","1837":"e","1838":" ","1839":"r","184":"s","1840":"e","1841":"l","1842":"e","1843":"v","1844":"a","1845":"n","1846":"t","1847":" ","1848":"s","1849":"u","185":"c","1850":"b","1851":"j","1852":"e","1853":"c","1854":"t","1855":" ","1856":"s","1857":"y","1858":"s","1859":"t","186":"i","1860":"e","1861":"m","1862":" ","1863":"a","1864":"n","1865":"d","1866":" ","1867":"e","1868":"v","1869":"i","187":"e","1870":"d","1871":"e","1872":"n","1873":"c","1874":"e","1875":" ","1876":"d","1877":"i","1878":"s","1879":"c","188":"n","1880":"l","1881":"o","1882":"s","1883":"u","1884":"r","1885":"e","1886":" ","1887":"s","1888":"y","1889":"s","189":"t","1890":"t","1891":"e","1892":"m","1893":".","1894":" ","1895":"<","1896":"/","1897":"j","1898":"a","1899":"t","19":"s","190":"i","1900":"s","1901":":","1902":"p","1903":">","1904":".","1905":".","1906":".","1907":"\\","1908":"n","1909":"\\","191":"f","1910":"n","1911":"\"","1912":"\n","1913":" ","1914":" ","1915":"}","1916":"\n","1917":"]","192":"i","193":"c","194":" ","195":"a","196":"c","197":"c","198":"u","199":"r","2":" ","20":"y","200":"a","201":"c","202":"y","203":" ","204":"a","205":"n","206":"d","207":" ","208":"c","209":"l","21":"s","210":"i","211":"n","212":"i","213":"c","214":"a","215":"l","216":" ","217":"r","218":"e","219":"l","22":"t","220":"e","221":"v","222":"a","223":"n","224":"c","225":"e","226":".","227":"\"","228":"\n","229":" ","23":"e","230":" ","231":"}","232":",","233":"\n","234":" ","235":" ","236":"{","237":"\n","238":" ","239":" ","24":"m","240":" ","241":" ","242":"\"","243":"r","244":"o","245":"l","246":"e","247":"\"","248":":","249":" ","25":"\"","250":"\"","251":"u","252":"s","253":"e","254":"r","255":"\"","256":",","257":"\n","258":" ","259":" ","26":",","260":" ","261":" ","262":"\"","263":"c","264":"o","265":"n","266":"t","267":"e","268":"n","269":"t","27":"\n","270":"\"","271":":","272":" ","273":"\"","274":"S","275":"u","276":"m","277":"m","278":"a","279":"r","28":" ","280":"i","281":"z","282":"e","283":" ","284":"t","285":"h","286":"e","287":" ","288":"k","289":"e","29":" ","290":"y","291":" ","292":"f","293":"i","294":"n","295":"d","296":"i","297":"n","298":"g","299":"s","3":" ","30":" ","300":" ","301":"a","302":"n","303":"d","304":" ","305":"r","306":"e","307":"l","308":"e","309":"v","31":" ","310":"a","311":"n","312":"c","313":"e","314":" ","315":"t","316":"o","317":" ","318":"A","319":"D","32":"\"","320":"H","321":"D","322":" ","323":"d","324":"r","325":"u","326":"g","327":" ","328":"d","329":"i","33":"c","330":"s","331":"c","332":"o","333":"v","334":"e","335":"r","336":"y","337":" ","338":"f","339":"r","34":"o","340":"o","341":"m","342":" ","343":"t","344":"h","345":"i","346":"s","347":" ","348":"a","349":"r","35":"n","350":"t","351":"i","352":"c","353":"l","354":"e","355":" ","356":"t","357":"i","358":"t","359":"l","36":"t","360":"e","361":"d","362":" ","363":"\\","364":"\"","365":"A","366":"n","367":"a","368":"l","369":"y","37":"e","370":"s","371":"i","372":"s","373":" ","374":"o","375":"f","376":" ","377":"t","378":"h","379":"e","38":"n","380":" ","381":"P","382":"l","383":"e","384":"a","385":" ","386":"L","387":"e","388":"n","389":"i","39":"t","390":"e","391":"n","392":"c","393":"y","394":" ","395":"S","396":"y","397":"s","398":"t","399":"e","4":"{","40":"\"","400":"m","401":" ","402":"a","403":"n","404":"d","405":" ","406":"P","407":"l","408":"e","409":"a","41":":","410":" ","411":"B","412":"a","413":"r","414":"g","415":"a","416":"i","417":"n","418":"i","419":"n","42":" ","420":"g","421":" ","422":"S","423":"y","424":"s","425":"t","426":"e","427":"m","428":" ","429":"i","43":"\"","430":"n","431":" ","432":"t","433":"h","434":"e","435":" ","436":"E","437":"r","438":"a","439":" ","44":"Y","440":"o","441":"f","442":" ","443":"B","444":"i","445":"g","446":" ","447":"D","448":"a","449":"t","45":"o","450":"a","451":"\\","452":"\"","453":".","454":"\\","455":"n","456":"\\","457":"n","458":"B","459":"a","46":"u","460":"s","461":"e","462":"d","463":" ","464":"o","465":"n","466":" ","467":"t","468":"h","469":"e","47":" ","470":" ","471":"p","472":"r","473":"o","474":"v","475":"i","476":"d","477":"e","478":"d","479":" ","48":"a","480":"l","481":"i","482":"t","483":"e","484":"r","485":"a","486":"t","487":"u","488":"r","489":"e","49":"r","490":" ","491":"c","492":"o","493":"n","494":"t","495":"e","496":"x","497":"t","498":":","499":"\\","5":"\n","50":"e","500":"n","501":"A","502":"n","503":"a","504":"l","505":"y","506":"z","507":"e","508":" ","509":"t","51":" ","510":"h","511":"e","512":" ","513":"f","514":"o","515":"l","516":"l","517":"o","518":"w","519":"i","52":"a","520":"n","521":"g","522":" ","523":"l","524":"i","525":"t","526":"e","527":"r","528":"a","529":"t","53":"n","530":"u","531":"r","532":"e","533":" ","534":"e","535":"x","536":"c","537":"e","538":"r","539":"p","54":" ","540":"t","541":"s","542":":","543":"\\","544":"n","545":"\\","546":"n","547":"-","548":"-","549":"-","55":"e","550":" ","551":"A","552":"r","553":"t","554":"i","555":"c","556":"l","557":"e","558":" ","559":"1","56":"x","560":" ","561":"-","562":"-","563":"-","564":"\\","565":"n","566":"T","567":"i","568":"t","569":"l","57":"p","570":"e","571":":","572":" ","573":"A","574":"n","575":"a","576":"l","577":"y","578":"s","579":"i","58":"e","580":"s","581":" ","582":"o","583":"f","584":" ","585":"t","586":"h","587":"e","588":" ","589":"P","59":"r","590":"l","591":"e","592":"a","593":" ","594":"L","595":"e","596":"n","597":"i","598":"e","599":"n","6":" ","60":"t","600":"c","601":"y","602":" ","603":"S","604":"y","605":"s","606":"t","607":"e","608":"m","609":" ","61":" ","610":"a","611":"n","612":"d","613":" ","614":"P","615":"l","616":"e","617":"a","618":" ","619":"B","62":"i","620":"a","621":"r","622":"g","623":"a","624":"i","625":"n","626":"i","627":"n","628":"g","629":" ","63":"n","630":"S","631":"y","632":"s","633":"t","634":"e","635":"m","636":" ","637":"i","638":"n","639":" ","64":" ","640":"t","641":"h","642":"e","643":" ","644":"E","645":"r","646":"a","647":" ","648":"o","649":"f","65":"n","650":" ","651":"B","652":"i","653":"g","654":" ","655":"D","656":"a","657":"t","658":"a","659":"\\","66":"e","660":"n","661":"A","662":"b","663":"s","664":"t","665":"r","666":"a","667":"c","668":"t","669":":","67":"u","670":" ","671":"<","672":"j","673":"a","674":"t","675":"s","676":":","677":"t","678":"i","679":"t","68":"r","680":"l","681":"e","682":">","683":"A","684":"b","685":"s","686":"t","687":"r","688":"a","689":"c","69":"o","690":"t","691":"<","692":"/","693":"j","694":"a","695":"t","696":"s","697":":","698":"t","699":"i","7":" ","70":"p","700":"t","701":"l","702":"e","703":">","704":"\\","705":"n","706":" ","707":" ","708":" ","709":" ","71":"h","710":" ","711":" ","712":" ","713":" ","714":" ","715":" ","716":" ","717":" ","718":" ","719":" ","72":"a","720":" ","721":"<","722":"j","723":"a","724":"t","725":"s","726":":","727":"p","728":">","729":"I","73":"r","730":"n","731":" ","732":"t","733":"h","734":"e","735":" ","736":"e","737":"r","738":"a","739":" ","74":"m","740":"o","741":"f","742":" ","743":"b","744":"i","745":"g","746":" ","747":"d","748":"a","749":"t","75":"a","750":"a","751":",","752":" ","753":"c","754":"o","755":"m","756":"p","757":"a","758":"r","759":"i","76":"c","760":"n","761":"g","762":" ","763":"p","764":"l","765":"e","766":"a","767":" ","768":"l","769":"e","77":"o","770":"n","771":"i","772":"e","773":"n","774":"c","775":"y","776":" ","777":"a","778":"n","779":"d","78":"l","780":" ","781":"p","782":"l","783":"e","784":"a","785":" ","786":"b","787":"a","788":"r","789":"g","79":"o","790":"a","791":"i","792":"n","793":"i","794":"n","795":"g","796":" ","797":"s","798":"y","799":"s","8":" ","80":"g","800":"t","801":"e","802":"m","803":"s","804":" ","805":"c","806":"a","807":"n","808":" ","809":"b","81":"y","810":"r","811":"i","812":"n","813":"g","814":" ","815":"i","816":"m","817":"p","818":"o","819":"r","82":" ","820":"t","821":"a","822":"n","823":"t","824":" ","825":"i","826":"n","827":"s","828":"i","829":"g","83":"a","830":"h","831":"t","832":"s","833":" ","834":"t","835":"o","836":" ","837":"l","838":"e","839":"g","84":"n","840":"a","841":"l","842":" ","843":"p","844":"r","845":"a","846":"c","847":"t","848":"i","849":"t","85":"d","850":"i","851":"o","852":"n","853":"e","854":"r","855":"s","856":".","857":" ","858":"I","859":"n","86":" ","860":" ","861":"t","862":"h","863":"i","864":"s","865":" ","866":"p","867":"a","868":"p","869":"e","87":"d","870":"r","871":",","872":" ","873":"b","874":"y","875":" ","876":"s","877":"t","878":"u","879":"d","88":"r","880":"y","881":"i","882":"n","883":"g","884":" ","885":"t","886":"h","887":"e","888":" ","889":"p","89":"u","890":"r","891":"i","892":"n","893":"c","894":"i","895":"p","896":"l","897":"e","898":" ","899":"o","9":" ","90":"g","900":"f","901":" ","902":"t","903":"h","904":"e","905":" ","906":"f","907":"u","908":"z","909":"z","91":" ","910":"y","911":" ","912":"K","913":"-","914":"m","915":"e","916":"a","917":"n","918":" ","919":"c","92":"d","920":"l","921":"u","922":"s","923":"t","924":"e","925":"r","926":"i","927":"n","928":"g","929":" ","93":"i","930":"m","931":"e","932":"t","933":"h","934":"o","935":"d","936":",","937":" ","938":"o","939":"p","94":"s","940":"t","941":"i","942":"m","943":"i","944":"z","945":"a","946":"t","947":"i","948":"o","949":"n","95":"c","950":" ","951":"u","952":"s","953":"i","954":"n","955":"g","956":" ","957":"r","958":"o","959":"u","96":"o","960":"g","961":"h","962":" ","963":"s","964":"e","965":"t","966":" ","967":"t","968":"h","969":"e","97":"v","970":"o","971":"r","972":"y","973":" ","974":"i","975":"s","976":" ","977":"p","978":"r","979":"o","98":"e","980":"p","981":"o","982":"s","983":"e","984":"d","985":" ","986":"f","987":"o","988":"r","989":" ","99":"r","990":"t","991":"h","992":"e","993":" ","994":"p","995":"r","996":"o","997":"b","998":"l","999":"e","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:23:40"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:23:40"}
{"config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"baseURL":"https://api.anthropic.com/v1/messages","data":"{\"model\":\"claude-3-7-sonnet-20250219\",\"messages\":[{\"role\":\"system\",\"content\":\"You are an expert in neuropharmacology and drug discovery, specializing in ADHD treatments. Analyze the provided literature with a focus on scientific accuracy and clinical relevance.\"},{\"role\":\"user\",\"content\":\"Summarize the key findings and relevance to ADHD drug discovery from this article titled \\\"Analysis of the Plea Leniency System and Plea Bargaining System in the Era of Big Data\\\".\\n\\nBased on the provided literature context:\\nAnalyze the following literature excerpts:\\n\\n--- Article 1 ---\\nTitle: Analysis of the Plea Leniency System and Plea Bargaining System in the Era of Big Data\\nAbstract: <jats:title>Abstract</jats:title>\\n               <jats:p>In the era of big data, comparing plea leniency and plea bargaining systems can bring important insights to legal practitioners. In this paper, by studying the principle of the fuzzy K-mean clustering method, optimization using rough set theory is proposed for the problem of unclear boundaries in the fuzzy clustering process. Then, based on comparing the origins and development of the plea-leniency system and the plea-bargain system, big data analysis of the plea-leniency system cases in China and the plea-bargain cases in the United States is conducted using the fuzzy clustering method based on rough sets. The application rate of China’s plea leniency system is, on average, 49.67% lower than that of the U.S. plea bargaining system. In terms of the sentencing range, the plea leniency system is 32.73% lower than the plea bargaining system. Compared to the two, the plea leniency system is more stringent in terms of discretionary limits and standards of proof. Based on the big data analysis, the plea leniency system should expand the application area and strict leniency standards and improve the relevant subject system and evidence disclosure system. </jats:p>...\\n\\n\"}],\"temperature\":0.7,\"max_tokens\":4096}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Content-Length":"1969","Content-Type":"application/json","User-Agent":"axios/1.8.4","anthropic-version":"2023-06-01","x-api-key":"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"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":120000,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errorData":{"error":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"type":"error"},"level":"error","message":"Request failed with status code 400","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/ai.js:864:22","status":400,"timestamp":"2025-04-26 16:23:40"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 400","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:415:30","timestamp":"2025-04-26 16:23:40"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:24:01"}
{"level":"info","message":"Searching Crossref for: patel, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:24:17"}
{"level":"info","message":"Found 10 articles (total 21729)","service":"breaking-good-api","timestamp":"2025-04-26 16:24:17"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:24:20"}
{"0":"[","1":"\n","10":"\"","100":"y","1000":"i","1001":"p","1002":"r","1003":"o","1004":"t","1005":"o","1006":"z","1007":"o","1008":"a","1009":"l","101":",","1010":",","1011":" ","1012":"a","1013":"n","1014":"d","1015":" ","1016":"a","1017":"n","1018":"t","1019":"i","102":" ","1020":"b","1021":"a","1022":"c","1023":"t","1024":"e","1025":"r","1026":"i","1027":"a","1028":"l","1029":" ","103":"s","1030":"e","1031":"f","1032":"f","1033":"e","1034":"c","1035":"t","1036":"s","1037":",","1038":" ","1039":"m","104":"p","1040":"a","1041":"k","1042":"i","1043":"n","1044":"g","1045":" ","1046":"t","1047":"h","1048":"e","1049":"m","105":"e","1050":" ","1051":"a","1052":"p","1053":"p","1054":"e","1055":"a","1056":"l","1057":"i","1058":"n","1059":"g","106":"c","1060":" ","1061":"t","1062":"o","1063":" ","1064":"m","1065":"e","1066":"d","1067":"i","1068":"c","1069":"i","107":"i","1070":"n","1071":"a","1072":"l","1073":" ","1074":"c","1075":"h","1076":"e","1077":"m","1078":"i","1079":"s","108":"a","1080":"t","1081":"s","1082":".","1083":" ","1084":"T","1085":"h","1086":"e","1087":"i","1088":"r","1089":" ","109":"l","1090":"p","1091":"r","1092":"e","1093":"s","1094":"e","1095":"n","1096":"c","1097":"e","1098":" ","1099":"i","11":"r","110":"i","1100":"n","1101":" ","1102":"n","1103":"a","1104":"t","1105":"u","1106":"r","1107":"a","1108":"l","1109":"l","111":"z","1110":"y","1111":" ","1112":"o","1113":"c","1114":"c","1115":"u","1116":"r","1117":"r","1118":"i","1119":"n","112":"i","1120":"g","1121":" ","1122":"p","1123":"h","1124":"a","1125":"r","1126":"m","1127":"a","1128":"c","1129":"o","113":"n","1130":"l","1131":"o","1132":"g","1133":"i","1134":"c","1135":"a","1136":"l","1137":"l","1138":"y","1139":" ","114":"g","1140":"a","1141":"c","1142":"t","1143":"i","1144":"v","1145":"e","1146":" ","1147":"s","1148":"u","1149":"b","115":" ","1150":"s","1151":"t","1152":"a","1153":"n","1154":"c","1155":"e","1156":"s","1157":" ","1158":"a","1159":"s","116":"i","1160":" ","1161":"w","1162":"e","1163":"l","1164":"l","1165":" ","1166":"a","1167":"s","1168":" ","1169":"s","117":"n","1170":"y","1171":"n","1172":"t","1173":"h","1174":"e","1175":"t","1176":"i","1177":"c","1178":" ","1179":"m","118":" ","1180":"e","1181":"d","1182":"i","1183":"c","1184":"i","1185":"n","1186":"e","1187":"s","1188":" ","1189":"u","119":"A","1190":"n","1191":"d","1192":"e","1193":"r","1194":"s","1195":"c","1196":"o","1197":"r","1198":"e","1199":"s","12":"o","120":"D","1200":" ","1201":"t","1202":"h","1203":"e","1204":"i","1205":"r","1206":" ","1207":"t","1208":"h","1209":"e","121":"H","1210":"r","1211":"a","1212":"p","1213":"e","1214":"u","1215":"t","1216":"i","1217":"c","1218":" ","1219":"p","122":"D","1220":"o","1221":"t","1222":"e","1223":"n","1224":"t","1225":"i","1226":"a","1227":"l","1228":".","1229":" ","123":" ","1230":"T","1231":"h","1232":"i","1233":"s","1234":" ","1235":"r","1236":"e","1237":"v","1238":"i","1239":"e","124":"t","1240":"w","1241":" ","1242":"e","1243":"n","1244":"c","1245":"o","1246":"m","1247":"p","1248":"a","1249":"s","125":"r","1250":"s","1251":"e","1252":"s","1253":" ","1254":"r","1255":"e","1256":"c","1257":"e","1258":"n","1259":"t","126":"e","1260":" ","1261":"a","1262":"d","1263":"v","1264":"a","1265":"n","1266":"c","1267":"e","1268":"m","1269":"e","127":"a","1270":"n","1271":"t","1272":"s","1273":" ","1274":"i","1275":"n","1276":" ","1277":"t","1278":"h","1279":"e","128":"t","1280":" ","1281":"b","1282":"i","1283":"o","1284":"l","1285":"o","1286":"g","1287":"i","1288":"c","1289":"a","129":"m","1290":"l","1291":" ","1292":"a","1293":"c","1294":"t","1295":"i","1296":"v","1297":"i","1298":"t","1299":"i","13":"l","130":"e","1300":"e","1301":"s","1302":" ","1303":"o","1304":"f","1305":" ","1306":"o","1307":"x","1308":"a","1309":"z","131":"n","1310":"o","1311":"l","1312":"e","1313":" ","1314":"d","1315":"e","1316":"r","1317":"i","1318":"v","1319":"a","132":"t","1320":"t","1321":"i","1322":"v","1323":"e","1324":"s","1325":" ","1326":"d","1327":"u","1328":"r","1329":"i","133":"s","1330":"n","1331":"g","1332":" ","1333":"t","1334":"h","1335":"e","1336":" ","1337":"p","1338":"e","1339":"r","134":".","1340":"i","1341":"o","1342":"d","1343":" ","1344":"o","1345":"f","1346":" ","1347":"2","1348":"0","1349":"1","135":" ","1350":"8","1351":"–","1352":"2","1353":"0","1354":"2","1355":"3","1356":".","1357":" ","1358":"T","1359":"h","136":"A","1360":"e","1361":" ","1362":"d","1363":"i","1364":"s","1365":"c","1366":"u","1367":"s","1368":"s","1369":"e","137":"n","1370":"d","1371":" ","1372":"a","1373":"c","1374":"t","1375":"i","1376":"v","1377":"i","1378":"t","1379":"i","138":"a","1380":"e","1381":"s","1382":" ","1383":"i","1384":"n","1385":"c","1386":"l","1387":"u","1388":"d","1389":"e","139":"l","1390":" ","1391":"a","1392":"n","1393":"t","1394":"i","1395":"t","1396":"u","1397":"m","1398":"o","1399":"r","14":"e","140":"y","1400":",","1401":" ","1402":"c","1403":"e","1404":"n","1405":"t","1406":"r","1407":"a","1408":"l","1409":" ","141":"z","1410":"n","1411":"e","1412":"r","1413":"v","1414":"o","1415":"u","1416":"s","1417":" ","1418":"s","1419":"y","142":"e","1420":"s","1421":"t","1422":"e","1423":"m","1424":" ","1425":"(","1426":"C","1427":"N","1428":"S","1429":")","143":" ","1430":" ","1431":"m","1432":"o","1433":"d","1434":"u","1435":"l","1436":"a","1437":"t","1438":"i","1439":"o","144":"t","1440":"n","1441":",","1442":" ","1443":"a","1444":"n","1445":"t","1446":"i","1447":"d","1448":"i","1449":"a","145":"h","1450":"b","1451":"e","1452":"t","1453":"i","1454":"c","1455":",","1456":" ","1457":"a","1458":"n","1459":"t","146":"e","1460":"i","1461":"‐","1462":"A","1463":"l","1464":"z","1465":"h","1466":"e","1467":"i","1468":"m","1469":"e","147":" ","1470":"r","1471":",","1472":" ","1473":"a","1474":"n","1475":"t","1476":"i","1477":"b","1478":"a","1479":"c","148":"p","1480":"t","1481":"e","1482":"r","1483":"i","1484":"a","1485":"l","1486":",","1487":" ","1488":"a","1489":"n","149":"r","1490":"d","1491":" ","1492":"e","1493":"n","1494":"z","1495":"y","1496":"m","1497":"e","1498":" ","1499":"i","15":"\"","150":"o","1500":"n","1501":"h","1502":"i","1503":"b","1504":"i","1505":"t","1506":"o","1507":"r","1508":"y","1509":" ","151":"v","1510":"e","1511":"f","1512":"f","1513":"e","1514":"c","1515":"t","1516":"s","1517":".","1518":" ","1519":"T","152":"i","1520":"h","1521":"e","1522":" ","1523":"r","1524":"e","1525":"v","1526":"i","1527":"e","1528":"w","1529":" ","153":"d","1530":"h","1531":"i","1532":"g","1533":"h","1534":"l","1535":"i","1536":"g","1537":"h","1538":"t","1539":"s","154":"e","1540":" ","1541":"t","1542":"h","1543":"e","1544":" ","1545":"m","1546":"e","1547":"c","1548":"h","1549":"a","155":"d","1550":"n","1551":"i","1552":"s","1553":"m","1554":"s","1555":" ","1556":"o","1557":"f","1558":" ","1559":"a","156":" ","1560":"c","1561":"t","1562":"i","1563":"o","1564":"n","1565":" ","1566":"o","1567":"f","1568":" ","1569":"t","157":"l","1570":"h","1571":"e","1572":"s","1573":"e","1574":" ","1575":"c","1576":"o","1577":"m","1578":"p","1579":"o","158":"i","1580":"u","1581":"n","1582":"d","1583":"s","1584":" ","1585":"i","1586":"n","1587":" ","1588":"v","1589":"a","159":"t","1590":"r","1591":"i","1592":"o","1593":"u","1594":"s","1595":" ","1596":"d","1597":"i","1598":"s","1599":"e","16":":","160":"e","1600":"a","1601":"s","1602":"e","1603":"s","1604":",","1605":" ","1606":"t","1607":"h","1608":"e","1609":" ","161":"r","1610":"m","1611":"o","1612":"s","1613":"t","1614":" ","1615":"p","1616":"o","1617":"t","1618":"e","1619":"n","162":"a","1620":"t","1621":" ","1622":"c","1623":"o","1624":"m","1625":"p","1626":"o","1627":"u","1628":"n","1629":"d","163":"t","1630":"s","1631":" ","1632":"a","1633":"l","1634":"o","1635":"n","1636":"g","1637":" ","1638":"w","1639":"i","164":"u","1640":"t","1641":"h","1642":" ","1643":"t","1644":"h","1645":"e","1646":"i","1647":"r","1648":" ","1649":"r","165":"r","1650":"e","1651":"s","1652":"p","1653":"e","1654":"c","1655":"t","1656":"i","1657":"v","1658":"e","1659":" ","166":"e","1660":"I","1661":"C","1662":"<","1663":"j","1664":"a","1665":"t","1666":"s","1667":":","1668":"s","1669":"u","167":" ","1670":"b","1671":">","1672":"5","1673":"0","1674":"<","1675":"/","1676":"j","1677":"a","1678":"t","1679":"s","168":"w","1680":":","1681":"s","1682":"u","1683":"b","1684":">","1685":"/","1686":"M","1687":"I","1688":"C","1689":" ","169":"i","1690":"(","1691":"i","1692":"n","1693":"h","1694":"i","1695":"b","1696":"i","1697":"t","1698":"o","1699":"r","17":" ","170":"t","1700":"y","1701":" ","1702":"c","1703":"o","1704":"n","1705":"c","1706":"e","1707":"n","1708":"t","1709":"r","171":"h","1710":"a","1711":"t","1712":"i","1713":"o","1714":"n","1715":"/","1716":"m","1717":"i","1718":"n","1719":"i","172":" ","1720":"m","1721":"u","1722":"m","1723":" ","1724":"i","1725":"n","1726":"h","1727":"i","1728":"b","1729":"i","173":"a","1730":"t","1731":"o","1732":"r","1733":"y","1734":" ","1735":"c","1736":"o","1737":"n","1738":"c","1739":"e","174":" ","1740":"n","1741":"t","1742":"r","1743":"a","1744":"t","1745":"i","1746":"o","1747":"n","1748":")","1749":" ","175":"f","1750":"v","1751":"a","1752":"l","1753":"u","1754":"e","1755":"s","1756":",","1757":" ","1758":"a","1759":"n","176":"o","1760":"d","1761":" ","1762":"d","1763":"i","1764":"s","1765":"c","1766":"u","1767":"s","1768":"s","1769":"e","177":"c","1770":"s","1771":" ","1772":"t","1773":"h","1774":"e","1775":" ","1776":"m","1777":"o","1778":"d","1779":"e","178":"u","1780":"l","1781":"s","1782":" ","1783":"u","1784":"t","1785":"i","1786":"l","1787":"i","1788":"z","1789":"e","179":"s","1790":"d","1791":" ","1792":"f","1793":"o","1794":"r","1795":" ","1796":"q","1797":"u","1798":"a","1799":"n","18":"\"","180":" ","1800":"t","1801":"i","1802":"f","1803":"y","1804":"i","1805":"n","1806":"g","1807":" ","1808":"t","1809":"h","181":"o","1810":"e","1811":"i","1812":"r","1813":" ","1814":"a","1815":"c","1816":"t","1817":"i","1818":"v","1819":"i","182":"n","1820":"t","1821":"y","1822":".","1823":" ","1824":"C","1825":"u","1826":"r","1827":"r","1828":"e","1829":"n","183":" ","1830":"t","1831":"l","1832":"y","1833":",","1834":" ","1835":"t","1836":"h","1837":"e","1838":"r","1839":"e","184":"s","1840":" ","1841":"a","1842":"r","1843":"e","1844":" ","1845":"e","1846":"i","1847":"g","1848":"h","1849":"t","185":"c","1850":" ","1851":"F","1852":"D","1853":"A","1854":"‐","1855":"a","1856":"p","1857":"p","1858":"r","1859":"o","186":"i","1860":"v","1861":"e","1862":"d","1863":" ","1864":"d","1865":"r","1866":"u","1867":"g","1868":"s","1869":" ","187":"e","1870":"b","1871":"e","1872":"a","1873":"r","1874":"i","1875":"n","1876":"g","1877":" ","1878":"o","1879":"x","188":"n","1880":"a","1881":"z","1882":"o","1883":"l","1884":"e","1885":" ","1886":"s","1887":"c","1888":"a","1889":"f","189":"t","1890":"f","1891":"o","1892":"l","1893":"d","1894":"s","1895":" ","1896":"a","1897":"v","1898":"a","1899":"i","19":"s","190":"i","1900":"l","1901":"a","1902":"b","1903":"l","1904":"e","1905":" ","1906":"i","1907":"n","1908":" ","1909":"t","191":"f","1910":"h","1911":"e","1912":" ","1913":"m","1914":"a","1915":"r","1916":"k","1917":"e","1918":"t","1919":".","192":"i","1920":" ","1921":"A","1922":"n","1923":"a","1924":"l","1925":"y","1926":"s","1927":"i","1928":"s","1929":" ","193":"c","1930":"o","1931":"f","1932":" ","1933":"t","1934":"h","1935":"e","1936":" ","1937":"l","1938":"i","1939":"t","194":" ","1940":"e","1941":"r","1942":"a","1943":"t","1944":"u","1945":"r","1946":"e","1947":" ","1948":"r","1949":"e","195":"a","1950":"v","1951":"e","1952":"a","1953":"l","1954":"s","1955":" ","1956":"t","1957":"h","1958":"a","1959":"t","196":"c","1960":" ","1961":"t","1962":"h","1963":"e","1964":" ","1965":"a","1966":"n","1967":"t","1968":"i","1969":"t","197":"c","1970":"u","1971":"m","1972":"o","1973":"r","1974":" ","1975":"a","1976":"c","1977":"t","1978":"i","1979":"v","198":"u","1980":"i","1981":"t","1982":"y","1983":" ","1984":"o","1985":"f","1986":" ","1987":"o","1988":"x","1989":"a","199":"r","1990":"z","1991":"o","1992":"l","1993":"e","1994":" ","1995":"d","1996":"e","1997":"r","1998":"i","1999":"v","2":" ","20":"y","200":"a","2000":"a","2001":"t","2002":"i","2003":"v","2004":"e","2005":"s","2006":" ","2007":"i","2008":"s","2009":" ","201":"c","2010":"p","2011":"a","2012":"r","2013":"t","2014":"i","2015":"c","2016":"u","2017":"l","2018":"a","2019":"r","202":"y","2020":"l","2021":"y","2022":" ","2023":"n","2024":"o","2025":"t","2026":"e","2027":"w","2028":"o","2029":"r","203":" ","2030":"t","2031":"h","2032":"y","2033":" ","2034":"a","2035":"m","2036":"o","2037":"n","2038":"g","2039":" ","204":"a","2040":"t","2041":"h","2042":"e","2043":"i","2044":"r","2045":" ","2046":"v","2047":"a","2048":"r","2049":"i","205":"n","2050":"o","2051":"u","2052":"s","2053":" ","2054":"a","2055":"c","2056":"t","2057":"i","2058":"v","2059":"i","206":"d","2060":"t","2061":"i","2062":"e","2063":"s","2064":".","2065":" ","2066":"T","2067":"h","2068":"e","2069":" ","207":" ","2070":"i","2071":"n","2072":"c","2073":"o","2074":"r","2075":"p","2076":"o","2077":"r","2078":"a","2079":"t","208":"c","2080":"i","2081":"o","2082":"n","2083":" ","2084":"o","2085":"f","2086":" ","2087":"p","2088":"h","2089":"e","209":"l","2090":"n","2091":"y","2092":"l","2093":",","2094":" ","2095":"m","2096":"e","2097":"t","2098":"h","2099":"o","21":"s","210":"i","2100":"x","2101":"y","2102":"p","2103":"h","2104":"e","2105":"n","2106":"y","2107":"l","2108":",","2109":" ","211":"n","2110":"o","2111":"r","2112":" ","2113":"h","2114":"a","2115":"l","2116":"o","2117":"g","2118":"e","2119":"n","212":"i","2120":"‐","2121":"s","2122":"u","2123":".","2124":".","2125":".","2126":"\\","2127":"n","2128":"\\","2129":"n","213":"c","2130":"\"","2131":"\n","2132":" ","2133":" ","2134":"}","2135":"\n","2136":"]","214":"a","215":"l","216":" ","217":"r","218":"e","219":"l","22":"t","220":"e","221":"v","222":"a","223":"n","224":"c","225":"e","226":".","227":"\"","228":"\n","229":" ","23":"e","230":" ","231":"}","232":",","233":"\n","234":" ","235":" ","236":"{","237":"\n","238":" ","239":" ","24":"m","240":" ","241":" ","242":"\"","243":"r","244":"o","245":"l","246":"e","247":"\"","248":":","249":" ","25":"\"","250":"\"","251":"u","252":"s","253":"e","254":"r","255":"\"","256":",","257":"\n","258":" ","259":" ","26":",","260":" ","261":" ","262":"\"","263":"c","264":"o","265":"n","266":"t","267":"e","268":"n","269":"t","27":"\n","270":"\"","271":":","272":" ","273":"\"","274":"S","275":"u","276":"m","277":"m","278":"a","279":"r","28":" ","280":"i","281":"z","282":"e","283":" ","284":"t","285":"h","286":"e","287":" ","288":"k","289":"e","29":" ","290":"y","291":" ","292":"f","293":"i","294":"n","295":"d","296":"i","297":"n","298":"g","299":"s","3":" ","30":" ","300":" ","301":"a","302":"n","303":"d","304":" ","305":"r","306":"e","307":"l","308":"e","309":"v","31":" ","310":"a","311":"n","312":"c","313":"e","314":" ","315":"t","316":"o","317":" ","318":"A","319":"D","32":"\"","320":"H","321":"D","322":" ","323":"d","324":"r","325":"u","326":"g","327":" ","328":"d","329":"i","33":"c","330":"s","331":"c","332":"o","333":"v","334":"e","335":"r","336":"y","337":" ","338":"f","339":"r","34":"o","340":"o","341":"m","342":" ","343":"t","344":"h","345":"i","346":"s","347":" ","348":"a","349":"r","35":"n","350":"t","351":"i","352":"c","353":"l","354":"e","355":" ","356":"t","357":"i","358":"t","359":"l","36":"t","360":"e","361":"d","362":" ","363":"\\","364":"\"","365":"R","366":"e","367":"v","368":"i","369":"e","37":"e","370":"w","371":" ","372":"o","373":"n","374":" ","375":"T","376":"h","377":"e","378":"r","379":"a","38":"n","380":"p","381":"e","382":"u","383":"t","384":"i","385":"c","386":" ","387":"D","388":"i","389":"v","39":"t","390":"e","391":"r","392":"s","393":"i","394":"t","395":"y","396":" ","397":"o","398":"f","399":" ","4":"{","40":"\"","400":"O","401":"x","402":"a","403":"z","404":"o","405":"l","406":"e","407":" ","408":"S","409":"c","41":":","410":"a","411":"f","412":"f","413":"o","414":"l","415":"d","416":":","417":" ","418":"A","419":"n","42":" ","420":" ","421":"U","422":"p","423":"d","424":"a","425":"t","426":"e","427":"\\","428":"\"","429":".","43":"\"","430":"\\","431":"n","432":"\\","433":"n","434":"B","435":"a","436":"s","437":"e","438":"d","439":" ","44":"Y","440":"o","441":"n","442":" ","443":"t","444":"h","445":"e","446":" ","447":"p","448":"r","449":"o","45":"o","450":"v","451":"i","452":"d","453":"e","454":"d","455":" ","456":"l","457":"i","458":"t","459":"e","46":"u","460":"r","461":"a","462":"t","463":"u","464":"r","465":"e","466":" ","467":"c","468":"o","469":"n","47":" ","470":"t","471":"e","472":"x","473":"t","474":":","475":"\\","476":"n","477":"A","478":"n","479":"a","48":"a","480":"l","481":"y","482":"z","483":"e","484":" ","485":"t","486":"h","487":"e","488":" ","489":"f","49":"r","490":"o","491":"l","492":"l","493":"o","494":"w","495":"i","496":"n","497":"g","498":" ","499":"l","5":"\n","50":"e","500":"i","501":"t","502":"e","503":"r","504":"a","505":"t","506":"u","507":"r","508":"e","509":" ","51":" ","510":"e","511":"x","512":"c","513":"e","514":"r","515":"p","516":"t","517":"s","518":":","519":"\\","52":"a","520":"n","521":"\\","522":"n","523":"-","524":"-","525":"-","526":" ","527":"A","528":"r","529":"t","53":"n","530":"i","531":"c","532":"l","533":"e","534":" ","535":"1","536":" ","537":"-","538":"-","539":"-","54":" ","540":"\\","541":"n","542":"T","543":"i","544":"t","545":"l","546":"e","547":":","548":" ","549":"R","55":"e","550":"e","551":"v","552":"i","553":"e","554":"w","555":" ","556":"o","557":"n","558":" ","559":"T","56":"x","560":"h","561":"e","562":"r","563":"a","564":"p","565":"e","566":"u","567":"t","568":"i","569":"c","57":"p","570":" ","571":"D","572":"i","573":"v","574":"e","575":"r","576":"s","577":"i","578":"t","579":"y","58":"e","580":" ","581":"o","582":"f","583":" ","584":"O","585":"x","586":"a","587":"z","588":"o","589":"l","59":"r","590":"e","591":" ","592":"S","593":"c","594":"a","595":"f","596":"f","597":"o","598":"l","599":"d","6":" ","60":"t","600":":","601":" ","602":"A","603":"n","604":" ","605":"U","606":"p","607":"d","608":"a","609":"t","61":" ","610":"e","611":"\\","612":"n","613":"A","614":"b","615":"s","616":"t","617":"r","618":"a","619":"c","62":"i","620":"t","621":":","622":" ","623":"<","624":"j","625":"a","626":"t","627":"s","628":":","629":"t","63":"n","630":"i","631":"t","632":"l","633":"e","634":">","635":"A","636":"b","637":"s","638":"t","639":"r","64":" ","640":"a","641":"c","642":"t","643":"<","644":"/","645":"j","646":"a","647":"t","648":"s","649":":","65":"n","650":"t","651":"i","652":"t","653":"l","654":"e","655":">","656":"<","657":"j","658":"a","659":"t","66":"e","660":"s","661":":","662":"p","663":">","664":"O","665":"x","666":"a","667":"z","668":"o","669":"l","67":"u","670":"e","671":",","672":" ","673":"a","674":" ","675":"f","676":"i","677":"v","678":"e","679":"‐","68":"r","680":"m","681":"e","682":"m","683":"b","684":"e","685":"r","686":"e","687":"d","688":" ","689":"c","69":"o","690":"y","691":"c","692":"l","693":"i","694":"c","695":" ","696":"r","697":"i","698":"n","699":"g","7":" ","70":"p","700":" ","701":"c","702":"o","703":"n","704":"t","705":"a","706":"i","707":"n","708":"i","709":"n","71":"h","710":"g","711":" ","712":"o","713":"x","714":"y","715":"g","716":"e","717":"n","718":" ","719":"a","72":"a","720":"n","721":"d","722":" ","723":"n","724":"i","725":"t","726":"r","727":"o","728":"g","729":"e","73":"r","730":"n","731":",","732":" ","733":"d","734":"i","735":"s","736":"p","737":"l","738":"a","739":"y","74":"m","740":"s","741":" ","742":"d","743":"i","744":"v","745":"e","746":"r","747":"s","748":"e","749":" ","75":"a","750":"i","751":"n","752":"t","753":"e","754":"r","755":"a","756":"c","757":"t","758":"i","759":"o","76":"c","760":"n","761":"s","762":" ","763":"a","764":"n","765":"d","766":" ","767":"s","768":"t","769":"r","77":"o","770":"u","771":"c","772":"t","773":"u","774":"r","775":"a","776":"l","777":" ","778":"v","779":"a","78":"l","780":"r","781":"i","782":"a","783":"t","784":"i","785":"o","786":"n","787":"s","788":",","789":" ","79":"o","790":"e","791":"n","792":"h","793":"a","794":"n","795":"c","796":"i","797":"n","798":"g","799":" ","8":" ","80":"g","800":"i","801":"t","802":"s","803":" ","804":"p","805":"o","806":"t","807":"e","808":"n","809":"t","81":"y","810":"i","811":"a","812":"l","813":" ","814":"a","815":"p","816":"p","817":"l","818":"i","819":"c","82":" ","820":"a","821":"t","822":"i","823":"o","824":"n","825":"s","826":" ","827":"a","828":"c","829":"r","83":"a","830":"o","831":"s","832":"s","833":" ","834":"v","835":"a","836":"r","837":"i","838":"o","839":"u","84":"n","840":"s","841":" ","842":"d","843":"o","844":"m","845":"a","846":"i","847":"n","848":"s","849":".","85":"d","850":" ","851":"O","852":"x","853":"a","854":"z","855":"o","856":"l","857":"e","858":" ","859":"d","86":" ","860":"e","861":"r","862":"i","863":"v","864":"a","865":"t","866":"i","867":"v","868":"e","869":"s","87":"d","870":" ","871":"e","872":"x","873":"h","874":"i","875":"b","876":"i","877":"t","878":" ","879":"d","88":"r","880":"i","881":"v","882":"e","883":"r","884":"s","885":"e","886":" ","887":"p","888":"h","889":"a","89":"u","890":"r","891":"m","892":"a","893":"c","894":"o","895":"l","896":"o","897":"g","898":"i","899":"c","9":" ","90":"g","900":"a","901":"l","902":" ","903":"a","904":"c","905":"t","906":"i","907":"v","908":"i","909":"t","91":" ","910":"i","911":"e","912":"s","913":",","914":" ","915":"i","916":"n","917":"c","918":"l","919":"u","92":"d","920":"d","921":"i","922":"n","923":"g","924":" ","925":"a","926":"n","927":"t","928":"i","929":"d","93":"i","930":"i","931":"a","932":"b","933":"e","934":"t","935":"i","936":"c","937":",","938":" ","939":"a","94":"s","940":"n","941":"t","942":"i","943":"c","944":"o","945":"n","946":"v","947":"u","948":"l","949":"s","95":"c","950":"a","951":"n","952":"t","953":",","954":" ","955":"a","956":"n","957":"t","958":"i","959":"c","96":"o","960":"a","961":"n","962":"c","963":"e","964":"r","965":",","966":" ","967":"p","968":"h","969":"o","97":"v","970":"s","971":"p","972":"h","973":"o","974":"d","975":"i","976":"e","977":"s","978":"t","979":"e","98":"e","980":"r","981":"a","982":"s","983":"e","984":" ","985":"i","986":"n","987":"h","988":"i","989":"b","99":"r","990":"i","991":"t","992":"i","993":"o","994":"n","995":",","996":" ","997":"a","998":"n","999":"t","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:24:20"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:24:20"}
{"config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"baseURL":"https://api.anthropic.com/v1/messages","data":"{\"model\":\"claude-3-7-sonnet-20250219\",\"messages\":[{\"role\":\"system\",\"content\":\"You are an expert in neuropharmacology and drug discovery, specializing in ADHD treatments. Analyze the provided literature with a focus on scientific accuracy and clinical relevance.\"},{\"role\":\"user\",\"content\":\"Summarize the key findings and relevance to ADHD drug discovery from this article titled \\\"Review on Therapeutic Diversity of Oxazole Scaffold: An Update\\\".\\n\\nBased on the provided literature context:\\nAnalyze the following literature excerpts:\\n\\n--- Article 1 ---\\nTitle: Review on Therapeutic Diversity of Oxazole Scaffold: An Update\\nAbstract: <jats:title>Abstract</jats:title><jats:p>Oxazole, a five‐membered cyclic ring containing oxygen and nitrogen, displays diverse interactions and structural variations, enhancing its potential applications across various domains. Oxazole derivatives exhibit diverse pharmacological activities, including antidiabetic, anticonvulsant, anticancer, phosphodiesterase inhibition, antiprotozoal, and antibacterial effects, making them appealing to medicinal chemists. Their presence in naturally occurring pharmacologically active substances as well as synthetic medicines underscores their therapeutic potential. This review encompasses recent advancements in the biological activities of oxazole derivatives during the period of 2018–2023. The discussed activities include antitumor, central nervous system (CNS) modulation, antidiabetic, anti‐Alzheimer, antibacterial, and enzyme inhibitory effects. The review highlights the mechanisms of action of these compounds in various diseases, the most potent compounds along with their respective IC<jats:sub>50</jats:sub>/MIC (inhibitory concentration/minimum inhibitory concentration) values, and discusses the models utilized for quantifying their activity. Currently, there are eight FDA‐approved drugs bearing oxazole scaffolds available in the market. Analysis of the literature reveals that the antitumor activity of oxazole derivatives is particularly noteworthy among their various activities. The incorporation of phenyl, methoxyphenyl, or halogen‐su...\\n\\n\"}],\"temperature\":0.7,\"max_tokens\":4096}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Content-Length":"2196","Content-Type":"application/json","User-Agent":"axios/1.8.4","anthropic-version":"2023-06-01","x-api-key":"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"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":120000,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errorData":{"error":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"type":"error"},"level":"error","message":"Request failed with status code 400","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/ai.js:864:22","status":400,"timestamp":"2025-04-26 16:24:20"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 400","response":{"details":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"error":"Failed to communicate with AI assistant. Please check server logs."},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:415:30","timestamp":"2025-04-26 16:24:20"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:24:44"}
{"level":"info","message":"Searching Crossref for: patel, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:24:59"}
{"level":"info","message":"Found 10 articles (total 21729)","service":"breaking-good-api","timestamp":"2025-04-26 16:24:59"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:25:04"}
{"0":"[","1":"\n","10":"\"","100":"y","1000":"i","1001":"p","1002":"r","1003":"o","1004":"t","1005":"o","1006":"z","1007":"o","1008":"a","1009":"l","101":",","1010":",","1011":" ","1012":"a","1013":"n","1014":"d","1015":" ","1016":"a","1017":"n","1018":"t","1019":"i","102":" ","1020":"b","1021":"a","1022":"c","1023":"t","1024":"e","1025":"r","1026":"i","1027":"a","1028":"l","1029":" ","103":"s","1030":"e","1031":"f","1032":"f","1033":"e","1034":"c","1035":"t","1036":"s","1037":",","1038":" ","1039":"m","104":"p","1040":"a","1041":"k","1042":"i","1043":"n","1044":"g","1045":" ","1046":"t","1047":"h","1048":"e","1049":"m","105":"e","1050":" ","1051":"a","1052":"p","1053":"p","1054":"e","1055":"a","1056":"l","1057":"i","1058":"n","1059":"g","106":"c","1060":" ","1061":"t","1062":"o","1063":" ","1064":"m","1065":"e","1066":"d","1067":"i","1068":"c","1069":"i","107":"i","1070":"n","1071":"a","1072":"l","1073":" ","1074":"c","1075":"h","1076":"e","1077":"m","1078":"i","1079":"s","108":"a","1080":"t","1081":"s","1082":".","1083":" ","1084":"T","1085":"h","1086":"e","1087":"i","1088":"r","1089":" ","109":"l","1090":"p","1091":"r","1092":"e","1093":"s","1094":"e","1095":"n","1096":"c","1097":"e","1098":" ","1099":"i","11":"r","110":"i","1100":"n","1101":" ","1102":"n","1103":"a","1104":"t","1105":"u","1106":"r","1107":"a","1108":"l","1109":"l","111":"z","1110":"y","1111":" ","1112":"o","1113":"c","1114":"c","1115":"u","1116":"r","1117":"r","1118":"i","1119":"n","112":"i","1120":"g","1121":" ","1122":"p","1123":"h","1124":"a","1125":"r","1126":"m","1127":"a","1128":"c","1129":"o","113":"n","1130":"l","1131":"o","1132":"g","1133":"i","1134":"c","1135":"a","1136":"l","1137":"l","1138":"y","1139":" ","114":"g","1140":"a","1141":"c","1142":"t","1143":"i","1144":"v","1145":"e","1146":" ","1147":"s","1148":"u","1149":"b","115":" ","1150":"s","1151":"t","1152":"a","1153":"n","1154":"c","1155":"e","1156":"s","1157":" ","1158":"a","1159":"s","116":"i","1160":" ","1161":"w","1162":"e","1163":"l","1164":"l","1165":" ","1166":"a","1167":"s","1168":" ","1169":"s","117":"n","1170":"y","1171":"n","1172":"t","1173":"h","1174":"e","1175":"t","1176":"i","1177":"c","1178":" ","1179":"m","118":" ","1180":"e","1181":"d","1182":"i","1183":"c","1184":"i","1185":"n","1186":"e","1187":"s","1188":" ","1189":"u","119":"A","1190":"n","1191":"d","1192":"e","1193":"r","1194":"s","1195":"c","1196":"o","1197":"r","1198":"e","1199":"s","12":"o","120":"D","1200":" ","1201":"t","1202":"h","1203":"e","1204":"i","1205":"r","1206":" ","1207":"t","1208":"h","1209":"e","121":"H","1210":"r","1211":"a","1212":"p","1213":"e","1214":"u","1215":"t","1216":"i","1217":"c","1218":" ","1219":"p","122":"D","1220":"o","1221":"t","1222":"e","1223":"n","1224":"t","1225":"i","1226":"a","1227":"l","1228":".","1229":" ","123":" ","1230":"T","1231":"h","1232":"i","1233":"s","1234":" ","1235":"r","1236":"e","1237":"v","1238":"i","1239":"e","124":"t","1240":"w","1241":" ","1242":"e","1243":"n","1244":"c","1245":"o","1246":"m","1247":"p","1248":"a","1249":"s","125":"r","1250":"s","1251":"e","1252":"s","1253":" ","1254":"r","1255":"e","1256":"c","1257":"e","1258":"n","1259":"t","126":"e","1260":" ","1261":"a","1262":"d","1263":"v","1264":"a","1265":"n","1266":"c","1267":"e","1268":"m","1269":"e","127":"a","1270":"n","1271":"t","1272":"s","1273":" ","1274":"i","1275":"n","1276":" ","1277":"t","1278":"h","1279":"e","128":"t","1280":" ","1281":"b","1282":"i","1283":"o","1284":"l","1285":"o","1286":"g","1287":"i","1288":"c","1289":"a","129":"m","1290":"l","1291":" ","1292":"a","1293":"c","1294":"t","1295":"i","1296":"v","1297":"i","1298":"t","1299":"i","13":"l","130":"e","1300":"e","1301":"s","1302":" ","1303":"o","1304":"f","1305":" ","1306":"o","1307":"x","1308":"a","1309":"z","131":"n","1310":"o","1311":"l","1312":"e","1313":" ","1314":"d","1315":"e","1316":"r","1317":"i","1318":"v","1319":"a","132":"t","1320":"t","1321":"i","1322":"v","1323":"e","1324":"s","1325":" ","1326":"d","1327":"u","1328":"r","1329":"i","133":"s","1330":"n","1331":"g","1332":" ","1333":"t","1334":"h","1335":"e","1336":" ","1337":"p","1338":"e","1339":"r","134":".","1340":"i","1341":"o","1342":"d","1343":" ","1344":"o","1345":"f","1346":" ","1347":"2","1348":"0","1349":"1","135":" ","1350":"8","1351":"–","1352":"2","1353":"0","1354":"2","1355":"3","1356":".","1357":" ","1358":"T","1359":"h","136":"A","1360":"e","1361":" ","1362":"d","1363":"i","1364":"s","1365":"c","1366":"u","1367":"s","1368":"s","1369":"e","137":"n","1370":"d","1371":" ","1372":"a","1373":"c","1374":"t","1375":"i","1376":"v","1377":"i","1378":"t","1379":"i","138":"a","1380":"e","1381":"s","1382":" ","1383":"i","1384":"n","1385":"c","1386":"l","1387":"u","1388":"d","1389":"e","139":"l","1390":" ","1391":"a","1392":"n","1393":"t","1394":"i","1395":"t","1396":"u","1397":"m","1398":"o","1399":"r","14":"e","140":"y","1400":",","1401":" ","1402":"c","1403":"e","1404":"n","1405":"t","1406":"r","1407":"a","1408":"l","1409":" ","141":"z","1410":"n","1411":"e","1412":"r","1413":"v","1414":"o","1415":"u","1416":"s","1417":" ","1418":"s","1419":"y","142":"e","1420":"s","1421":"t","1422":"e","1423":"m","1424":" ","1425":"(","1426":"C","1427":"N","1428":"S","1429":")","143":" ","1430":" ","1431":"m","1432":"o","1433":"d","1434":"u","1435":"l","1436":"a","1437":"t","1438":"i","1439":"o","144":"t","1440":"n","1441":",","1442":" ","1443":"a","1444":"n","1445":"t","1446":"i","1447":"d","1448":"i","1449":"a","145":"h","1450":"b","1451":"e","1452":"t","1453":"i","1454":"c","1455":",","1456":" ","1457":"a","1458":"n","1459":"t","146":"e","1460":"i","1461":"‐","1462":"A","1463":"l","1464":"z","1465":"h","1466":"e","1467":"i","1468":"m","1469":"e","147":" ","1470":"r","1471":",","1472":" ","1473":"a","1474":"n","1475":"t","1476":"i","1477":"b","1478":"a","1479":"c","148":"p","1480":"t","1481":"e","1482":"r","1483":"i","1484":"a","1485":"l","1486":",","1487":" ","1488":"a","1489":"n","149":"r","1490":"d","1491":" ","1492":"e","1493":"n","1494":"z","1495":"y","1496":"m","1497":"e","1498":" ","1499":"i","15":"\"","150":"o","1500":"n","1501":"h","1502":"i","1503":"b","1504":"i","1505":"t","1506":"o","1507":"r","1508":"y","1509":" ","151":"v","1510":"e","1511":"f","1512":"f","1513":"e","1514":"c","1515":"t","1516":"s","1517":".","1518":" ","1519":"T","152":"i","1520":"h","1521":"e","1522":" ","1523":"r","1524":"e","1525":"v","1526":"i","1527":"e","1528":"w","1529":" ","153":"d","1530":"h","1531":"i","1532":"g","1533":"h","1534":"l","1535":"i","1536":"g","1537":"h","1538":"t","1539":"s","154":"e","1540":" ","1541":"t","1542":"h","1543":"e","1544":" ","1545":"m","1546":"e","1547":"c","1548":"h","1549":"a","155":"d","1550":"n","1551":"i","1552":"s","1553":"m","1554":"s","1555":" ","1556":"o","1557":"f","1558":" ","1559":"a","156":" ","1560":"c","1561":"t","1562":"i","1563":"o","1564":"n","1565":" ","1566":"o","1567":"f","1568":" ","1569":"t","157":"l","1570":"h","1571":"e","1572":"s","1573":"e","1574":" ","1575":"c","1576":"o","1577":"m","1578":"p","1579":"o","158":"i","1580":"u","1581":"n","1582":"d","1583":"s","1584":" ","1585":"i","1586":"n","1587":" ","1588":"v","1589":"a","159":"t","1590":"r","1591":"i","1592":"o","1593":"u","1594":"s","1595":" ","1596":"d","1597":"i","1598":"s","1599":"e","16":":","160":"e","1600":"a","1601":"s","1602":"e","1603":"s","1604":",","1605":" ","1606":"t","1607":"h","1608":"e","1609":" ","161":"r","1610":"m","1611":"o","1612":"s","1613":"t","1614":" ","1615":"p","1616":"o","1617":"t","1618":"e","1619":"n","162":"a","1620":"t","1621":" ","1622":"c","1623":"o","1624":"m","1625":"p","1626":"o","1627":"u","1628":"n","1629":"d","163":"t","1630":"s","1631":" ","1632":"a","1633":"l","1634":"o","1635":"n","1636":"g","1637":" ","1638":"w","1639":"i","164":"u","1640":"t","1641":"h","1642":" ","1643":"t","1644":"h","1645":"e","1646":"i","1647":"r","1648":" ","1649":"r","165":"r","1650":"e","1651":"s","1652":"p","1653":"e","1654":"c","1655":"t","1656":"i","1657":"v","1658":"e","1659":" ","166":"e","1660":"I","1661":"C","1662":"<","1663":"j","1664":"a","1665":"t","1666":"s","1667":":","1668":"s","1669":"u","167":" ","1670":"b","1671":">","1672":"5","1673":"0","1674":"<","1675":"/","1676":"j","1677":"a","1678":"t","1679":"s","168":"w","1680":":","1681":"s","1682":"u","1683":"b","1684":">","1685":"/","1686":"M","1687":"I","1688":"C","1689":" ","169":"i","1690":"(","1691":"i","1692":"n","1693":"h","1694":"i","1695":"b","1696":"i","1697":"t","1698":"o","1699":"r","17":" ","170":"t","1700":"y","1701":" ","1702":"c","1703":"o","1704":"n","1705":"c","1706":"e","1707":"n","1708":"t","1709":"r","171":"h","1710":"a","1711":"t","1712":"i","1713":"o","1714":"n","1715":"/","1716":"m","1717":"i","1718":"n","1719":"i","172":" ","1720":"m","1721":"u","1722":"m","1723":" ","1724":"i","1725":"n","1726":"h","1727":"i","1728":"b","1729":"i","173":"a","1730":"t","1731":"o","1732":"r","1733":"y","1734":" ","1735":"c","1736":"o","1737":"n","1738":"c","1739":"e","174":" ","1740":"n","1741":"t","1742":"r","1743":"a","1744":"t","1745":"i","1746":"o","1747":"n","1748":")","1749":" ","175":"f","1750":"v","1751":"a","1752":"l","1753":"u","1754":"e","1755":"s","1756":",","1757":" ","1758":"a","1759":"n","176":"o","1760":"d","1761":" ","1762":"d","1763":"i","1764":"s","1765":"c","1766":"u","1767":"s","1768":"s","1769":"e","177":"c","1770":"s","1771":" ","1772":"t","1773":"h","1774":"e","1775":" ","1776":"m","1777":"o","1778":"d","1779":"e","178":"u","1780":"l","1781":"s","1782":" ","1783":"u","1784":"t","1785":"i","1786":"l","1787":"i","1788":"z","1789":"e","179":"s","1790":"d","1791":" ","1792":"f","1793":"o","1794":"r","1795":" ","1796":"q","1797":"u","1798":"a","1799":"n","18":"\"","180":" ","1800":"t","1801":"i","1802":"f","1803":"y","1804":"i","1805":"n","1806":"g","1807":" ","1808":"t","1809":"h","181":"o","1810":"e","1811":"i","1812":"r","1813":" ","1814":"a","1815":"c","1816":"t","1817":"i","1818":"v","1819":"i","182":"n","1820":"t","1821":"y","1822":".","1823":" ","1824":"C","1825":"u","1826":"r","1827":"r","1828":"e","1829":"n","183":" ","1830":"t","1831":"l","1832":"y","1833":",","1834":" ","1835":"t","1836":"h","1837":"e","1838":"r","1839":"e","184":"s","1840":" ","1841":"a","1842":"r","1843":"e","1844":" ","1845":"e","1846":"i","1847":"g","1848":"h","1849":"t","185":"c","1850":" ","1851":"F","1852":"D","1853":"A","1854":"‐","1855":"a","1856":"p","1857":"p","1858":"r","1859":"o","186":"i","1860":"v","1861":"e","1862":"d","1863":" ","1864":"d","1865":"r","1866":"u","1867":"g","1868":"s","1869":" ","187":"e","1870":"b","1871":"e","1872":"a","1873":"r","1874":"i","1875":"n","1876":"g","1877":" ","1878":"o","1879":"x","188":"n","1880":"a","1881":"z","1882":"o","1883":"l","1884":"e","1885":" ","1886":"s","1887":"c","1888":"a","1889":"f","189":"t","1890":"f","1891":"o","1892":"l","1893":"d","1894":"s","1895":" ","1896":"a","1897":"v","1898":"a","1899":"i","19":"s","190":"i","1900":"l","1901":"a","1902":"b","1903":"l","1904":"e","1905":" ","1906":"i","1907":"n","1908":" ","1909":"t","191":"f","1910":"h","1911":"e","1912":" ","1913":"m","1914":"a","1915":"r","1916":"k","1917":"e","1918":"t","1919":".","192":"i","1920":" ","1921":"A","1922":"n","1923":"a","1924":"l","1925":"y","1926":"s","1927":"i","1928":"s","1929":" ","193":"c","1930":"o","1931":"f","1932":" ","1933":"t","1934":"h","1935":"e","1936":" ","1937":"l","1938":"i","1939":"t","194":" ","1940":"e","1941":"r","1942":"a","1943":"t","1944":"u","1945":"r","1946":"e","1947":" ","1948":"r","1949":"e","195":"a","1950":"v","1951":"e","1952":"a","1953":"l","1954":"s","1955":" ","1956":"t","1957":"h","1958":"a","1959":"t","196":"c","1960":" ","1961":"t","1962":"h","1963":"e","1964":" ","1965":"a","1966":"n","1967":"t","1968":"i","1969":"t","197":"c","1970":"u","1971":"m","1972":"o","1973":"r","1974":" ","1975":"a","1976":"c","1977":"t","1978":"i","1979":"v","198":"u","1980":"i","1981":"t","1982":"y","1983":" ","1984":"o","1985":"f","1986":" ","1987":"o","1988":"x","1989":"a","199":"r","1990":"z","1991":"o","1992":"l","1993":"e","1994":" ","1995":"d","1996":"e","1997":"r","1998":"i","1999":"v","2":" ","20":"y","200":"a","2000":"a","2001":"t","2002":"i","2003":"v","2004":"e","2005":"s","2006":" ","2007":"i","2008":"s","2009":" ","201":"c","2010":"p","2011":"a","2012":"r","2013":"t","2014":"i","2015":"c","2016":"u","2017":"l","2018":"a","2019":"r","202":"y","2020":"l","2021":"y","2022":" ","2023":"n","2024":"o","2025":"t","2026":"e","2027":"w","2028":"o","2029":"r","203":" ","2030":"t","2031":"h","2032":"y","2033":" ","2034":"a","2035":"m","2036":"o","2037":"n","2038":"g","2039":" ","204":"a","2040":"t","2041":"h","2042":"e","2043":"i","2044":"r","2045":" ","2046":"v","2047":"a","2048":"r","2049":"i","205":"n","2050":"o","2051":"u","2052":"s","2053":" ","2054":"a","2055":"c","2056":"t","2057":"i","2058":"v","2059":"i","206":"d","2060":"t","2061":"i","2062":"e","2063":"s","2064":".","2065":" ","2066":"T","2067":"h","2068":"e","2069":" ","207":" ","2070":"i","2071":"n","2072":"c","2073":"o","2074":"r","2075":"p","2076":"o","2077":"r","2078":"a","2079":"t","208":"c","2080":"i","2081":"o","2082":"n","2083":" ","2084":"o","2085":"f","2086":" ","2087":"p","2088":"h","2089":"e","209":"l","2090":"n","2091":"y","2092":"l","2093":",","2094":" ","2095":"m","2096":"e","2097":"t","2098":"h","2099":"o","21":"s","210":"i","2100":"x","2101":"y","2102":"p","2103":"h","2104":"e","2105":"n","2106":"y","2107":"l","2108":",","2109":" ","211":"n","2110":"o","2111":"r","2112":" ","2113":"h","2114":"a","2115":"l","2116":"o","2117":"g","2118":"e","2119":"n","212":"i","2120":"‐","2121":"s","2122":"u","2123":".","2124":".","2125":".","2126":"\\","2127":"n","2128":"\\","2129":"n","213":"c","2130":"\"","2131":"\n","2132":" ","2133":" ","2134":"}","2135":"\n","2136":"]","214":"a","215":"l","216":" ","217":"r","218":"e","219":"l","22":"t","220":"e","221":"v","222":"a","223":"n","224":"c","225":"e","226":".","227":"\"","228":"\n","229":" ","23":"e","230":" ","231":"}","232":",","233":"\n","234":" ","235":" ","236":"{","237":"\n","238":" ","239":" ","24":"m","240":" ","241":" ","242":"\"","243":"r","244":"o","245":"l","246":"e","247":"\"","248":":","249":" ","25":"\"","250":"\"","251":"u","252":"s","253":"e","254":"r","255":"\"","256":",","257":"\n","258":" ","259":" ","26":",","260":" ","261":" ","262":"\"","263":"c","264":"o","265":"n","266":"t","267":"e","268":"n","269":"t","27":"\n","270":"\"","271":":","272":" ","273":"\"","274":"S","275":"u","276":"m","277":"m","278":"a","279":"r","28":" ","280":"i","281":"z","282":"e","283":" ","284":"t","285":"h","286":"e","287":" ","288":"k","289":"e","29":" ","290":"y","291":" ","292":"f","293":"i","294":"n","295":"d","296":"i","297":"n","298":"g","299":"s","3":" ","30":" ","300":" ","301":"a","302":"n","303":"d","304":" ","305":"r","306":"e","307":"l","308":"e","309":"v","31":" ","310":"a","311":"n","312":"c","313":"e","314":" ","315":"t","316":"o","317":" ","318":"A","319":"D","32":"\"","320":"H","321":"D","322":" ","323":"d","324":"r","325":"u","326":"g","327":" ","328":"d","329":"i","33":"c","330":"s","331":"c","332":"o","333":"v","334":"e","335":"r","336":"y","337":" ","338":"f","339":"r","34":"o","340":"o","341":"m","342":" ","343":"t","344":"h","345":"i","346":"s","347":" ","348":"a","349":"r","35":"n","350":"t","351":"i","352":"c","353":"l","354":"e","355":" ","356":"t","357":"i","358":"t","359":"l","36":"t","360":"e","361":"d","362":" ","363":"\\","364":"\"","365":"R","366":"e","367":"v","368":"i","369":"e","37":"e","370":"w","371":" ","372":"o","373":"n","374":" ","375":"T","376":"h","377":"e","378":"r","379":"a","38":"n","380":"p","381":"e","382":"u","383":"t","384":"i","385":"c","386":" ","387":"D","388":"i","389":"v","39":"t","390":"e","391":"r","392":"s","393":"i","394":"t","395":"y","396":" ","397":"o","398":"f","399":" ","4":"{","40":"\"","400":"O","401":"x","402":"a","403":"z","404":"o","405":"l","406":"e","407":" ","408":"S","409":"c","41":":","410":"a","411":"f","412":"f","413":"o","414":"l","415":"d","416":":","417":" ","418":"A","419":"n","42":" ","420":" ","421":"U","422":"p","423":"d","424":"a","425":"t","426":"e","427":"\\","428":"\"","429":".","43":"\"","430":"\\","431":"n","432":"\\","433":"n","434":"B","435":"a","436":"s","437":"e","438":"d","439":" ","44":"Y","440":"o","441":"n","442":" ","443":"t","444":"h","445":"e","446":" ","447":"p","448":"r","449":"o","45":"o","450":"v","451":"i","452":"d","453":"e","454":"d","455":" ","456":"l","457":"i","458":"t","459":"e","46":"u","460":"r","461":"a","462":"t","463":"u","464":"r","465":"e","466":" ","467":"c","468":"o","469":"n","47":" ","470":"t","471":"e","472":"x","473":"t","474":":","475":"\\","476":"n","477":"A","478":"n","479":"a","48":"a","480":"l","481":"y","482":"z","483":"e","484":" ","485":"t","486":"h","487":"e","488":" ","489":"f","49":"r","490":"o","491":"l","492":"l","493":"o","494":"w","495":"i","496":"n","497":"g","498":" ","499":"l","5":"\n","50":"e","500":"i","501":"t","502":"e","503":"r","504":"a","505":"t","506":"u","507":"r","508":"e","509":" ","51":" ","510":"e","511":"x","512":"c","513":"e","514":"r","515":"p","516":"t","517":"s","518":":","519":"\\","52":"a","520":"n","521":"\\","522":"n","523":"-","524":"-","525":"-","526":" ","527":"A","528":"r","529":"t","53":"n","530":"i","531":"c","532":"l","533":"e","534":" ","535":"1","536":" ","537":"-","538":"-","539":"-","54":" ","540":"\\","541":"n","542":"T","543":"i","544":"t","545":"l","546":"e","547":":","548":" ","549":"R","55":"e","550":"e","551":"v","552":"i","553":"e","554":"w","555":" ","556":"o","557":"n","558":" ","559":"T","56":"x","560":"h","561":"e","562":"r","563":"a","564":"p","565":"e","566":"u","567":"t","568":"i","569":"c","57":"p","570":" ","571":"D","572":"i","573":"v","574":"e","575":"r","576":"s","577":"i","578":"t","579":"y","58":"e","580":" ","581":"o","582":"f","583":" ","584":"O","585":"x","586":"a","587":"z","588":"o","589":"l","59":"r","590":"e","591":" ","592":"S","593":"c","594":"a","595":"f","596":"f","597":"o","598":"l","599":"d","6":" ","60":"t","600":":","601":" ","602":"A","603":"n","604":" ","605":"U","606":"p","607":"d","608":"a","609":"t","61":" ","610":"e","611":"\\","612":"n","613":"A","614":"b","615":"s","616":"t","617":"r","618":"a","619":"c","62":"i","620":"t","621":":","622":" ","623":"<","624":"j","625":"a","626":"t","627":"s","628":":","629":"t","63":"n","630":"i","631":"t","632":"l","633":"e","634":">","635":"A","636":"b","637":"s","638":"t","639":"r","64":" ","640":"a","641":"c","642":"t","643":"<","644":"/","645":"j","646":"a","647":"t","648":"s","649":":","65":"n","650":"t","651":"i","652":"t","653":"l","654":"e","655":">","656":"<","657":"j","658":"a","659":"t","66":"e","660":"s","661":":","662":"p","663":">","664":"O","665":"x","666":"a","667":"z","668":"o","669":"l","67":"u","670":"e","671":",","672":" ","673":"a","674":" ","675":"f","676":"i","677":"v","678":"e","679":"‐","68":"r","680":"m","681":"e","682":"m","683":"b","684":"e","685":"r","686":"e","687":"d","688":" ","689":"c","69":"o","690":"y","691":"c","692":"l","693":"i","694":"c","695":" ","696":"r","697":"i","698":"n","699":"g","7":" ","70":"p","700":" ","701":"c","702":"o","703":"n","704":"t","705":"a","706":"i","707":"n","708":"i","709":"n","71":"h","710":"g","711":" ","712":"o","713":"x","714":"y","715":"g","716":"e","717":"n","718":" ","719":"a","72":"a","720":"n","721":"d","722":" ","723":"n","724":"i","725":"t","726":"r","727":"o","728":"g","729":"e","73":"r","730":"n","731":",","732":" ","733":"d","734":"i","735":"s","736":"p","737":"l","738":"a","739":"y","74":"m","740":"s","741":" ","742":"d","743":"i","744":"v","745":"e","746":"r","747":"s","748":"e","749":" ","75":"a","750":"i","751":"n","752":"t","753":"e","754":"r","755":"a","756":"c","757":"t","758":"i","759":"o","76":"c","760":"n","761":"s","762":" ","763":"a","764":"n","765":"d","766":" ","767":"s","768":"t","769":"r","77":"o","770":"u","771":"c","772":"t","773":"u","774":"r","775":"a","776":"l","777":" ","778":"v","779":"a","78":"l","780":"r","781":"i","782":"a","783":"t","784":"i","785":"o","786":"n","787":"s","788":",","789":" ","79":"o","790":"e","791":"n","792":"h","793":"a","794":"n","795":"c","796":"i","797":"n","798":"g","799":" ","8":" ","80":"g","800":"i","801":"t","802":"s","803":" ","804":"p","805":"o","806":"t","807":"e","808":"n","809":"t","81":"y","810":"i","811":"a","812":"l","813":" ","814":"a","815":"p","816":"p","817":"l","818":"i","819":"c","82":" ","820":"a","821":"t","822":"i","823":"o","824":"n","825":"s","826":" ","827":"a","828":"c","829":"r","83":"a","830":"o","831":"s","832":"s","833":" ","834":"v","835":"a","836":"r","837":"i","838":"o","839":"u","84":"n","840":"s","841":" ","842":"d","843":"o","844":"m","845":"a","846":"i","847":"n","848":"s","849":".","85":"d","850":" ","851":"O","852":"x","853":"a","854":"z","855":"o","856":"l","857":"e","858":" ","859":"d","86":" ","860":"e","861":"r","862":"i","863":"v","864":"a","865":"t","866":"i","867":"v","868":"e","869":"s","87":"d","870":" ","871":"e","872":"x","873":"h","874":"i","875":"b","876":"i","877":"t","878":" ","879":"d","88":"r","880":"i","881":"v","882":"e","883":"r","884":"s","885":"e","886":" ","887":"p","888":"h","889":"a","89":"u","890":"r","891":"m","892":"a","893":"c","894":"o","895":"l","896":"o","897":"g","898":"i","899":"c","9":" ","90":"g","900":"a","901":"l","902":" ","903":"a","904":"c","905":"t","906":"i","907":"v","908":"i","909":"t","91":" ","910":"i","911":"e","912":"s","913":",","914":" ","915":"i","916":"n","917":"c","918":"l","919":"u","92":"d","920":"d","921":"i","922":"n","923":"g","924":" ","925":"a","926":"n","927":"t","928":"i","929":"d","93":"i","930":"i","931":"a","932":"b","933":"e","934":"t","935":"i","936":"c","937":",","938":" ","939":"a","94":"s","940":"n","941":"t","942":"i","943":"c","944":"o","945":"n","946":"v","947":"u","948":"l","949":"s","95":"c","950":"a","951":"n","952":"t","953":",","954":" ","955":"a","956":"n","957":"t","958":"i","959":"c","96":"o","960":"a","961":"n","962":"c","963":"e","964":"r","965":",","966":" ","967":"p","968":"h","969":"o","97":"v","970":"s","971":"p","972":"h","973":"o","974":"d","975":"i","976":"e","977":"s","978":"t","979":"e","98":"e","980":"r","981":"a","982":"s","983":"e","984":" ","985":"i","986":"n","987":"h","988":"i","989":"b","99":"r","990":"i","991":"t","992":"i","993":"o","994":"n","995":",","996":" ","997":"a","998":"n","999":"t","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:25:04"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:25:04"}
{"config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"baseURL":"https://api.anthropic.com/v1/messages","data":"{\"model\":\"claude-3-7-sonnet-20250219\",\"messages\":[{\"role\":\"system\",\"content\":\"You are an expert in neuropharmacology and drug discovery, specializing in ADHD treatments. Analyze the provided literature with a focus on scientific accuracy and clinical relevance.\"},{\"role\":\"user\",\"content\":\"Summarize the key findings and relevance to ADHD drug discovery from this article titled \\\"Review on Therapeutic Diversity of Oxazole Scaffold: An Update\\\".\\n\\nBased on the provided literature context:\\nAnalyze the following literature excerpts:\\n\\n--- Article 1 ---\\nTitle: Review on Therapeutic Diversity of Oxazole Scaffold: An Update\\nAbstract: <jats:title>Abstract</jats:title><jats:p>Oxazole, a five‐membered cyclic ring containing oxygen and nitrogen, displays diverse interactions and structural variations, enhancing its potential applications across various domains. Oxazole derivatives exhibit diverse pharmacological activities, including antidiabetic, anticonvulsant, anticancer, phosphodiesterase inhibition, antiprotozoal, and antibacterial effects, making them appealing to medicinal chemists. Their presence in naturally occurring pharmacologically active substances as well as synthetic medicines underscores their therapeutic potential. This review encompasses recent advancements in the biological activities of oxazole derivatives during the period of 2018–2023. The discussed activities include antitumor, central nervous system (CNS) modulation, antidiabetic, anti‐Alzheimer, antibacterial, and enzyme inhibitory effects. The review highlights the mechanisms of action of these compounds in various diseases, the most potent compounds along with their respective IC<jats:sub>50</jats:sub>/MIC (inhibitory concentration/minimum inhibitory concentration) values, and discusses the models utilized for quantifying their activity. Currently, there are eight FDA‐approved drugs bearing oxazole scaffolds available in the market. Analysis of the literature reveals that the antitumor activity of oxazole derivatives is particularly noteworthy among their various activities. The incorporation of phenyl, methoxyphenyl, or halogen‐su...\\n\\n\"}],\"temperature\":0.7,\"max_tokens\":4096}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Content-Length":"2196","Content-Type":"application/json","User-Agent":"axios/1.8.4","anthropic-version":"2023-06-01","x-api-key":"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"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":120000,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errorData":{"error":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"type":"error"},"level":"error","message":"Request failed with status code 400","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/ai.js:864:22","status":400,"timestamp":"2025-04-26 16:25:04"}
{"level":"error","message":"Error analyzing literature: Request failed with status code 400","response":{"details":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"error":"Failed to communicate with AI assistant. Please check server logs."},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:529:35)\n    at endReadableNT (node:internal/streams/readable:1400:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n    at Axios.request (/Users/mohulshukla/Desktop/breakgood/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /Users/mohulshukla/Desktop/breakgood/bga/backend/api/literature.js:435:30","timestamp":"2025-04-26 16:25:04"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:26:35"}
{"level":"info","message":"Searching Crossref for: shukla, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:27:13"}
{"level":"info","message":"Found 10 articles (total 3928)","service":"breaking-good-api","timestamp":"2025-04-26 16:27:14"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:27:20"}
{"0":"[","1":"\n","10":"\"","100":"o","101":"v","102":"e","103":"r","104":"y","105":" ","106":"f","107":"r","108":"o","109":"m","11":"r","110":" ","111":"t","112":"h","113":"i","114":"s","115":" ","116":"a","117":"r","118":"t","119":"i","12":"o","120":"c","121":"l","122":"e","123":" ","124":"t","125":"i","126":"t","127":"l","128":"e","129":"d","13":"l","130":" ","131":"\\","132":"\"","133":"S","134":"o","135":"m","136":"e","137":" ","138":"F","139":"i","14":"e","140":"x","141":"e","142":"d","143":" ","144":"P","145":"o","146":"i","147":"n","148":"t","149":" ","15":"\"","150":"T","151":"h","152":"e","153":"o","154":"r","155":"e","156":"m","157":"s","158":" ","159":"f","16":":","160":"o","161":"r","162":" ","163":"α","164":"-","165":"A","166":"d","167":"m","168":"i","169":"s","17":" ","170":"s","171":"i","172":"b","173":"l","174":"e","175":" ","176":"M","177":"a","178":"p","179":"p","18":"\"","180":"i","181":"n","182":"g","183":"s","184":" ","185":"i","186":"n","187":" ","188":"C","189":"o","19":"u","190":"m","191":"p","192":"l","193":"e","194":"x","195":"-","196":"V","197":"a","198":"l","199":"u","2":" ","20":"s","200":"e","201":"d","202":" ","203":"F","204":"u","205":"z","206":"z","207":"y","208":" ","209":"M","21":"e","210":"e","211":"t","212":"r","213":"i","214":"c","215":" ","216":"S","217":"p","218":"a","219":"c","22":"r","220":"e","221":"s","222":"\\","223":"\"","224":".","225":"\\","226":"n","227":"\\","228":"n","229":"B","23":"\"","230":"a","231":"s","232":"e","233":"d","234":" ","235":"o","236":"n","237":" ","238":"t","239":"h","24":",","240":"e","241":" ","242":"p","243":"r","244":"o","245":"v","246":"i","247":"d","248":"e","249":"d","25":"\n","250":" ","251":"l","252":"i","253":"t","254":"e","255":"r","256":"a","257":"t","258":"u","259":"r","26":" ","260":"e","261":" ","262":"c","263":"o","264":"n","265":"t","266":"e","267":"x","268":"t","269":":","27":" ","270":"\\","271":"n","272":"A","273":"n","274":"a","275":"l","276":"y","277":"z","278":"e","279":" ","28":" ","280":"t","281":"h","282":"e","283":" ","284":"f","285":"o","286":"l","287":"l","288":"o","289":"w","29":" ","290":"i","291":"n","292":"g","293":" ","294":"l","295":"i","296":"t","297":"e","298":"r","299":"a","3":" ","30":"\"","300":"t","301":"u","302":"r","303":"e","304":" ","305":"e","306":"x","307":"c","308":"e","309":"r","31":"c","310":"p","311":"t","312":"s","313":":","314":"\\","315":"n","316":"\\","317":"n","318":"-","319":"-","32":"o","320":"-","321":" ","322":"A","323":"r","324":"t","325":"i","326":"c","327":"l","328":"e","329":" ","33":"n","330":"1","331":" ","332":"-","333":"-","334":"-","335":"\\","336":"n","337":"T","338":"i","339":"t","34":"t","340":"l","341":"e","342":":","343":" ","344":"S","345":"o","346":"m","347":"e","348":" ","349":"F","35":"e","350":"i","351":"x","352":"e","353":"d","354":" ","355":"P","356":"o","357":"i","358":"n","359":"t","36":"n","360":" ","361":"T","362":"h","363":"e","364":"o","365":"r","366":"e","367":"m","368":"s","369":" ","37":"t","370":"f","371":"o","372":"r","373":" ","374":"α","375":"-","376":"A","377":"d","378":"m","379":"i","38":"\"","380":"s","381":"s","382":"i","383":"b","384":"l","385":"e","386":" ","387":"M","388":"a","389":"p","39":":","390":"p","391":"i","392":"n","393":"g","394":"s","395":" ","396":"i","397":"n","398":" ","399":"C","4":"{","40":" ","400":"o","401":"m","402":"p","403":"l","404":"e","405":"x","406":"-","407":"V","408":"a","409":"l","41":"\"","410":"u","411":"e","412":"d","413":" ","414":"F","415":"u","416":"z","417":"z","418":"y","419":" ","42":"S","420":"M","421":"e","422":"t","423":"r","424":"i","425":"c","426":" ","427":"S","428":"p","429":"a","43":"u","430":"c","431":"e","432":"s","433":"\\","434":"n","435":"A","436":"b","437":"s","438":"t","439":"r","44":"m","440":"a","441":"c","442":"t","443":":","444":" ","445":"<","446":"j","447":"a","448":"t","449":"s","45":"m","450":":","451":"p","452":">","453":"T","454":"h","455":"i","456":"s","457":" ","458":"p","459":"a","46":"a","460":"p","461":"e","462":"r","463":" ","464":"d","465":"i","466":"s","467":"c","468":"u","469":"s","47":"r","470":"s","471":"e","472":"s","473":" ","474":"s","475":"o","476":"m","477":"e","478":" ","479":"p","48":"i","480":"r","481":"o","482":"p","483":"e","484":"r","485":"t","486":"i","487":"e","488":"s","489":" ","49":"z","490":"o","491":"f","492":" ","493":"c","494":"o","495":"m","496":"p","497":"l","498":"e","499":"x","5":"\n","50":"e","500":"-","501":"v","502":"a","503":"l","504":"u","505":"e","506":"d","507":" ","508":"f","509":"u","51":" ","510":"z","511":"z","512":"y","513":" ","514":"m","515":"e","516":"t","517":"r","518":"i","519":"c","52":"t","520":" ","521":"s","522":"p","523":"a","524":"c","525":"e","526":"s","527":" ","528":"a","529":"n","53":"h","530":"d","531":" ","532":"i","533":"n","534":"t","535":"r","536":"o","537":"d","538":"u","539":"c","54":"e","540":"e","541":"s","542":" ","543":"t","544":"h","545":"e","546":" ","547":"α","548":"-","549":"a","55":" ","550":"d","551":"m","552":"i","553":"s","554":"s","555":"i","556":"b","557":"l","558":"e","559":" ","56":"k","560":"m","561":"a","562":"p","563":"p","564":"i","565":"n","566":"g","567":"s","568":" ","569":"i","57":"e","570":"n","571":" ","572":"t","573":"h","574":"e","575":" ","576":"s","577":"e","578":"t","579":"t","58":"y","580":"i","581":"n","582":"g","583":" ","584":"o","585":"f","586":" ","587":"c","588":"o","589":"m","59":" ","590":"p","591":"l","592":"e","593":"x","594":"-","595":"v","596":"a","597":"l","598":"u","599":"e","6":" ","60":"f","600":"d","601":" ","602":"f","603":"u","604":"z","605":"z","606":"y","607":" ","608":"m","609":"e","61":"i","610":"t","611":"r","612":"i","613":"c","614":" ","615":"s","616":"p","617":"a","618":"c","619":"e","62":"n","620":"s","621":".","622":" ","623":"W","624":"e","625":" ","626":"e","627":"s","628":"t","629":"a","63":"d","630":"b","631":"l","632":"i","633":"s","634":"h","635":" ","636":"f","637":"i","638":"x","639":"e","64":"i","640":"d","641":" ","642":"p","643":"o","644":"i","645":"n","646":"t","647":" ","648":"t","649":"h","65":"n","650":"e","651":"o","652":"r","653":"e","654":"m","655":"s","656":" ","657":"f","658":"o","659":"r","66":"g","660":" ","661":"m","662":"a","663":"p","664":"p","665":"i","666":"n","667":"g","668":"s","669":" ","67":"s","670":"s","671":"a","672":"t","673":"i","674":"s","675":"f","676":"y","677":"i","678":"n","679":"g","68":" ","680":" ","681":"s","682":"y","683":"m","684":"m","685":"e","686":"t","687":"r","688":"i","689":"c","69":"a","690":" ","691":"c","692":"o","693":"n","694":"t","695":"r","696":"a","697":"c","698":"t","699":"i","7":" ","70":"n","700":"v","701":"e","702":" ","703":"c","704":"o","705":"n","706":"d","707":"i","708":"t","709":"i","71":"d","710":"o","711":"n","712":"s","713":" ","714":"w","715":"i","716":"t","717":"h","718":" ","719":"c","72":" ","720":"o","721":"n","722":"t","723":"r","724":"o","725":"l","726":" ","727":"f","728":"u","729":"n","73":"r","730":"c","731":"t","732":"i","733":"o","734":"n","735":"s","736":".","737":" ","738":"T","739":"h","74":"e","740":"e","741":" ","742":"r","743":"e","744":"s","745":"u","746":"l","747":"t","748":"s","749":" ","75":"l","750":"o","751":"f","752":" ","753":"t","754":"h","755":"i","756":"s","757":" ","758":"p","759":"a","76":"e","760":"p","761":"e","762":"r","763":" ","764":"g","765":"e","766":"n","767":"e","768":"r","769":"a","77":"v","770":"l","771":"i","772":"z","773":"e","774":",","775":" ","776":"e","777":"x","778":"t","779":"e","78":"a","780":"n","781":"d","782":",","783":" ","784":"a","785":"n","786":"d","787":" ","788":"i","789":"m","79":"n","790":"p","791":"r","792":"o","793":"v","794":"e","795":" ","796":"s","797":"e","798":"v","799":"e","8":" ","80":"c","800":"r","801":"a","802":"l","803":" ","804":"r","805":"e","806":"s","807":"u","808":"l","809":"t","81":"e","810":"s","811":" ","812":"f","813":"r","814":"o","815":"m","816":" ","817":"m","818":"e","819":"t","82":" ","820":"r","821":"i","822":"c","823":",","824":" ","825":"f","826":"u","827":"z","828":"z","829":"y","83":"t","830":" ","831":"m","832":"e","833":"t","834":"r","835":"i","836":"c","837":",","838":" ","839":"a","84":"o","840":"n","841":"d","842":" ","843":"c","844":"o","845":"m","846":"p","847":"l","848":"e","849":"x","85":" ","850":"-","851":"v","852":"a","853":"l","854":"u","855":"e","856":"d","857":" ","858":"f","859":"u","86":"A","860":"z","861":"z","862":"y","863":" ","864":"m","865":"e","866":"t","867":"r","868":"i","869":"c","87":"D","870":" ","871":"s","872":"p","873":"a","874":"c","875":"e","876":"s","877":".","878":" ","879":"S","88":"H","880":"e","881":"v","882":"e","883":"r","884":"a","885":"l","886":" ","887":"e","888":"x","889":"a","89":"D","890":"m","891":"p","892":"l","893":"e","894":"s","895":" ","896":"a","897":"r","898":"e","899":" ","9":" ","90":" ","900":"p","901":"r","902":"e","903":"s","904":"e","905":"n","906":"t","907":"e","908":"d","909":" ","91":"d","910":"t","911":"h","912":"a","913":"t","914":" ","915":"v","916":"e","917":"r","918":"i","919":"f","92":"r","920":"y","921":" ","922":"a","923":"n","924":"d","925":" ","926":"i","927":"l","928":"l","929":"u","93":"u","930":"s","931":"t","932":"r","933":"a","934":"t","935":"e","936":" ","937":"t","938":"h","939":"e","94":"g","940":" ","941":"n","942":"e","943":"w","944":" ","945":"c","946":"o","947":"n","948":"c","949":"e","95":" ","950":"p","951":"t","952":"s","953":",","954":" ","955":"c","956":"l","957":"a","958":"i","959":"m","96":"d","960":"s","961":",","962":" ","963":"a","964":"n","965":"d","966":" ","967":"r","968":"e","969":"s","97":"i","970":"u","971":"l","972":"t","973":"s","974":".","975":"<","976":"/","977":"j","978":"a","979":"t","98":"s","980":"s","981":":","982":"p","983":">","984":".","985":".","986":".","987":"\\","988":"n","989":"\\","99":"c","990":"n","991":"\"","992":"\n","993":" ","994":" ","995":"}","996":"\n","997":"]","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:27:20"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:27:20"}
{"level":"info","message":"Received response from Anthropic API.","service":"breaking-good-api","timestamp":"2025-04-26 16:27:25"}
{"level":"info","message":"Searching Crossref for: patel, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:30:04"}
{"level":"info","message":"Found 10 articles (total 21729)","service":"breaking-good-api","timestamp":"2025-04-26 16:30:17"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:30:17"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:30:18"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:30:21"}
{"0":"[","1":"\n","10":"\"","100":"o","1000":"a","1001":"b","1002":"i","1003":"s","1004":" ","1005":"o","1006":"n","1007":" ","1008":"A","1009":"D","101":"v","1010":"H","1011":"D","1012":" ","1013":"s","1014":"y","1015":"m","1016":"p","1017":"t","1018":"o","1019":"m","102":"e","1020":"s","1021":" ","1022":"a","1023":"n","1024":"d","1025":" ","1026":"m","1027":"e","1028":"d","1029":"i","103":"r","1030":"c","1031":"a","1032":"t","1033":"i","1034":"o","1035":"n","1036":" ","1037":"s","1038":"i","1039":"d","104":"y","1040":"e","1041":" ","1042":"e","1043":"f","1044":"f","1045":"e","1046":"c","1047":"t","1048":"s","1049":",","105":" ","1050":" ","1051":"a","1052":"s","1053":" ","1054":"w","1055":"e","1056":"l","1057":"l","1058":" ","1059":"a","106":"f","1060":"s","1061":" ","1062":"e","1063":"x","1064":"e","1065":"c","1066":"u","1067":"t","1068":"i","1069":"v","107":"r","1070":"e","1071":" ","1072":"d","1073":"y","1074":"s","1075":"f","1076":"u","1077":"n","1078":"c","1079":"t","108":"o","1080":"i","1081":"o","1082":"n","1083":".","1084":" ","1085":"<","1086":"/","1087":"j","1088":"a","1089":"t","109":"m","1090":"s","1091":":","1092":"p","1093":">","1094":"<","1095":"/","1096":"j","1097":"a","1098":"t","1099":"s","11":"r","110":" ","1100":":","1101":"s","1102":"e","1103":"c","1104":">","1105":"<","1106":"j","1107":"a","1108":"t","1109":"s","111":"t","1110":":","1111":"s","1112":"e","1113":"c","1114":">","1115":"<","1116":"j","1117":"a","1118":"t","1119":"s","112":"h","1120":":","1121":"t","1122":"i","1123":"t","1124":"l","1125":"e","1126":">","1127":"R","1128":"e","1129":"s","113":"i","1130":"u","1131":"l","1132":"t","1133":"s","1134":":","1135":"<","1136":"/","1137":"j","1138":"a","1139":"t","114":"s","1140":"s","1141":":","1142":"t","1143":"i","1144":"t","1145":"l","1146":"e","1147":">","1148":"<","1149":"j","115":" ","1150":"a","1151":"t","1152":"s","1153":":","1154":"p","1155":">","1156":" ","1157":"P","1158":"a","1159":"r","116":"a","1160":"t","1161":"i","1162":"c","1163":"i","1164":"p","1165":"a","1166":"n","1167":"t","1168":"s","1169":" ","117":"r","1170":"w","1171":"i","1172":"t","1173":"h","1174":" ","1175":"A","1176":"D","1177":"H","1178":"D","1179":" ","118":"t","1180":"w","1181":"h","1182":"o","1183":" ","1184":"h","1185":"a","1186":"v","1187":"e","1188":" ","1189":"u","119":"i","1190":"s","1191":"e","1192":"d","1193":" ","1194":"c","1195":"a","1196":"n","1197":"n","1198":"a","1199":"b","12":"o","120":"c","1200":"i","1201":"s","1202":" ","1203":"r","1204":"e","1205":"p","1206":"o","1207":"r","1208":"t","1209":"e","121":"l","1210":"d","1211":" ","1212":"t","1213":"h","1214":"a","1215":"t","1216":" ","1217":"c","1218":"a","1219":"n","122":"e","1220":"n","1221":"a","1222":"b","1223":"i","1224":"s","1225":" ","1226":"h","1227":"a","1228":"s","1229":" ","123":" ","1230":"a","1231":"c","1232":"u","1233":"t","1234":"e","1235":" ","1236":"b","1237":"e","1238":"n","1239":"e","124":"t","1240":"f","1241":"i","1242":"c","1243":"i","1244":"a","1245":"l","1246":" ","1247":"e","1248":"f","1249":"f","125":"i","1250":"e","1251":"c","1252":"t","1253":"s","1254":" ","1255":"o","1256":"n","1257":" ","1258":"m","1259":"a","126":"t","1260":"n","1261":"y","1262":" ","1263":"s","1264":"y","1265":"m","1266":"p","1267":"t","1268":"o","1269":"m","127":"l","1270":"s","1271":" ","1272":"o","1273":"f","1274":" ","1275":"A","1276":"D","1277":"H","1278":"D","1279":" ","128":"e","1280":"(","1281":"e","1282":".","1283":"g","1284":".","1285":",","1286":" ","1287":"h","1288":"y","1289":"p","129":"d","1290":"e","1291":"r","1292":"a","1293":"c","1294":"t","1295":"i","1296":"v","1297":"i","1298":"t","1299":"y","13":"l","130":" ","1300":",","1301":" ","1302":"i","1303":"m","1304":"p","1305":"u","1306":"l","1307":"s","1308":"i","1309":"v","131":"\\","1310":"i","1311":"t","1312":"y","1313":")","1314":".","1315":" ","1316":"F","1317":"u","1318":"r","1319":"t","132":"\"","1320":"h","1321":"e","1322":"r","1323":",","1324":" ","1325":"t","1326":"h","1327":"e","1328":"y","1329":" ","133":"S","1330":"p","1331":"e","1332":"r","1333":"c","1334":"e","1335":"i","1336":"v","1337":"e","1338":"d","1339":" ","134":"e","1340":"c","1341":"a","1342":"n","1343":"n","1344":"a","1345":"b","1346":"i","1347":"s","1348":" ","1349":"t","135":"l","1350":"o","1351":" ","1352":"i","1353":"m","1354":"p","1355":"r","1356":"o","1357":"v","1358":"e","1359":" ","136":"f","1360":"m","1361":"o","1362":"s","1363":"t","1364":" ","1365":"o","1366":"f","1367":" ","1368":"t","1369":"h","137":"-","1370":"e","1371":"i","1372":"r","1373":" ","1374":"m","1375":"e","1376":"d","1377":"i","1378":"c","1379":"a","138":"R","1380":"t","1381":"i","1382":"o","1383":"n","1384":" ","1385":"s","1386":"i","1387":"d","1388":"e","1389":" ","139":"e","1390":"e","1391":"f","1392":"f","1393":"e","1394":"c","1395":"t","1396":"s","1397":" ","1398":"(","1399":"e","14":"e","140":"p","1400":".","1401":"g","1402":".","1403":",","1404":" ","1405":"i","1406":"r","1407":"r","1408":"i","1409":"t","141":"o","1410":"a","1411":"b","1412":"i","1413":"l","1414":"i","1415":"t","1416":"y","1417":",","1418":" ","1419":"a","142":"r","1420":"n","1421":"x","1422":"i","1423":"e","1424":"t","1425":"y","1426":")","1427":".","1428":" ","1429":"F","143":"t","1430":"i","1431":"n","1432":"a","1433":"l","1434":"l","1435":"y","1436":",","1437":" ","1438":"c","1439":"a","144":"e","1440":"n","1441":"n","1442":"a","1443":"b","1444":"i","1445":"s","1446":" ","1447":"u","1448":"s","1449":"e","145":"d","1450":" ","1451":"f","1452":"r","1453":"e","1454":"q","1455":"u","1456":"e","1457":"n","1458":"c","1459":"y","146":" ","1460":" ","1461":"w","1462":"a","1463":"s","1464":" ","1465":"a","1466":" ","1467":"s","1468":"i","1469":"g","147":"E","1470":"n","1471":"i","1472":"f","1473":"i","1474":"c","1475":"a","1476":"n","1477":"t","1478":" ","1479":"m","148":"f","1480":"o","1481":"d","1482":"e","1483":"r","1484":"a","1485":"t","1486":"o","1487":"r","1488":" ","1489":"o","149":"f","1490":"f","1491":" ","1492":"t","1493":"h","1494":"e","1495":" ","1496":"a","1497":"s","1498":"s","1499":"o","15":"\"","150":"e","1500":"c","1501":"i","1502":"a","1503":"t","1504":"i","1505":"o","1506":"n","1507":"s","1508":" ","1509":"b","151":"c","1510":"e","1511":"t","1512":"w","1513":"e","1514":"e","1515":"n","1516":" ","1517":"s","1518":"y","1519":"m","152":"t","1520":"p","1521":"t","1522":"o","1523":"m","1524":" ","1525":"s","1526":"e","1527":"v","1528":"e","1529":"r","153":"s","1530":"i","1531":"t","1532":"y","1533":" ","1534":"a","1535":"n","1536":"d","1537":" ","1538":"e","1539":"x","154":" ","1540":"e","1541":"c","1542":"u","1543":"t","1544":"i","1545":"v","1546":"e","1547":" ","1548":"d","1549":"y","155":"o","1550":"s","1551":"f","1552":"u","1553":"n","1554":"c","1555":"t","1556":"i","1557":"o","1558":"n","1559":".","156":"f","1560":" ","1561":"<","1562":"/","1563":"j","1564":"a","1565":"t","1566":"s","1567":":","1568":"p","1569":">","157":" ","1570":"<","1571":"/","1572":"j","1573":"a","1574":"t","1575":"s","1576":":","1577":"s","1578":"e","1579":"c","158":"C","1580":">","1581":"<","1582":"j","1583":"a","1584":"t","1585":"s","1586":":","1587":"s","1588":"e","1589":"c","159":"a","1590":">","1591":"<","1592":"j","1593":"a","1594":"t","1595":"s","1596":":","1597":"t","1598":"i","1599":"t","16":":","160":"n","1600":"l","1601":"e","1602":">","1603":"C","1604":"o","1605":"n","1606":"c","1607":"l","1608":"u","1609":"s","161":"n","1610":"i","1611":"o","1612":"n","1613":":","1614":"<","1615":"/","1616":"j","1617":"a","1618":"t","1619":"s","162":"a","1620":":","1621":"t","1622":"i","1623":"t","1624":"l","1625":"e","1626":">","1627":"<","1628":"j","1629":"a","163":"b","1630":"t","1631":"s","1632":":","1633":"p","1634":">","1635":" ","1636":"R","1637":"e","1638":"s","1639":"u","164":"i","1640":"l","1641":"t","1642":"s","1643":" ","1644":"s","1645":"u","1646":"g","1647":"g","1648":"e","1649":"s","165":"s","1650":"t","1651":" ","1652":"p","1653":"e","1654":"o","1655":"p","1656":"l","1657":"e","1658":" ","1659":"w","166":" ","1660":"i","1661":"t","1662":"h","1663":" ","1664":"A","1665":"D","1666":"H","1667":"D","1668":" ","1669":"m","167":"o","1670":"a","1671":"y","1672":" ","1673":"b","1674":"e","1675":" ","1676":"u","1677":"s","1678":"i","1679":"n","168":"n","1680":"g","1681":" ","1682":"c","1683":"a","1684":"n","1685":"n","1686":"a","1687":"b","1688":"i","1689":"s","169":" ","1690":" ","1691":"t","1692":"o","1693":" ","1694":"s","1695":"e","1696":"l","1697":"f","1698":"-","1699":"m","17":" ","170":"A","1700":"e","1701":"d","1702":"i","1703":"c","1704":"a","1705":"t","1706":"e","1707":" ","1708":"f","1709":"o","171":"D","1710":"r","1711":" ","1712":"m","1713":"a","1714":"n","1715":"y","1716":" ","1717":"o","1718":"f","1719":" ","172":"H","1720":"t","1721":"h","1722":"e","1723":"i","1724":"r","1725":" ","1726":"s","1727":"y","1728":"m","1729":"p","173":"D","1730":"t","1731":"o","1732":"m","1733":"s","1734":" ","1735":"a","1736":"n","1737":"d","1738":" ","1739":"m","174":" ","1740":"e","1741":"d","1742":"i","1743":"c","1744":"a","1745":"t","1746":"i","1747":"o","1748":"n","1749":" ","175":"S","1750":"s","1751":"i","1752":"d","1753":"e","1754":" ","1755":"e","1756":"f","1757":"f","1758":"e","1759":"c","176":"y","1760":"t","1761":"s","1762":" ","1763":"a","1764":"n","1765":"d","1766":" ","1767":"t","1768":"h","1769":"a","177":"m","1770":"t","1771":" ","1772":"m","1773":"o","1774":"r","1775":"e","1776":" ","1777":"f","1778":"r","1779":"e","178":"p","1780":"q","1781":"u","1782":"e","1783":"n","1784":"t","1785":" ","1786":"u","1787":"s","1788":"e","1789":" ","179":"t","1790":"m","1791":"a","1792":"y","1793":" ","1794":"m","1795":"i","1796":"t","1797":"i","1798":"g","1799":"a","18":"\"","180":"o","1800":"t","1801":"e","1802":" ","1803":"A","1804":"D","1805":"H","1806":"D","1807":"-","1808":"r","1809":"e","181":"m","1810":"l","1811":"a","1812":"t","1813":"e","1814":"d","1815":" ","1816":"e","1817":"x","1818":"e","1819":"c","182":"s","1820":"u","1821":"t","1822":"i","1823":"v","1824":"e","1825":" ","1826":"d","1827":"y","1828":"s","1829":"f","183":",","1830":"u","1831":"n","1832":"c","1833":"t","1834":"i","1835":"o","1836":"n","1837":".","1838":" ","1839":"<","184":" ","1840":"/","1841":"j","1842":"a","1843":"t","1844":"s","1845":":","1846":"p","1847":">","1848":"<","1849":"/","185":"A","1850":"j","1851":"a","1852":"t","1853":"s","1854":":","1855":"s","1856":"e","1857":"c","1858":">","1859":".","186":"D","1860":".","1861":".","1862":"\\","1863":"n","1864":"\\","1865":"n","1866":"\"","1867":"\n","1868":" ","1869":" ","187":"H","1870":"}","1871":"\n","1872":"]","188":"D","189":" ","19":"u","190":"M","191":"e","192":"d","193":"i","194":"c","195":"a","196":"t","197":"i","198":"o","199":"n","2":" ","20":"s","200":" ","201":"S","202":"i","203":"d","204":"e","205":" ","206":"E","207":"f","208":"f","209":"e","21":"e","210":"c","211":"t","212":"s","213":",","214":" ","215":"a","216":"n","217":"d","218":" ","219":"A","22":"r","220":"D","221":"H","222":"D","223":"-","224":"R","225":"e","226":"l","227":"a","228":"t","229":"e","23":"\"","230":"d","231":" ","232":"E","233":"x","234":"e","235":"c","236":"u","237":"t","238":"i","239":"v","24":",","240":"e","241":" ","242":"D","243":"y","244":"s","245":"f","246":"u","247":"n","248":"c","249":"t","25":"\n","250":"i","251":"o","252":"n","253":"\\","254":"\"","255":".","256":" ","257":"P","258":"r","259":"o","26":" ","260":"v","261":"i","262":"d","263":"e","264":" ","265":"a","266":" ","267":"c","268":"o","269":"n","27":" ","270":"c","271":"i","272":"s","273":"e","274":" ","275":"s","276":"u","277":"m","278":"m","279":"a","28":" ","280":"r","281":"y","282":" ","283":"s","284":"u","285":"i","286":"t","287":"a","288":"b","289":"l","29":" ","290":"e","291":" ","292":"f","293":"o","294":"r","295":" ","296":"a","297":" ","298":"r","299":"e","3":" ","30":"\"","300":"s","301":"e","302":"a","303":"r","304":"c","305":"h","306":" ","307":"n","308":"o","309":"t","31":"c","310":"e","311":".","312":"\\","313":"n","314":"\\","315":"n","316":"B","317":"a","318":"s","319":"e","32":"o","320":"d","321":" ","322":"o","323":"n","324":" ","325":"t","326":"h","327":"e","328":" ","329":"p","33":"n","330":"r","331":"o","332":"v","333":"i","334":"d","335":"e","336":"d","337":" ","338":"l","339":"i","34":"t","340":"t","341":"e","342":"r","343":"a","344":"t","345":"u","346":"r","347":"e","348":" ","349":"c","35":"e","350":"o","351":"n","352":"t","353":"e","354":"x","355":"t","356":":","357":"\\","358":"n","359":"A","36":"n","360":"n","361":"a","362":"l","363":"y","364":"z","365":"e","366":" ","367":"t","368":"h","369":"e","37":"t","370":" ","371":"f","372":"o","373":"l","374":"l","375":"o","376":"w","377":"i","378":"n","379":"g","38":"\"","380":" ","381":"l","382":"i","383":"t","384":"e","385":"r","386":"a","387":"t","388":"u","389":"r","39":":","390":"e","391":" ","392":"e","393":"x","394":"c","395":"e","396":"r","397":"p","398":"t","399":"s","4":"{","40":" ","400":":","401":"\\","402":"n","403":"\\","404":"n","405":"-","406":"-","407":"-","408":" ","409":"A","41":"\"","410":"r","411":"t","412":"i","413":"c","414":"l","415":"e","416":" ","417":"1","418":" ","419":"-","42":"S","420":"-","421":"-","422":"\\","423":"n","424":"T","425":"i","426":"t","427":"l","428":"e","429":":","43":"u","430":" ","431":"S","432":"e","433":"l","434":"f","435":"-","436":"R","437":"e","438":"p","439":"o","44":"m","440":"r","441":"t","442":"e","443":"d","444":" ","445":"E","446":"f","447":"f","448":"e","449":"c","45":"m","450":"t","451":"s","452":" ","453":"o","454":"f","455":" ","456":"C","457":"a","458":"n","459":"n","46":"a","460":"a","461":"b","462":"i","463":"s","464":" ","465":"o","466":"n","467":" ","468":"A","469":"D","47":"r","470":"H","471":"D","472":" ","473":"S","474":"y","475":"m","476":"p","477":"t","478":"o","479":"m","48":"i","480":"s","481":",","482":" ","483":"A","484":"D","485":"H","486":"D","487":" ","488":"M","489":"e","49":"z","490":"d","491":"i","492":"c","493":"a","494":"t","495":"i","496":"o","497":"n","498":" ","499":"S","5":"\n","50":"e","500":"i","501":"d","502":"e","503":" ","504":"E","505":"f","506":"f","507":"e","508":"c","509":"t","51":" ","510":"s","511":",","512":" ","513":"a","514":"n","515":"d","516":" ","517":"A","518":"D","519":"H","52":"t","520":"D","521":"-","522":"R","523":"e","524":"l","525":"a","526":"t","527":"e","528":"d","529":" ","53":"h","530":"E","531":"x","532":"e","533":"c","534":"u","535":"t","536":"i","537":"v","538":"e","539":" ","54":"e","540":"D","541":"y","542":"s","543":"f","544":"u","545":"n","546":"c","547":"t","548":"i","549":"o","55":" ","550":"n","551":"\\","552":"n","553":"A","554":"b","555":"s","556":"t","557":"r","558":"a","559":"c","56":"k","560":"t","561":":","562":" ","563":"<","564":"j","565":"a","566":"t","567":"s","568":":","569":"s","57":"e","570":"e","571":"c","572":">","573":"<","574":"j","575":"a","576":"t","577":"s","578":":","579":"t","58":"y","580":"i","581":"t","582":"l","583":"e","584":">","585":"O","586":"b","587":"j","588":"e","589":"c","59":" ","590":"t","591":"i","592":"v","593":"e","594":":","595":"<","596":"/","597":"j","598":"a","599":"t","6":" ","60":"f","600":"s","601":":","602":"t","603":"i","604":"t","605":"l","606":"e","607":">","608":"<","609":"j","61":"i","610":"a","611":"t","612":"s","613":":","614":"p","615":">","616":" ","617":"P","618":"e","619":"o","62":"n","620":"p","621":"l","622":"e","623":" ","624":"w","625":"i","626":"t","627":"h","628":" ","629":"A","63":"d","630":"D","631":"H","632":"D","633":" ","634":"a","635":"r","636":"e","637":" ","638":"m","639":"o","64":"i","640":"r","641":"e","642":" ","643":"l","644":"i","645":"k","646":"e","647":"l","648":"y","649":" ","65":"n","650":"t","651":"o","652":" ","653":"u","654":"s","655":"e","656":" ","657":"c","658":"a","659":"n","66":"g","660":"n","661":"a","662":"b","663":"i","664":"s","665":" ","666":"b","667":"u","668":"t","669":" ","67":"s","670":"l","671":"i","672":"t","673":"t","674":"l","675":"e","676":" ","677":"i","678":"s","679":" ","68":" ","680":"k","681":"n","682":"o","683":"w","684":"n","685":" ","686":"a","687":"b","688":"o","689":"u","69":"a","690":"t","691":" ","692":"t","693":"h","694":"e","695":" ","696":"e","697":"f","698":"f","699":"e","7":" ","70":"n","700":"c","701":"t","702":"s","703":" ","704":"o","705":"f","706":" ","707":"c","708":"a","709":"n","71":"d","710":"n","711":"a","712":"b","713":"i","714":"s","715":" ","716":"o","717":"n","718":" ","719":"A","72":" ","720":"D","721":"H","722":"D","723":" ","724":"s","725":"y","726":"m","727":"p","728":"t","729":"o","73":"r","730":"m","731":"s","732":",","733":" ","734":"A","735":"D","736":"H","737":"D","738":" ","739":"m","74":"e","740":"e","741":"d","742":"i","743":"c","744":"a","745":"t","746":"i","747":"o","748":"n","749":" ","75":"l","750":"s","751":"i","752":"d","753":"e","754":" ","755":"e","756":"f","757":"f","758":"e","759":"c","76":"e","760":"t","761":"s","762":",","763":" ","764":"o","765":"r","766":" ","767":"A","768":"D","769":"H","77":"v","770":"D","771":"-","772":"r","773":"e","774":"l","775":"a","776":"t","777":"e","778":"d","779":" ","78":"a","780":"e","781":"x","782":"e","783":"c","784":"u","785":"t","786":"i","787":"v","788":"e","789":" ","79":"n","790":"d","791":"y","792":"s","793":"f","794":"u","795":"n","796":"c","797":"t","798":"i","799":"o","8":" ","80":"c","800":"n","801":".","802":" ","803":"<","804":"/","805":"j","806":"a","807":"t","808":"s","809":":","81":"e","810":"p","811":">","812":"<","813":"/","814":"j","815":"a","816":"t","817":"s","818":":","819":"s","82":" ","820":"e","821":"c","822":">","823":"<","824":"j","825":"a","826":"t","827":"s","828":":","829":"s","83":"t","830":"e","831":"c","832":">","833":"<","834":"j","835":"a","836":"t","837":"s","838":":","839":"t","84":"o","840":"i","841":"t","842":"l","843":"e","844":">","845":"M","846":"e","847":"t","848":"h","849":"o","85":" ","850":"d","851":":","852":"<","853":"/","854":"j","855":"a","856":"t","857":"s","858":":","859":"t","86":"A","860":"i","861":"t","862":"l","863":"e","864":">","865":"<","866":"j","867":"a","868":"t","869":"s","87":"D","870":":","871":"p","872":">","873":" ","874":"S","875":"t","876":"u","877":"d","878":"e","879":"n","88":"H","880":"t","881":"s","882":" ","883":"(","884":" ","885":"n","886":" ","887":"=","888":" ","889":"1","89":"D","890":",","891":"7","892":"3","893":"8","894":")","895":" ","896":"c","897":"o","898":"m","899":"p","9":" ","90":" ","900":"l","901":"e","902":"t","903":"e","904":"d","905":" ","906":"a","907":"n","908":" ","909":"o","91":"d","910":"n","911":"l","912":"i","913":"n","914":"e","915":" ","916":"s","917":"u","918":"r","919":"v","92":"r","920":"e","921":"y","922":" ","923":"c","924":"o","925":"n","926":"t","927":"a","928":"i","929":"n","93":"u","930":"i","931":"n","932":"g","933":" ","934":"m","935":"e","936":"a","937":"s","938":"u","939":"r","94":"g","940":"e","941":"s","942":" ","943":"o","944":"f","945":" ","946":"A","947":"D","948":"H","949":"D","95":" ","950":" ","951":"s","952":"y","953":"m","954":"p","955":"t","956":"o","957":"m","958":"s","959":",","96":"d","960":" ","961":"c","962":"a","963":"n","964":"n","965":"a","966":"b","967":"i","968":"s","969":" ","97":"i","970":"u","971":"s","972":"e","973":",","974":" ","975":"p","976":"e","977":"r","978":"c","979":"e","98":"s","980":"i","981":"v","982":"e","983":"d","984":" ","985":"e","986":"f","987":"f","988":"e","989":"c","99":"c","990":"t","991":"s","992":" ","993":"o","994":"f","995":" ","996":"c","997":"a","998":"n","999":"n","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:30:21"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:30:21"}
{"level":"info","message":"Received response from Anthropic API.","service":"breaking-good-api","timestamp":"2025-04-26 16:30:29"}
{"level":"info","message":"Searching Crossref for: adhd, limit: 10, page: 1","service":"breaking-good-api","timestamp":"2025-04-26 16:31:07"}
{"level":"info","message":"Found 10 articles (total 3652)","service":"breaking-good-api","timestamp":"2025-04-26 16:31:07"}
{"level":"info","message":"Received /chat request. Model: claude-3-7-sonnet-20250219, Temp: 0.7, MaxTokens: 4096","service":"breaking-good-api","timestamp":"2025-04-26 16:31:14"}
{"0":"[","1":"\n","10":"\"","100":"o","1000":"e","1001":"r","1002":"i","1003":"e","1004":"n","1005":"c","1006":"e","1007":"s","1008":" ","1009":"o","101":"v","1010":"f","1011":" ","1012":"i","1013":"n","1014":"t","1015":"e","1016":"n","1017":"s","1018":"i","1019":"t","102":"e","1020":"y","1021":" ","1022":"a","1023":"n","1024":"d","1025":" ","1026":"v","1027":"a","1028":"r","1029":"i","103":"r","1030":"a","1031":"b","1032":"l","1033":"e","1034":" ","1035":"a","1036":"t","1037":"t","1038":"e","1039":"n","104":"y","1040":"t","1041":"i","1042":"o","1043":"n","1044":" ","1045":"o","1046":"r","1047":" ","1048":"i","1049":"n","105":" ","1050":"t","1051":"e","1052":"r","1053":"e","1054":"s","1055":"t","1056":"-","1057":"b","1058":"a","1059":"s","106":"f","1060":"e","1061":"d","1062":" ","1063":"a","1064":"t","1065":"t","1066":"e","1067":"n","1068":"t","1069":"i","107":"r","1070":"o","1071":"n","1072":".","1073":" ","1074":"T","1075":"h","1076":"r","1077":"o","1078":"u","1079":"g","108":"o","1080":"h","1081":" ","1082":"t","1083":"h","1084":"e","1085":" ","1086":"p","1087":"r","1088":"o","1089":"c","109":"m","1090":"e","1091":"s","1092":"s","1093":" ","1094":"o","1095":"f","1096":" ","1097":"c","1098":"o","1099":"l","11":"r","110":" ","1100":"l","1101":"e","1102":"c","1103":"t","1104":"i","1105":"v","1106":"e","1107":" ","1108":"w","1109":"r","111":"t","1110":"i","1111":"t","1112":"i","1113":"n","1114":"g","1115":",","1116":" ","1117":"w","1118":"e","1119":" ","112":"h","1120":"s","1121":"t","1122":"a","1123":"r","1124":"t","1125":"e","1126":"d","1127":" ","1128":"t","1129":"o","113":"i","1130":" ","1131":"r","1132":"e","1133":"n","1134":"a","1135":"m","1136":"e","1137":" ","1138":"a","1139":"n","114":"s","1140":"d","1141":" ","1142":"r","1143":"e","1144":"s","1145":"t","1146":"o","1147":"r","1148":"y","1149":" ","115":" ","1150":"o","1151":"u","1152":"r","1153":" ","1154":"e","1155":"x","1156":"p","1157":"e","1158":"r","1159":"i","116":"a","1160":"e","1161":"n","1162":"c","1163":"e","1164":"s","1165":",","1166":" ","1167":"w","1168":"h","1169":"i","117":"r","1170":"c","1171":"h","1172":" ","1173":"h","1174":"a","1175":"s","1176":" ","1177":"e","1178":"n","1179":"a","118":"t","1180":"b","1181":"l","1182":"e","1183":"d","1184":" ","1185":"u","1186":"s","1187":" ","1188":"t","1189":"o","119":"i","1190":" ","1191":"u","1192":"n","1193":"d","1194":"e","1195":"r","1196":"s","1197":"t","1198":"a","1199":"n","12":"o","120":"c","1200":"d","1201":" ","1202":"i","1203":"n","1204":"t","1205":"e","1206":"n","1207":"s","1208":"i","1209":"t","121":"l","1210":"y","1211":" ","1212":"a","1213":"n","1214":"d","1215":" ","1216":"v","1217":"a","1218":"r","1219":"i","122":"e","1220":"a","1221":"b","1222":"l","1223":"e","1224":" ","1225":"a","1226":"t","1227":"t","1228":"e","1229":"n","123":" ","1230":"t","1231":"i","1232":"o","1233":"n","1234":" ","1235":"a","1236":"s","1237":" ","1238":"a","1239":" ","124":"t","1240":"v","1241":"a","1242":"l","1243":"u","1244":"a","1245":"b","1246":"l","1247":"e","1248":" ","1249":"f","125":"i","1250":"a","1251":"c","1252":"e","1253":"t","1254":" ","1255":"o","1256":"f","1257":" ","1258":"h","1259":"u","126":"t","1260":"m","1261":"a","1262":"n","1263":" ","1264":"d","1265":"i","1266":"v","1267":"e","1268":"r","1269":"s","127":"l","1270":"i","1271":"t","1272":"y","1273":",","1274":" ","1275":"w","1276":"i","1277":"t","1278":"h","1279":" ","128":"e","1280":"b","1281":"o","1282":"t","1283":"h","1284":" ","1285":"s","1286":"t","1287":"r","1288":"e","1289":"n","129":"d","1290":"g","1291":"t","1292":"h","1293":"s","1294":" ","1295":"a","1296":"n","1297":"d","1298":" ","1299":"c","13":"l","130":" ","1300":"h","1301":"a","1302":"l","1303":"l","1304":"e","1305":"n","1306":"g","1307":"e","1308":"s","1309":".","131":"\\","1310":" ","1311":"T","1312":"h","1313":"i","1314":"s","1315":" ","1316":"p","1317":"r","1318":"o","1319":"j","132":"\"","1320":"e","1321":"c","1322":"t","1323":" ","1324":"o","1325":"f","1326":"f","1327":"e","1328":"r","1329":"s","133":"I","1330":" ","1331":"a","1332":"n","1333":" ","1334":"e","1335":"x","1336":"a","1337":"m","1338":"p","1339":"l","134":"n","1340":"e","1341":" ","1342":"o","1343":"f","1344":" ","1345":"h","1346":"o","1347":"w","1348":" ","1349":"c","135":"t","1350":"o","1351":"m","1352":"m","1353":"u","1354":"n","1355":"i","1356":"t","1357":"y","1358":"-","1359":"b","136":"e","1360":"a","1361":"s","1362":"e","1363":"d","1364":" ","1365":"r","1366":"e","1367":"s","1368":"e","1369":"a","137":"n","1370":"r","1371":"c","1372":"h","1373":" ","1374":"c","1375":"a","1376":"n","1377":" ","1378":"e","1379":"l","138":"s","1380":"u","1381":"c","1382":"i","1383":"d","1384":"a","1385":"t","1386":"e","1387":" ","1388":"i","1389":"n","139":"i","1390":"d","1391":"i","1392":"v","1393":"i","1394":"d","1395":"u","1396":"a","1397":"l","1398":" ","1399":"e","14":"e","140":"t","1400":"x","1401":"p","1402":"e","1403":"r","1404":"i","1405":"e","1406":"n","1407":"c","1408":"e","1409":"s","141":"y","1410":" ","1411":"a","1412":"s","1413":" ","1414":"A","1415":"D","1416":"H","1417":"D","1418":"/","1419":"A","142":" ","1420":"u","1421":"D","1422":"H","1423":"D","1424":" ","1425":"r","1426":"e","1427":"s","1428":"e","1429":"a","143":"a","1430":"r","1431":"c","1432":"h","1433":"e","1434":"r","1435":"s","1436":",","1437":" ","1438":"f","1439":"a","144":"n","1440":"c","1441":"i","1442":"l","1443":"i","1444":"t","1445":"a","1446":"t","1447":"e","1448":" ","1449":"e","145":"d","1450":"x","1451":"p","1452":"l","1453":"o","1454":"r","1455":"a","1456":"t","1457":"i","1458":"o","1459":"n","146":" ","1460":" ","1461":"o","1462":"f","1463":" ","1464":"v","1465":"a","1466":"r","1467":"i","1468":"e","1469":"d","147":"V","1470":" ","1471":"e","1472":"x","1473":"p","1474":"e","1475":"r","1476":"i","1477":"e","1478":"n","1479":"c","148":"a","1480":"e","1481":"s","1482":" ","1483":"w","1484":"i","1485":"t","1486":"h","1487":" ","1488":"i","1489":"n","149":"r","1490":"t","1491":"e","1492":"n","1493":"s","1494":"i","1495":"t","1496":"y","1497":" ","1498":"a","1499":"n","15":"\"","150":"i","1500":"d","1501":" ","1502":"a","1503":"t","1504":"t","1505":"e","1506":"n","1507":"t","1508":"i","1509":"o","151":"a","1510":"n","1511":" ","1512":"a","1513":"n","1514":"d","1515":" ","1516":"i","1517":"n","1518":"c","1519":"r","152":"b","1520":"e","1521":"a","1522":"s","1523":"e","1524":" ","1525":"s","1526":"e","1527":"l","1528":"f","1529":"-","153":"l","1530":"a","1531":"w","1532":"a","1533":"r","1534":"e","1535":"n","1536":"e","1537":"s","1538":"s","1539":" ","154":"e","1540":"a","1541":"n","1542":"d","1543":" ","1544":"a","1545":"b","1546":"i","1547":"l","1548":"i","1549":"t","155":" ","1550":"y","1551":" ","1552":"t","1553":"o","1554":" ","1555":"g","1556":"i","1557":"v","1558":"e","1559":" ","156":"A","1560":"a","1561":"n","1562":"d","1563":" ","1564":"r","1565":"e","1566":"c","1567":"e","1568":"i","1569":"v","157":"t","1570":"e","1571":" ","1572":"n","1573":"e","1574":"u","1575":"r","1576":"o","1577":"a","1578":"f","1579":"f","158":"t","1580":"i","1581":"r","1582":"m","1583":"a","1584":"t","1585":"i","1586":"v","1587":"e","1588":" ","1589":"s","159":"e","1590":"u","1591":"p","1592":"p","1593":"o","1594":"r","1595":"t","1596":".","1597":"<","1598":"/","1599":"j","16":":","160":"n","1600":"a","1601":"t","1602":"s","1603":":","1604":"p","1605":">","1606":".","1607":".","1608":".","1609":"\\","161":"t","1610":"n","1611":"\\","1612":"n","1613":"\"","1614":"\n","1615":" ","1616":" ","1617":"}","1618":"\n","1619":"]","162":"i","163":"o","164":"n","165":":","166":" ","167":"C","168":"o","169":"u","17":" ","170":"n","171":"t","172":"e","173":"r","174":" ","175":"N","176":"a","177":"r","178":"r","179":"a","18":"\"","180":"t","181":"i","182":"n","183":"g","184":" ","185":"A","186":"D","187":"H","188":"D","189":",","19":"u","190":" ","191":"f","192":"r","193":"o","194":"m","195":" ","196":"A","197":"D","198":"H","199":"D","2":" ","20":"s","200":" ","201":"D","202":"e","203":"f","204":"i","205":"c","206":"i","207":"t","208":"s","209":" ","21":"e","210":"t","211":"o","212":" ","213":"A","214":"D","215":"H","216":"D","217":" ","218":"D","219":"i","22":"r","220":"f","221":"f","222":"e","223":"r","224":"e","225":"n","226":"c","227":"e","228":"\\","229":"\"","23":"\"","230":".","231":" ","232":"P","233":"r","234":"o","235":"v","236":"i","237":"d","238":"e","239":" ","24":",","240":"a","241":" ","242":"c","243":"o","244":"n","245":"c","246":"i","247":"s","248":"e","249":" ","25":"\n","250":"s","251":"u","252":"m","253":"m","254":"a","255":"r","256":"y","257":" ","258":"s","259":"u","26":" ","260":"i","261":"t","262":"a","263":"b","264":"l","265":"e","266":" ","267":"f","268":"o","269":"r","27":" ","270":" ","271":"a","272":" ","273":"r","274":"e","275":"s","276":"e","277":"a","278":"r","279":"c","28":" ","280":"h","281":" ","282":"n","283":"o","284":"t","285":"e","286":".","287":"\\","288":"n","289":"\\","29":" ","290":"n","291":"B","292":"a","293":"s","294":"e","295":"d","296":" ","297":"o","298":"n","299":" ","3":" ","30":"\"","300":"t","301":"h","302":"e","303":" ","304":"p","305":"r","306":"o","307":"v","308":"i","309":"d","31":"c","310":"e","311":"d","312":" ","313":"l","314":"i","315":"t","316":"e","317":"r","318":"a","319":"t","32":"o","320":"u","321":"r","322":"e","323":" ","324":"c","325":"o","326":"n","327":"t","328":"e","329":"x","33":"n","330":"t","331":":","332":"\\","333":"n","334":"A","335":"n","336":"a","337":"l","338":"y","339":"z","34":"t","340":"e","341":" ","342":"t","343":"h","344":"e","345":" ","346":"f","347":"o","348":"l","349":"l","35":"e","350":"o","351":"w","352":"i","353":"n","354":"g","355":" ","356":"l","357":"i","358":"t","359":"e","36":"n","360":"r","361":"a","362":"t","363":"u","364":"r","365":"e","366":" ","367":"e","368":"x","369":"c","37":"t","370":"e","371":"r","372":"p","373":"t","374":"s","375":":","376":"\\","377":"n","378":"\\","379":"n","38":"\"","380":"-","381":"-","382":"-","383":" ","384":"A","385":"r","386":"t","387":"i","388":"c","389":"l","39":":","390":"e","391":" ","392":"1","393":" ","394":"-","395":"-","396":"-","397":"\\","398":"n","399":"T","4":"{","40":" ","400":"i","401":"t","402":"l","403":"e","404":":","405":" ","406":"I","407":"n","408":"t","409":"e","41":"\"","410":"n","411":"s","412":"i","413":"t","414":"y","415":" ","416":"a","417":"n","418":"d","419":" ","42":"S","420":"V","421":"a","422":"r","423":"i","424":"a","425":"b","426":"l","427":"e","428":" ","429":"A","43":"u","430":"t","431":"t","432":"e","433":"n","434":"t","435":"i","436":"o","437":"n","438":":","439":" ","44":"m","440":"C","441":"o","442":"u","443":"n","444":"t","445":"e","446":"r","447":" ","448":"N","449":"a","45":"m","450":"r","451":"r","452":"a","453":"t","454":"i","455":"n","456":"g","457":" ","458":"A","459":"D","46":"a","460":"H","461":"D","462":",","463":" ","464":"f","465":"r","466":"o","467":"m","468":" ","469":"A","47":"r","470":"D","471":"H","472":"D","473":" ","474":"D","475":"e","476":"f","477":"i","478":"c","479":"i","48":"i","480":"t","481":"s","482":" ","483":"t","484":"o","485":" ","486":"A","487":"D","488":"H","489":"D","49":"z","490":" ","491":"D","492":"i","493":"f","494":"f","495":"e","496":"r","497":"e","498":"n","499":"c","5":"\n","50":"e","500":"e","501":"\\","502":"n","503":"A","504":"b","505":"s","506":"t","507":"r","508":"a","509":"c","51":" ","510":"t","511":":","512":" ","513":"<","514":"j","515":"a","516":"t","517":"s","518":":","519":"t","52":"t","520":"i","521":"t","522":"l","523":"e","524":">","525":"A","526":"b","527":"s","528":"t","529":"r","53":"h","530":"a","531":"c","532":"t","533":"<","534":"/","535":"j","536":"a","537":"t","538":"s","539":":","54":"e","540":"t","541":"i","542":"t","543":"l","544":"e","545":">","546":"\\","547":"n","548":" ","549":" ","55":" ","550":" ","551":" ","552":" ","553":" ","554":" ","555":" ","556":" ","557":" ","558":" ","559":" ","56":"k","560":" ","561":" ","562":" ","563":"<","564":"j","565":"a","566":"t","567":"s","568":":","569":"p","57":"e","570":">","571":"L","572":"i","573":"t","574":"e","575":"r","576":"a","577":"t","578":"u","579":"r","58":"y","580":"e","581":" ","582":"o","583":"n","584":" ","585":"a","586":"t","587":"t","588":"e","589":"n","59":" ","590":"t","591":"i","592":"o","593":"n","594":" ","595":"d","596":"e","597":"f","598":"i","599":"c","6":" ","60":"f","600":"i","601":"t","602":" ","603":"h","604":"y","605":"p","606":"e","607":"r","608":"a","609":"c","61":"i","610":"t","611":"i","612":"v","613":"i","614":"t","615":"y","616":" ","617":"d","618":"i","619":"s","62":"n","620":"o","621":"r","622":"d","623":"e","624":"r","625":" ","626":"(","627":"A","628":"D","629":"H","63":"d","630":"D","631":")","632":" ","633":"h","634":"a","635":"s","636":" ","637":"h","638":"i","639":"s","64":"i","640":"t","641":"o","642":"r","643":"i","644":"c","645":"a","646":"l","647":"l","648":"y","649":" ","65":"n","650":"c","651":"o","652":"m","653":"e","654":" ","655":"f","656":"r","657":"o","658":"m","659":" ","66":"g","660":"a","661":" ","662":"c","663":"o","664":"g","665":"n","666":"i","667":"t","668":"i","669":"v","67":"s","670":"e","671":" ","672":"d","673":"e","674":"f","675":"i","676":"c","677":"i","678":"t","679":" ","68":" ","680":"a","681":"p","682":"p","683":"r","684":"o","685":"a","686":"c","687":"h","688":" ","689":"a","69":"a","690":"n","691":"d","692":" ","693":"l","694":"a","695":"c","696":"k","697":"e","698":"d","699":" ","7":" ","70":"n","700":"c","701":"o","702":"m","703":"m","704":"u","705":"n","706":"i","707":"t","708":"y","709":" ","71":"d","710":"a","711":"u","712":"t","713":"h","714":"o","715":"r","716":"s","717":"h","718":"i","719":"p","72":" ","720":".","721":" ","722":"I","723":"n","724":" ","725":"c","726":"o","727":"n","728":"t","729":"r","73":"r","730":"a","731":"s","732":"t","733":",","734":" ","735":"t","736":"h","737":"i","738":"s","739":" ","74":"e","740":"a","741":"r","742":"t","743":"i","744":"c","745":"l","746":"e","747":" ","748":"u","749":"t","75":"l","750":"i","751":"l","752":"i","753":"s","754":"e","755":"s","756":" ","757":"a","758":" ","759":"n","76":"e","760":"e","761":"u","762":"r","763":"o","764":"d","765":"i","766":"v","767":"e","768":"r","769":"s","77":"v","770":"i","771":"t","772":"y","773":" ","774":"f","775":"r","776":"a","777":"m","778":"e","779":"w","78":"a","780":"o","781":"r","782":"k","783":" ","784":"t","785":"o","786":" ","787":"e","788":"x","789":"p","79":"n","790":"l","791":"o","792":"r","793":"e","794":" ","795":"A","796":"D","797":"H","798":"D","799":" ","8":" ","80":"c","800":"a","801":"s","802":" ","803":"a","804":" ","805":"c","806":"o","807":"g","808":"n","809":"i","81":"e","810":"t","811":"i","812":"v","813":"e","814":" ","815":"d","816":"i","817":"f","818":"f","819":"e","82":" ","820":"r","821":"e","822":"n","823":"c","824":"e","825":" ","826":"t","827":"h","828":"r","829":"o","83":"t","830":"u","831":"g","832":"h","833":" ","834":"A","835":"D","836":"H","837":"D","838":"e","839":"r","84":"o","840":"s","841":"’","842":" ","843":"e","844":"x","845":"p","846":"e","847":"r","848":"i","849":"e","85":" ","850":"n","851":"c","852":"e","853":"s","854":".","855":" ","856":"S","857":"p","858":"e","859":"c","86":"A","860":"i","861":"f","862":"i","863":"c","864":"a","865":"l","866":"l","867":"y","868":",","869":" ","87":"D","870":"h","871":"e","872":"r","873":"e","874":" ","875":"w","876":"e","877":" ","878":"a","879":"n","88":"H","880":"a","881":"l","882":"y","883":"s","884":"e","885":" ","886":"c","887":"o","888":"l","889":"l","89":"D","890":"e","891":"c","892":"t","893":"i","894":"v","895":"e","896":" ","897":"a","898":"u","899":"t","9":" ","90":" ","900":"o","901":"e","902":"t","903":"h","904":"n","905":"o","906":"g","907":"r","908":"a","909":"p","91":"d","910":"h","911":"i","912":"c","913":" ","914":"w","915":"r","916":"i","917":"t","918":"i","919":"n","92":"r","920":"g","921":"s","922":" ","923":"f","924":"r","925":"o","926":"m","927":" ","928":"n","929":"e","93":"u","930":"u","931":"r","932":"o","933":"d","934":"i","935":"v","936":"e","937":"r","938":"g","939":"e","94":"g","940":"n","941":"t","942":" ","943":"a","944":"c","945":"a","946":"d","947":"e","948":"m","949":"i","95":" ","950":"c","951":" ","952":"r","953":"e","954":"s","955":"e","956":"a","957":"r","958":"c","959":"h","96":"d","960":"e","961":"r","962":"s","963":" ","964":"w","965":"r","966":"i","967":"t","968":"i","969":"n","97":"i","970":"g","971":" ","972":"t","973":"o","974":" ","975":"o","976":"n","977":"e","978":" ","979":"o","98":"s","980":"t","981":"h","982":"e","983":"r","984":" ","985":"a","986":"b","987":"o","988":"u","989":"t","99":"c","990":" ","991":"t","992":"h","993":"e","994":"i","995":"r","996":" ","997":"e","998":"x","999":"p","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:31:14"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:31:14"}
{"level":"info","message":"Received response from Anthropic API.","service":"breaking-good-api","timestamp":"2025-04-26 16:31:23"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:40:57"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:41:23"}
{"level":"info","message":"Received molecule generation request with requirements: ggg","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"Created request ID: 94d8eb7a-ff8e-45d4-ab1e-d98ec3db7d73","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"API Key Status: Key is set","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"API endpoint URL: https://api.anthropic.com/v1/messages","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"Sending request to Claude API","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"Sending request to Claude API with model: claude-3-7-sonnet-20250219","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"System prompt length: 1130 characters","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"User prompt length: 628 characters","service":"breaking-good-api","timestamp":"2025-04-26 16:41:43"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:50:39"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:50:54"}
{"level":"info","message":"Received /chat request. Model: claude-3-sonnet-20240229, Temp: 0.7, MaxTokens: 4000","service":"breaking-good-api","timestamp":"2025-04-26 16:50:54"}
{"0":"[","1":"\n","10":"\"","100":" ","1000":"u","1001":"s","1002":"i","1003":"v","1004":"i","1005":"t","1006":"y","1007":" ","1008":"p","1009":"e","101":"a","1010":"r","1011":"i","1012":"o","1013":"d","1014":"s","1015":" ","1016":"(","1017":"N","1018":"C","1019":"E","102":" ","1020":",","1021":" ","1022":"o","1023":"r","1024":"p","1025":"h","1026":"a","1027":"n","1028":" ","1029":"d","103":"c","1030":"r","1031":"u","1032":"g","1033":",","1034":" ","1035":"p","1036":"e","1037":"d","1038":"i","1039":"a","104":"o","1040":"t","1041":"r","1042":"i","1043":"c","1044":",","1045":" ","1046":"e","1047":"t","1048":"c","1049":".","105":"m","1050":")","1051":" ","1052":"a","1053":"n","1054":"d","1055":" ","1056":"s","1057":"t","1058":"r","1059":"a","106":"p","1060":"t","1061":"e","1062":"g","1063":"i","1064":"e","1065":"s","1066":" ","1067":"t","1068":"o","1069":" ","107":"r","1070":"m","1071":"a","1072":"x","1073":"i","1074":"m","1075":"i","1076":"z","1077":"e","1078":" ","1079":"e","108":"e","1080":"x","1081":"c","1082":"l","1083":"u","1084":"s","1085":"i","1086":"v","1087":"i","1088":"t","1089":"y","109":"h","1090":".","1091":"\\","1092":"n","1093":"5","1094":".","1095":" ","1096":"S","1097":"p","1098":"e","1099":"c","11":"r","110":"e","1100":"i","1101":"a","1102":"l","1103":" ","1104":"C","1105":"o","1106":"n","1107":"s","1108":"i","1109":"d","111":"n","1110":"e","1111":"r","1112":"a","1113":"t","1114":"i","1115":"o","1116":"n","1117":"s","1118":":","1119":" ","112":"s","1120":"A","1121":"n","1122":"y","1123":" ","1124":"s","1125":"p","1126":"e","1127":"c","1128":"i","1129":"a","113":"i","1130":"l","1131":" ","1132":"r","1133":"e","1134":"g","1135":"u","1136":"l","1137":"a","1138":"t","1139":"o","114":"v","1140":"r","1141":"y","1142":" ","1143":"c","1144":"o","1145":"n","1146":"s","1147":"i","1148":"d","1149":"e","115":"e","1150":"r","1151":"a","1152":"t","1153":"i","1154":"o","1155":"n","1156":"s","1157":" ","1158":"b","1159":"a","116":" ","1160":"s","1161":"e","1162":"d","1163":" ","1164":"o","1165":"n","1166":" ","1167":"t","1168":"h","1169":"e","117":"r","1170":" ","1171":"d","1172":"r","1173":"u","1174":"g","1175":" ","1176":"c","1177":"l","1178":"a","1179":"s","118":"e","1180":"s","1181":",","1182":" ","1183":"i","1184":"n","1185":"d","1186":"i","1187":"c","1188":"a","1189":"t","119":"g","1190":"i","1191":"o","1192":"n","1193":",","1194":" ","1195":"o","1196":"r","1197":" ","1198":"m","1199":"e","12":"o","120":"u","1200":"c","1201":"h","1202":"a","1203":"n","1204":"i","1205":"s","1206":"m","1207":".","1208":"\\","1209":"n","121":"l","1210":"\\","1211":"n","1212":"P","1213":"l","1214":"e","1215":"a","1216":"s","1217":"e","1218":" ","1219":"u","122":"a","1220":"s","1221":"e","1222":" ","1223":"y","1224":"o","1225":"u","1226":"r","1227":" ","1228":"k","1229":"n","123":"t","1230":"o","1231":"w","1232":"l","1233":"e","1234":"d","1235":"g","1236":"e","1237":" ","1238":"o","1239":"f","124":"o","1240":" ","1241":"F","1242":"D","1243":"A","1244":",","1245":" ","1246":"E","1247":"M","1248":"A","1249":",","125":"r","1250":" ","1251":"a","1252":"n","1253":"d","1254":" ","1255":"o","1256":"t","1257":"h","1258":"e","1259":"r","126":"y","1260":" ","1261":"g","1262":"l","1263":"o","1264":"b","1265":"a","1266":"l","1267":" ","1268":"r","1269":"e","127":" ","1270":"g","1271":"u","1272":"l","1273":"a","1274":"t","1275":"o","1276":"r","1277":"y","1278":" ","1279":"f","128":"a","1280":"r","1281":"a","1282":"m","1283":"e","1284":"w","1285":"o","1286":"r","1287":"k","1288":"s","1289":" ","129":"n","1290":"t","1291":"o","1292":" ","1293":"p","1294":"r","1295":"o","1296":"v","1297":"i","1298":"d","1299":"e","13":"l","130":"a","1300":" ","1301":"t","1302":"h","1303":"i","1304":"s","1305":" ","1306":"a","1307":"n","1308":"a","1309":"l","131":"l","1310":"y","1311":"s","1312":"i","1313":"s","1314":".","1315":" ","1316":"I","1317":"n","1318":"c","1319":"l","132":"y","1320":"u","1321":"d","1322":"e","1323":" ","1324":"s","1325":"p","1326":"e","1327":"c","1328":"i","1329":"f","133":"s","1330":"i","1331":"c","1332":" ","1333":"r","1334":"e","1335":"f","1336":"e","1337":"r","1338":"e","1339":"n","134":"i","1340":"c","1341":"e","1342":"s","1343":" ","1344":"t","1345":"o","1346":" ","1347":"r","1348":"e","1349":"l","135":"s","1350":"e","1351":"v","1352":"a","1353":"n","1354":"t","1355":" ","1356":"r","1357":"e","1358":"g","1359":"u","136":" ","1360":"l","1361":"a","1362":"t","1363":"i","1364":"o","1365":"n","1366":"s","1367":" ","1368":"w","1369":"h","137":"r","1370":"e","1371":"r","1372":"e","1373":" ","1374":"a","1375":"p","1376":"p","1377":"r","1378":"o","1379":"p","138":"e","1380":"r","1381":"i","1382":"a","1383":"t","1384":"e","1385":".","1386":"\"","1387":"\n","1388":" ","1389":" ","139":"p","1390":"}","1391":"\n","1392":"]","14":"e","140":"o","141":"r","142":"t","143":" ","144":"f","145":"o","146":"r","147":" ","148":"a","149":" ","15":"\"","150":"n","151":"e","152":"w","153":" ","154":"d","155":"r","156":"u","157":"g","158":" ","159":"c","16":":","160":"a","161":"n","162":"d","163":"i","164":"d","165":"a","166":"t","167":"e","168":" ","169":"w","17":" ","170":"i","171":"t","172":"h","173":" ","174":"t","175":"h","176":"e","177":" ","178":"f","179":"o","18":"\"","180":"l","181":"l","182":"o","183":"w","184":"i","185":"n","186":"g","187":" ","188":"c","189":"h","19":"u","190":"a","191":"r","192":"a","193":"c","194":"t","195":"e","196":"r","197":"i","198":"s","199":"t","2":" ","20":"s","200":"i","201":"c","202":"s","203":":","204":"\\","205":"n","206":"\\","207":"n","208":"S","209":"M","21":"e","210":"I","211":"L","212":"E","213":"S","214":":","215":" ","216":"C","217":"N","218":"1","219":"C","22":"r","220":"2","221":"C","222":"C","223":"C","224":"1","225":"C","226":"C","227":"(","228":"C","229":"2","23":"\"","230":")","231":"O","232":"C","233":"(","234":"=","235":"O","236":")","237":"C","238":"(","239":"C","24":",","240":")","241":"C","242":"\\","243":"n","244":"D","245":"r","246":"u","247":"g","248":" ","249":"C","25":"\n","250":"l","251":"a","252":"s","253":"s","254":":","255":" ","256":"C","257":"N","258":"S","259":" ","26":" ","260":"s","261":"t","262":"i","263":"m","264":"u","265":"l","266":"a","267":"n","268":"t","269":"\\","27":" ","270":"n","271":"T","272":"a","273":"r","274":"g","275":"e","276":"t","277":" ","278":"I","279":"n","28":" ","280":"d","281":"i","282":"c","283":"a","284":"t","285":"i","286":"o","287":"n","288":":","289":" ","29":" ","290":"A","291":"D","292":"H","293":"D","294":"\\","295":"n","296":"P","297":"r","298":"i","299":"m","3":" ","30":"\"","300":"a","301":"r","302":"y","303":" ","304":"M","305":"e","306":"c","307":"h","308":"a","309":"n","31":"c","310":"i","311":"s","312":"m","313":" ","314":"o","315":"f","316":" ","317":"A","318":"c","319":"t","32":"o","320":"i","321":"o","322":"n","323":":","324":" ","325":"d","326":"o","327":"p","328":"a","329":"m","33":"n","330":"i","331":"n","332":"e","333":"/","334":"n","335":"o","336":"r","337":"e","338":"p","339":"i","34":"t","340":"n","341":"e","342":"p","343":"h","344":"r","345":"i","346":"n","347":"e","348":" ","349":"r","35":"e","350":"e","351":"u","352":"p","353":"t","354":"a","355":"k","356":"e","357":" ","358":"i","359":"n","36":"n","360":"h","361":"i","362":"b","363":"i","364":"t","365":"i","366":"o","367":"n","368":"\\","369":"n","37":"t","370":"N","371":"o","372":"v","373":"e","374":"l","375":" ","376":"M","377":"e","378":"c","379":"h","38":"\"","380":"a","381":"n","382":"i","383":"s","384":"m","385":":","386":" ","387":"N","388":"o","389":"\\","39":":","390":"n","391":"O","392":"r","393":"p","394":"h","395":"a","396":"n","397":" ","398":"D","399":"r","4":"{","40":" ","400":"u","401":"g","402":" ","403":"D","404":"e","405":"s","406":"i","407":"g","408":"n","409":"a","41":"\"","410":"t","411":"i","412":"o","413":"n","414":":","415":" ","416":"N","417":"o","418":"\\","419":"n","42":"Y","420":"F","421":"a","422":"s","423":"t","424":" ","425":"T","426":"r","427":"a","428":"c","429":"k","43":"o","430":" ","431":"E","432":"l","433":"i","434":"g","435":"i","436":"b","437":"i","438":"l","439":"i","44":"u","440":"t","441":"y","442":":","443":" ","444":"N","445":"o","446":"\\","447":"n","448":"\\","449":"n","45":" ","450":"P","451":"l","452":"e","453":"a","454":"s","455":"e","456":" ","457":"p","458":"r","459":"o","46":"a","460":"v","461":"i","462":"d","463":"e","464":" ","465":"a","466":" ","467":"d","468":"e","469":"t","47":"r","470":"a","471":"i","472":"l","473":"e","474":"d","475":" ","476":"r","477":"e","478":"g","479":"u","48":"e","480":"l","481":"a","482":"t","483":"o","484":"r","485":"y","486":" ","487":"a","488":"n","489":"a","49":" ","490":"l","491":"y","492":"s","493":"i","494":"s","495":" ","496":"t","497":"h","498":"a","499":"t","5":"\n","50":"a","500":" ","501":"i","502":"n","503":"c","504":"l","505":"u","506":"d","507":"e","508":"s","509":":","51":" ","510":"\\","511":"n","512":"\\","513":"n","514":"1","515":".","516":" ","517":"E","518":"x","519":"e","52":"p","520":"c","521":"u","522":"t","523":"i","524":"v","525":"e","526":" ","527":"S","528":"u","529":"m","53":"h","530":"m","531":"a","532":"r","533":"y","534":":","535":" ","536":"B","537":"r","538":"i","539":"e","54":"a","540":"f","541":" ","542":"o","543":"v","544":"e","545":"r","546":"v","547":"i","548":"e","549":"w","55":"r","550":" ","551":"o","552":"f","553":" ","554":"t","555":"h","556":"e","557":" ","558":"r","559":"e","56":"m","560":"g","561":"u","562":"l","563":"a","564":"t","565":"o","566":"r","567":"y","568":" ","569":"l","57":"a","570":"a","571":"n","572":"d","573":"s","574":"c","575":"a","576":"p","577":"e","578":" ","579":"f","58":"c","580":"o","581":"r","582":" ","583":"t","584":"h","585":"i","586":"s","587":" ","588":"d","589":"r","59":"e","590":"u","591":"g","592":" ","593":"c","594":"a","595":"n","596":"d","597":"i","598":"d","599":"a","6":" ","60":"u","600":"t","601":"e","602":".","603":"\\","604":"n","605":"2","606":".","607":" ","608":"P","609":"a","61":"t","610":"t","611":"e","612":"n","613":"t","614":" ","615":"L","616":"a","617":"n","618":"d","619":"s","62":"i","620":"c","621":"a","622":"p","623":"e","624":":","625":" ","626":"A","627":"n","628":"a","629":"l","63":"c","630":"y","631":"s","632":"i","633":"s","634":" ","635":"o","636":"f","637":" ","638":"e","639":"x","64":"a","640":"i","641":"s","642":"t","643":"i","644":"n","645":"g","646":" ","647":"p","648":"a","649":"t","65":"l","650":"e","651":"n","652":"t","653":"s","654":" ","655":"t","656":"h","657":"a","658":"t","659":" ","66":" ","660":"m","661":"i","662":"g","663":"h","664":"t","665":" ","666":"b","667":"e","668":" ","669":"r","67":"r","670":"e","671":"l","672":"e","673":"v","674":"a","675":"n","676":"t","677":" ","678":"t","679":"o","68":"e","680":" ","681":"t","682":"h","683":"i","684":"s","685":" ","686":"m","687":"o","688":"l","689":"e","69":"g","690":"c","691":"u","692":"l","693":"e","694":" ","695":"o","696":"r","697":" ","698":"m","699":"e","7":" ","70":"u","700":"c","701":"h","702":"a","703":"n","704":"i","705":"s","706":"m","707":" ","708":"o","709":"f","71":"l","710":" ","711":"a","712":"c","713":"t","714":"i","715":"o","716":"n","717":".","718":" ","719":"I","72":"a","720":"n","721":"c","722":"l","723":"u","724":"d","725":"e","726":" ","727":"i","728":"n","729":"f","73":"t","730":"o","731":"r","732":"m","733":"a","734":"t","735":"i","736":"o","737":"n","738":" ","739":"a","74":"o","740":"b","741":"o","742":"u","743":"t","744":" ","745":"p","746":"a","747":"t","748":"e","749":"n","75":"r","750":"t","751":" ","752":"e","753":"x","754":"p","755":"i","756":"r","757":"a","758":"t","759":"i","76":"y","760":"o","761":"n","762":" ","763":"d","764":"a","765":"t","766":"e","767":"s","768":" ","769":"a","77":" ","770":"n","771":"d","772":" ","773":"p","774":"o","775":"t","776":"e","777":"n","778":"t","779":"i","78":"a","780":"a","781":"l","782":" ","783":"f","784":"o","785":"r","786":" ","787":"p","788":"a","789":"t","79":"f","790":"e","791":"n","792":"t","793":" ","794":"c","795":"h","796":"a","797":"l","798":"l","799":"e","8":" ","80":"f","800":"n","801":"g","802":"e","803":"s","804":".","805":"\\","806":"n","807":"3","808":".","809":" ","81":"a","810":"R","811":"e","812":"g","813":"u","814":"l","815":"a","816":"t","817":"o","818":"r","819":"y","82":"i","820":" ","821":"P","822":"a","823":"t","824":"h","825":"w","826":"a","827":"y","828":":","829":" ","83":"r","830":"R","831":"e","832":"c","833":"o","834":"m","835":"m","836":"e","837":"n","838":"d","839":"e","84":"s","840":"d","841":" ","842":"r","843":"e","844":"g","845":"u","846":"l","847":"a","848":"t","849":"o","85":" ","850":"r","851":"y","852":" ","853":"s","854":"u","855":"b","856":"m","857":"i","858":"s","859":"s","86":"e","860":"i","861":"o","862":"n","863":" ","864":"p","865":"a","866":"t","867":"h","868":"w","869":"a","87":"x","870":"y","871":" ","872":"(","873":"N","874":"D","875":"A","876":",","877":" ","878":"5","879":"0","88":"p","880":"5","881":"(","882":"b","883":")","884":"(","885":"2","886":")","887":",","888":" ","889":"e","89":"e","890":"t","891":"c","892":".","893":")","894":",","895":" ","896":"r","897":"e","898":"q","899":"u","9":" ","90":"r","900":"i","901":"r","902":"e","903":"d","904":" ","905":"s","906":"t","907":"u","908":"d","909":"i","91":"t","910":"e","911":"s","912":",","913":" ","914":"a","915":"n","916":"d","917":" ","918":"e","919":"s","92":".","920":"t","921":"i","922":"m","923":"a","924":"t","925":"e","926":"d","927":" ","928":"t","929":"i","93":" ","930":"m","931":"e","932":"l","933":"i","934":"n","935":"e","936":" ","937":"t","938":"o","939":" ","94":"I","940":"a","941":"p","942":"p","943":"r","944":"o","945":"v","946":"a","947":"l","948":".","949":"\\","95":" ","950":"n","951":"4","952":".","953":" ","954":"M","955":"a","956":"r","957":"k","958":"e","959":"t","96":"n","960":" ","961":"E","962":"x","963":"c","964":"l","965":"u","966":"s","967":"i","968":"v","969":"i","97":"e","970":"t","971":"y","972":":","973":" ","974":"A","975":"n","976":"a","977":"l","978":"y","979":"s","98":"e","980":"i","981":"s","982":" ","983":"o","984":"f","985":" ","986":"p","987":"o","988":"t","989":"e","99":"d","990":"n","991":"t","992":"i","993":"a","994":"l","995":" ","996":"e","997":"x","998":"c","999":"l","level":"debug","message":"Chat Messages Payload:","service":"breaking-good-api","timestamp":"2025-04-26 16:50:54"}
{"level":"info","message":"Sending messages to Anthropic API via claudeClient...","service":"breaking-good-api","timestamp":"2025-04-26 16:50:54"}
{"config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"baseURL":"https://api.anthropic.com/v1/messages","data":"{\"model\":\"claude-3-sonnet-20240229\",\"messages\":[{\"role\":\"user\",\"content\":\"You are a pharmaceutical regulatory affairs expert. I need a comprehensive regulatory analysis report for a new drug candidate with the following characteristics:\\n\\nSMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C\\nDrug Class: CNS stimulant\\nTarget Indication: ADHD\\nPrimary Mechanism of Action: dopamine/norepinephrine reuptake inhibition\\nNovel Mechanism: No\\nOrphan Drug Designation: No\\nFast Track Eligibility: No\\n\\nPlease provide a detailed regulatory analysis that includes:\\n\\n1. Executive Summary: Brief overview of the regulatory landscape for this drug candidate.\\n2. Patent Landscape: Analysis of existing patents that might be relevant to this molecule or mechanism of action. Include information about patent expiration dates and potential for patent challenges.\\n3. Regulatory Pathway: Recommended regulatory submission pathway (NDA, 505(b)(2), etc.), required studies, and estimated timeline to approval.\\n4. Market Exclusivity: Analysis of potential exclusivity periods (NCE, orphan drug, pediatric, etc.) and strategies to maximize exclusivity.\\n5. Special Considerations: Any special regulatory considerations based on the drug class, indication, or mechanism.\\n\\nPlease use your knowledge of FDA, EMA, and other global regulatory frameworks to provide this analysis. Include specific references to relevant regulations where appropriate.\"}],\"temperature\":0.7,\"max_tokens\":4000}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Content-Length":"1458","Content-Type":"application/json","User-Agent":"axios/1.8.4","anthropic-version":"2023-06-01","x-api-key":"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"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":120000,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errorData":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"level":"error","message":"Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/ai.js:864:22","status":404,"timestamp":"2025-04-26 16:50:54"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:50:54"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:51:43"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:51:52"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:51:55"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:07"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:07"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:08"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:08"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:19"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:19"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:19"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:19"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:20"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:20"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:52:20"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:59:28","timestamp":"2025-04-26 16:52:20"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:53:18"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:53:20"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:53:36"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","response":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:63:28","timestamp":"2025-04-26 16:53:36"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:53:46"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","response":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:63:28","timestamp":"2025-04-26 16:53:46"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:53:47"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","response":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:63:28","timestamp":"2025-04-26 16:53:47"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:54:43"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:54:53"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:57:23"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:57:25"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:57:31"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","response":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:90:28","timestamp":"2025-04-26 16:57:32"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:58:43"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:58:49"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CC(N)CC1=CC=CC=C1","service":"breaking-good-api","timestamp":"2025-04-26 16:58:55"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 400","response":{"error":{"message":"messages: Unexpected role \"system\". The Messages API accepts a top-level `system` parameter, not \"system\" as an input message role.","type":"invalid_request_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at IncomingMessage.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:90:28","timestamp":"2025-04-26 16:58:55"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:59:29"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 16:59:36"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 16:59:43"}
{"level":"error","message":"Error generating regulatory report: Request failed with status code 404","response":{"error":{"message":"model: claude-3-sonnet-20240229","type":"not_found_error"},"type":"error"},"service":"breaking-good-api","stack":"AxiosError: Request failed with status code 404\n    at settle (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:2031:12)\n    at Unzip.handleStreamEnd (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:3148:11)\n    at Unzip.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/arinkadakia/Desktop/bga/backend/node_modules/axios/dist/node/axios.cjs:4258:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/arinkadakia/Desktop/bga/backend/api/regulatory.js:90:28","timestamp":"2025-04-26 16:59:43"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 17:00:28"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 17:00:33"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 17:00:35"}
{"level":"info","message":"Anthropic API Key status: Loaded","service":"breaking-good-api","timestamp":"2025-04-26 17:00:37"}
{"level":"info","message":"Generating regulatory report for molecule with SMILES: CN1C2CCC1CC(C2)OC(=O)C(C)C","service":"breaking-good-api","timestamp":"2025-04-26 17:00:46"}
{"level":"info","message":"Trying Claude API with model: claude-3-sonnet-20240229","service":"breaking-good-api","timestamp":"2025-04-26 17:00:46"}
{"level":"warn","message":"Failed to call Claude API with model claude-3-sonnet-20240229: Request failed with status code 404","service":"breaking-good-api","timestamp":"2025-04-26 17:00:47"}
{"level":"info","message":"Trying Claude API with model: claude-3-sonnet","service":"breaking-good-api","timestamp":"2025-04-26 17:00:47"}
{"level":"warn","message":"Failed to call Claude API with model claude-3-sonnet: Request failed with status code 404","service":"breaking-good-api","timestamp":"2025-04-26 17:00:47"}
{"level":"info","message":"Trying Claude API with model: claude-3-opus-20240229","service":"breaking-good-api","timestamp":"2025-04-26 17:00:47"}
{"level":"info","message":"Successfully called Claude API with model: claude-3-opus-20240229","service":"breaking-good-api","timestamp":"2025-04-26 17:01:26"}
