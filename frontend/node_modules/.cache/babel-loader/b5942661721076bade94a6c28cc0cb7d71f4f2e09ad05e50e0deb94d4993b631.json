{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicks\\\\Downloads\\\\breakinggood\\\\frontend\\\\src\\\\components\\\\ThinkingProcessImproved.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Paper, Typography, CircularProgress, Divider, Accordion, AccordionSummary, AccordionDetails, Card, CardContent, Box, Chip, Button, TextField, IconButton, Grid, Avatar, Container, makeStyles, Collapse } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BuildIcon from '@material-ui/icons/Build';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SendIcon from '@material-ui/icons/Send';\nimport ScienceIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects instead of Science\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\nimport ReactMarkdown from 'react-markdown';\nimport { claudeAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2)\n  },\n  headerTitle: {\n    fontWeight: 500\n  },\n  messageContainer: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: theme.spacing(2, 0),\n    marginBottom: theme.spacing(2)\n  },\n  messageRow: {\n    display: 'flex',\n    marginBottom: theme.spacing(3),\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    marginRight: theme.spacing(2),\n    width: 40,\n    height: 40\n  },\n  userAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  messageContent: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    boxShadow: theme.shadows[1]\n  },\n  userMessageContent: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    borderTop: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginTop: 'auto'\n  },\n  input: {\n    flexGrow: 1,\n    borderRadius: theme.shape.borderRadius\n  },\n  sendButton: {\n    marginLeft: theme.spacing(1)\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(4)\n  },\n  sectionTitle: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n    fontWeight: 500\n  },\n  accordionRoot: {\n    marginBottom: theme.spacing(1),\n    border: `1px solid ${theme.palette.divider}`,\n    boxShadow: 'none',\n    '&:before': {\n      display: 'none'\n    },\n    '&.Mui-expanded': {\n      margin: theme.spacing(1, 0)\n    }\n  },\n  accordionSummary: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&.Mui-expanded': {\n      minHeight: 56\n    }\n  },\n  accordionDetails: {\n    flexDirection: 'column',\n    padding: theme.spacing(2)\n  },\n  statusChip: {\n    marginLeft: theme.spacing(1)\n  },\n  codeBlock: {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: theme.palette.text.primary\n  },\n  moleculesGrid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  moleculeCard: {\n    width: 280,\n    margin: theme.spacing(1),\n    overflow: 'hidden'\n  },\n  viewerContainer: {\n    height: 200,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`\n  },\n  cardContent: {\n    padding: theme.spacing(2)\n  },\n  moleculeName: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    marginBottom: theme.spacing(1)\n  },\n  smilesCode: {\n    fontSize: '0.75rem',\n    wordBreak: 'break-all',\n    marginBottom: theme.spacing(1),\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius\n  },\n  cardActions: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  markdownContent: {\n    '& h1, & h2, & h3, & h4, & h5, & h6': {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1)\n    },\n    '& a': {\n      color: theme.palette.primary.main\n    },\n    '& ul, & ol': {\n      paddingLeft: theme.spacing(3)\n    },\n    '& pre': {\n      backgroundColor: theme.palette.grey[200],\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius,\n      overflowX: 'auto',\n      fontFamily: 'monospace',\n      fontSize: '0.875rem'\n    },\n    '& code': {\n      fontFamily: 'monospace',\n      backgroundColor: theme.palette.grey[100],\n      padding: theme.spacing(0.2, 0.5),\n      borderRadius: 3\n    },\n    '& table': {\n      borderCollapse: 'collapse',\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    '& th, & td': {\n      border: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1)\n    },\n    '& th': {\n      backgroundColor: theme.palette.grey[100]\n    }\n  },\n  toggleButton: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\n// This function parses the molecule data from the thinking process\nconst extractMoleculesFromThinking = thinking => {\n  if (!thinking) return [];\n  const molecules = [];\n\n  // Find SMILES strings in the thinking process\n  const smilesRegex = /SMILES:\\s*([^\\s\\n]+)/g;\n  let match;\n  while ((match = smilesRegex.exec(thinking)) !== null) {\n    const smiles = match[1].replace(/[`'\"]/g, '');\n\n    // Try to find a name for this molecule near the SMILES string\n    const nameRegex = /\\*\\*Chemical Name:\\*\\*\\s*([^\\n]+)/;\n    const nameMatch = thinking.substring(Math.max(0, match.index - 200), match.index + 300).match(nameRegex);\n    molecules.push({\n      smiles,\n      name: nameMatch ? nameMatch[1].trim() : `Molecule ${molecules.length + 1}`\n    });\n  }\n  return molecules;\n};\n\n// Extract sections from the thinking process for structured display\nconst extractSections = thinking => {\n  if (!thinking) return [];\n  const sections = [];\n  const lines = thinking.split('\\n');\n  let currentSection = null;\n  let currentContent = [];\n  lines.forEach(line => {\n    const trimmedLine = line.trim();\n    // Check if this line is a header (using # markdown syntax)\n    const isHeader = /^#{1,3}\\s+(.+)$/.test(trimmedLine);\n    if (isHeader) {\n      // Save previous section if it exists\n      if (currentSection) {\n        sections.push({\n          title: currentSection,\n          content: currentContent.join('\\n')\n        });\n      }\n\n      // Start new section\n      currentSection = trimmedLine;\n      currentContent = [];\n    } else if (currentSection) {\n      currentContent.push(line);\n    } else {\n      // First lines before any clear section header\n      if (!currentSection) {\n        currentSection = \"Introduction\";\n      }\n      currentContent.push(line);\n    }\n  });\n\n  // Add the final section\n  if (currentSection) {\n    sections.push({\n      title: currentSection,\n      content: currentContent.join('\\n')\n    });\n  }\n  return sections;\n};\nconst ThinkingProcessImproved = ({\n  requestId,\n  onSelectMolecule,\n  onSaveMolecule\n}) => {\n  _s();\n  var _thinkingData$thinkin;\n  const classes = useStyles();\n  const [thinkingData, setThinkingData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n  const [expandedSection, setExpandedSection] = useState(null);\n  const [molecules, setMolecules] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const messageContainerRef = useRef(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Fetch thinking process data when requestId changes\n  useEffect(() => {\n    if (!requestId) {\n      setError('No request ID provided');\n      setLoading(false);\n      return;\n    }\n    const fetchThinkingProcess = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await claudeAPI.getMoleculeThinking(requestId);\n        setThinkingData(response.data);\n\n        // Extract molecules from the thinking process\n        const extractedMolecules = extractMoleculesFromThinking(response.data.thinking);\n        setMolecules(extractedMolecules);\n\n        // Parse the thinking process into sections\n        const parsedSections = extractSections(response.data.thinking);\n        setSections(parsedSections);\n\n        // Initialize chat messages with the thinking process\n        setChatMessages([{\n          id: 'system-thinking',\n          type: 'claude',\n          content: response.data.thinking,\n          timestamp: response.data.timestamp\n        }]);\n\n        // Expand the first section by default\n        if (parsedSections.length > 0) {\n          setExpandedSection(0);\n        }\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching thinking process:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to load thinking process');\n        setLoading(false);\n      }\n    };\n    fetchThinkingProcess();\n  }, [requestId]);\n\n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // Handle sending user message to continue the conversation\n  const handleSendMessage = async () => {\n    if (!userInput.trim() || sendingMessage) return;\n\n    // Add user message to chat\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      type: 'user',\n      content: userInput,\n      timestamp: new Date().toISOString()\n    };\n    setChatMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setSendingMessage(true);\n    try {\n      // Send user message to Claude API\n      const response = await claudeAPI.askQuestion(userInput, {\n        requestId,\n        context: 'molecule-design'\n      });\n\n      // Add Claude's response to chat\n      const claudeMessage = {\n        id: `claude-${Date.now()}`,\n        type: 'claude',\n        content: response.data.response,\n        timestamp: new Date().toISOString()\n      };\n      setChatMessages(prev => [...prev, claudeMessage]);\n\n      // Check if the response contains new molecules\n      const newMolecules = extractMoleculesFromThinking(response.data.response);\n      if (newMolecules.length > 0) {\n        setMolecules(prev => [...prev, ...newMolecules]);\n      }\n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n\n      // Add error message to chat\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        type: 'system',\n        content: 'Sorry, there was an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      setChatMessages(prev => [...prev, errorMessage]);\n      setSendingMessage(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleAccordionChange = index => (event, isExpanded) => {\n    setExpandedSection(isExpanded ? index : null);\n  };\n  const handleSelectMolecule = molecule => {\n    if (onSelectMolecule) {\n      onSelectMolecule(molecule.smiles);\n    }\n  };\n  const handleSaveMolecule = molecule => {\n    if (onSaveMolecule) {\n      onSaveMolecule(molecule);\n    }\n  };\n\n  // Format timestamp\n  const formatDate = isoString => {\n    if (!isoString) return '';\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  const handleToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.claudeContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loadingContainer,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          style: {\n            marginTop: 16,\n            color: '#fff'\n          },\n          children: \"Loading thinking process...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this);\n  }\n  if (!thinkingData) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"No Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), \"No thinking process data is available.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Extract the main thinking text\n  const thinkingText = ((_thinkingData$thinkin = thinkingData.thinking.content[0]) === null || _thinkingData$thinkin === void 0 ? void 0 : _thinkingData$thinkin.text) || 'No text content found.';\n  const truncatedText = thinkingText.substring(0, 1000); // Show first 1000 characters\n  const needsTruncation = thinkingText.length > 1000;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(ScienceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.headerTitle,\n        children: [\"AI Thinking Process\", thinkingData.status && /*#__PURE__*/_jsxDEV(Chip, {\n          label: thinkingData.status,\n          color: \"primary\",\n          size: \"small\",\n          icon: thinkingData.status === 'completed' ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 59\n          }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 81\n          }, this),\n          className: classes.statusChip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      style: {\n        color: 'rgba(255,255,255,0.7)',\n        marginBottom: 16\n      },\n      children: [\"Generated: \", formatDate(thinkingData.timestamp)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), molecules.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.sectionTitle,\n        children: \"Generated Molecules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.moleculesGrid,\n        children: molecules.map((molecule, index) => /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.moleculeCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.viewerContainer,\n            children: /*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n              moleculeData: molecule.smiles,\n              format: \"smiles\",\n              height: 200,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.cardContent,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.moleculeName,\n              children: molecule.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.smilesCode,\n              children: molecule.smiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              mt: 1,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(LocalPharmacyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleSelectMolecule(molecule),\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleSaveMolecule(molecule),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.sectionTitle,\n      children: \"Detailed Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messageContainer,\n      ref: messageContainerRef,\n      children: [chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messageRow,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: `${classes.avatar} ${message.type === 'user' ? classes.userAvatar : ''}`,\n          children: message.type === 'user' ? 'U' : message.type === 'claude' ? /*#__PURE__*/_jsxDEV(ScienceIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 76\n          }, this) : '!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.messageContent} ${message.type === 'user' ? classes.userMessageContent : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.markdownContent,\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              color: theme.palette.text.secondary,\n              marginTop: 8,\n              display: 'block'\n            },\n            children: formatDate(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }, this)), sendingMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messageRow,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(ScienceIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.messageContent,\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            style: {\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Claude is thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        variant: \"outlined\",\n        placeholder: \"Ask a follow-up question or request refinements...\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: sendingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.sendButton,\n        onClick: handleSendMessage,\n        disabled: !userInput.trim() || sendingMessage,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.sectionTitle,\n      style: {\n        marginTop: 16\n      },\n      children: \"Raw Thinking Output (Sections)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this), sections.length > 0 ? sections.map((section, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expandedSection === index,\n      onChange: handleAccordionChange(index),\n      className: classes.accordionRoot,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 27\n        }, this),\n        className: classes.accordionSummary,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: section.title.replace(/^[#]+\\s*/, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        className: classes.accordionDetails,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.markdownContent,\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: expandedSection === index,\n            collapsedSize: \"150px\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: section.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      children: \"No structured sections found in the thinking process.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 5\n  }, this);\n};\n_s(ThinkingProcessImproved, \"LqKRiQArrzyeUyQwR1VHMZwXHR4=\", false, function () {\n  return [useStyles];\n});\n_c = ThinkingProcessImproved;\nexport default ThinkingProcessImproved;\nvar _c;\n$RefreshReg$(_c, \"ThinkingProcessImproved\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Paper","Typography","CircularProgress","Divider","Accordion","AccordionSummary","AccordionDetails","Card","CardContent","Box","Chip","Button","TextField","IconButton","Grid","Avatar","Container","makeStyles","Collapse","ExpandMoreIcon","BuildIcon","FormatQuoteIcon","LocalPharmacyIcon","CheckCircleIcon","WarningIcon","SendIcon","ScienceIcon","ChatIcon","Alert","AlertTitle","MoleculeViewer3D","ReactMarkdown","claudeAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","root","width","marginTop","spacing","marginBottom","display","flexDirection","height","header","alignItems","headerTitle","fontWeight","messageContainer","flexGrow","overflowY","padding","messageRow","avatar","backgroundColor","palette","primary","main","marginRight","userAvatar","secondary","messageContent","background","paper","borderRadius","shape","boxShadow","shadows","userMessageContent","light","color","contrastText","inputContainer","borderTop","divider","input","sendButton","marginLeft","loadingContainer","justifyContent","sectionTitle","accordionRoot","border","margin","accordionSummary","borderBottom","minHeight","accordionDetails","statusChip","codeBlock","fontFamily","grey","overflowX","text","moleculesGrid","flexWrap","gap","moleculeCard","overflow","viewerContainer","cardContent","moleculeName","fontSize","smilesCode","wordBreak","cardActions","markdownContent","paddingLeft","borderCollapse","toggleButton","extractMoleculesFromThinking","thinking","molecules","smilesRegex","match","exec","smiles","replace","nameRegex","nameMatch","substring","Math","max","index","push","name","trim","length","extractSections","sections","lines","split","currentSection","currentContent","forEach","line","trimmedLine","isHeader","test","title","content","join","ThinkingProcessImproved","requestId","onSelectMolecule","onSaveMolecule","_s","_thinkingData$thinkin","classes","thinkingData","setThinkingData","loading","setLoading","error","setError","setSections","expandedSection","setExpandedSection","setMolecules","chatMessages","setChatMessages","userInput","setUserInput","sendingMessage","setSendingMessage","messageContainerRef","isExpanded","setIsExpanded","fetchThinkingProcess","response","getMoleculeThinking","data","extractedMolecules","parsedSections","id","type","timestamp","err","_err$response","_err$response$data","console","current","scrollTop","scrollHeight","handleSendMessage","userMessage","Date","now","toISOString","prev","askQuestion","context","claudeMessage","newMolecules","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleAccordionChange","event","handleSelectMolecule","molecule","handleSaveMolecule","formatDate","isoString","date","toLocaleString","handleToggleExpand","className","claudeContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","severity","thinkingText","truncatedText","needsTruncation","status","label","size","icon","map","moleculeData","format","mt","startIcon","onClick","ref","message","placeholder","fullWidth","multiline","rows","value","onChange","target","onKeyPress","disabled","section","expanded","expandIcon","in","collapsedSize","_c","$RefreshReg$"],"sources":["C:/Users/nicks/Downloads/breakinggood/frontend/src/components/ThinkingProcessImproved.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Paper, \n  Typography, \n  CircularProgress,\n  Divider,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Box,\n  Chip,\n  Button,\n  TextField,\n  IconButton,\n  Grid,\n  Avatar,\n  Container,\n  makeStyles,\n  Collapse\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BuildIcon from '@material-ui/icons/Build';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SendIcon from '@material-ui/icons/Send';\nimport ScienceIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects instead of Science\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\nimport ReactMarkdown from 'react-markdown';\nimport { claudeAPI } from '../services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  headerTitle: {\n    fontWeight: 500\n  },\n  messageContainer: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: theme.spacing(2, 0),\n    marginBottom: theme.spacing(2)\n  },\n  messageRow: {\n    display: 'flex',\n    marginBottom: theme.spacing(3),\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    marginRight: theme.spacing(2),\n    width: 40,\n    height: 40\n  },\n  userAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  messageContent: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    boxShadow: theme.shadows[1],\n  },\n  userMessageContent: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    borderTop: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginTop: 'auto'\n  },\n  input: {\n    flexGrow: 1,\n    borderRadius: theme.shape.borderRadius,\n  },\n  sendButton: {\n    marginLeft: theme.spacing(1)\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(4),\n  },\n  sectionTitle: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n    fontWeight: 500\n  },\n  accordionRoot: {\n    marginBottom: theme.spacing(1),\n    border: `1px solid ${theme.palette.divider}`,\n    boxShadow: 'none',\n    '&:before': {\n      display: 'none',\n    },\n    '&.Mui-expanded': {\n      margin: theme.spacing(1, 0),\n    },\n  },\n  accordionSummary: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&.Mui-expanded': {\n      minHeight: 56,\n    },\n  },\n  accordionDetails: {\n    flexDirection: 'column',\n    padding: theme.spacing(2),\n  },\n  statusChip: {\n    marginLeft: theme.spacing(1),\n  },\n  codeBlock: {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: theme.palette.text.primary\n  },\n  moleculesGrid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  moleculeCard: {\n    width: 280,\n    margin: theme.spacing(1),\n    overflow: 'hidden'\n  },\n  viewerContainer: {\n    height: 200,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`\n  },\n  cardContent: {\n    padding: theme.spacing(2),\n  },\n  moleculeName: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    marginBottom: theme.spacing(1)\n  },\n  smilesCode: {\n    fontSize: '0.75rem',\n    wordBreak: 'break-all',\n    marginBottom: theme.spacing(1),\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius\n  },\n  cardActions: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  markdownContent: {\n    '& h1, & h2, & h3, & h4, & h5, & h6': {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    },\n    '& a': {\n      color: theme.palette.primary.main\n    },\n    '& ul, & ol': {\n      paddingLeft: theme.spacing(3)\n    },\n    '& pre': {\n      backgroundColor: theme.palette.grey[200],\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius,\n      overflowX: 'auto',\n      fontFamily: 'monospace',\n      fontSize: '0.875rem'\n    },\n    '& code': {\n      fontFamily: 'monospace',\n      backgroundColor: theme.palette.grey[100],\n      padding: theme.spacing(0.2, 0.5),\n      borderRadius: 3,\n    },\n    '& table': {\n      borderCollapse: 'collapse',\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    '& th, & td': {\n      border: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1)\n    },\n    '& th': {\n      backgroundColor: theme.palette.grey[100],\n    }\n  },\n  toggleButton: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n// This function parses the molecule data from the thinking process\nconst extractMoleculesFromThinking = (thinking) => {\n  if (!thinking) return [];\n  \n  const molecules = [];\n  \n  // Find SMILES strings in the thinking process\n  const smilesRegex = /SMILES:\\s*([^\\s\\n]+)/g;\n  let match;\n  \n  while ((match = smilesRegex.exec(thinking)) !== null) {\n    const smiles = match[1].replace(/[`'\"]/g, '');\n    \n    // Try to find a name for this molecule near the SMILES string\n    const nameRegex = /\\*\\*Chemical Name:\\*\\*\\s*([^\\n]+)/;\n    const nameMatch = thinking.substring(Math.max(0, match.index - 200), match.index + 300).match(nameRegex);\n    \n    molecules.push({\n      smiles,\n      name: nameMatch ? nameMatch[1].trim() : `Molecule ${molecules.length + 1}`\n    });\n  }\n  \n  return molecules;\n};\n\n// Extract sections from the thinking process for structured display\nconst extractSections = (thinking) => {\n  if (!thinking) return [];\n  \n  const sections = [];\n  const lines = thinking.split('\\n');\n  let currentSection = null;\n  let currentContent = [];\n  \n  lines.forEach(line => {\n    const trimmedLine = line.trim();\n    // Check if this line is a header (using # markdown syntax)\n    const isHeader = /^#{1,3}\\s+(.+)$/.test(trimmedLine);\n    \n    if (isHeader) {\n      // Save previous section if it exists\n      if (currentSection) {\n        sections.push({\n          title: currentSection,\n          content: currentContent.join('\\n')\n        });\n      }\n      \n      // Start new section\n      currentSection = trimmedLine;\n      currentContent = [];\n    } else if (currentSection) {\n      currentContent.push(line);\n    } else {\n      // First lines before any clear section header\n      if (!currentSection) {\n        currentSection = \"Introduction\";\n      }\n      currentContent.push(line);\n    }\n  });\n  \n  // Add the final section\n  if (currentSection) {\n    sections.push({\n      title: currentSection,\n      content: currentContent.join('\\n')\n    });\n  }\n  \n  return sections;\n};\n\nconst ThinkingProcessImproved = ({ requestId, onSelectMolecule, onSaveMolecule }) => {\n  const classes = useStyles();\n  const [thinkingData, setThinkingData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n  const [expandedSection, setExpandedSection] = useState(null);\n  const [molecules, setMolecules] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const messageContainerRef = useRef(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // Fetch thinking process data when requestId changes\n  useEffect(() => {\n    if (!requestId) {\n      setError('No request ID provided');\n      setLoading(false);\n      return;\n    }\n    \n    const fetchThinkingProcess = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await claudeAPI.getMoleculeThinking(requestId);\n        setThinkingData(response.data);\n        \n        // Extract molecules from the thinking process\n        const extractedMolecules = extractMoleculesFromThinking(response.data.thinking);\n        setMolecules(extractedMolecules);\n        \n        // Parse the thinking process into sections\n        const parsedSections = extractSections(response.data.thinking);\n        setSections(parsedSections);\n        \n        // Initialize chat messages with the thinking process\n        setChatMessages([\n          {\n            id: 'system-thinking',\n            type: 'claude',\n            content: response.data.thinking,\n            timestamp: response.data.timestamp\n          }\n        ]);\n        \n        // Expand the first section by default\n        if (parsedSections.length > 0) {\n          setExpandedSection(0);\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching thinking process:', err);\n        setError(err.response?.data?.error || 'Failed to load thinking process');\n        setLoading(false);\n      }\n    };\n    \n    fetchThinkingProcess();\n  }, [requestId]);\n  \n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  // Handle sending user message to continue the conversation\n  const handleSendMessage = async () => {\n    if (!userInput.trim() || sendingMessage) return;\n    \n    // Add user message to chat\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      type: 'user',\n      content: userInput,\n      timestamp: new Date().toISOString()\n    };\n    \n    setChatMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setSendingMessage(true);\n    \n    try {\n      // Send user message to Claude API\n      const response = await claudeAPI.askQuestion(userInput, { requestId, context: 'molecule-design' });\n      \n      // Add Claude's response to chat\n      const claudeMessage = {\n        id: `claude-${Date.now()}`,\n        type: 'claude',\n        content: response.data.response,\n        timestamp: new Date().toISOString()\n      };\n      \n      setChatMessages(prev => [...prev, claudeMessage]);\n      \n      // Check if the response contains new molecules\n      const newMolecules = extractMoleculesFromThinking(response.data.response);\n      if (newMolecules.length > 0) {\n        setMolecules(prev => [...prev, ...newMolecules]);\n      }\n      \n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      \n      // Add error message to chat\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        type: 'system',\n        content: 'Sorry, there was an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      \n      setChatMessages(prev => [...prev, errorMessage]);\n      setSendingMessage(false);\n    }\n  };\n  \n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleAccordionChange = (index) => (event, isExpanded) => {\n    setExpandedSection(isExpanded ? index : null);\n  };\n  \n  const handleSelectMolecule = (molecule) => {\n    if (onSelectMolecule) {\n      onSelectMolecule(molecule.smiles);\n    }\n  };\n  \n  const handleSaveMolecule = (molecule) => {\n    if (onSaveMolecule) {\n      onSaveMolecule(molecule);\n    }\n  };\n  \n  // Format timestamp\n  const formatDate = (isoString) => {\n    if (!isoString) return '';\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  \n  const handleToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  \n  if (loading) {\n    return (\n      <Paper className={classes.claudeContainer}>\n        <div className={classes.loadingContainer}>\n          <CircularProgress color=\"primary\" />\n          <Typography variant=\"body1\" style={{ marginTop: 16, color: '#fff' }}>\n            Loading thinking process...\n          </Typography>\n        </div>\n      </Paper>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Alert severity=\"error\" className={classes.root}>\n        <AlertTitle>Error</AlertTitle>\n        {error}\n      </Alert>\n    );\n  }\n  \n  if (!thinkingData) {\n    return (\n      <Alert severity=\"warning\" className={classes.root}>\n        <AlertTitle>No Data</AlertTitle>\n        No thinking process data is available.\n      </Alert>\n    );\n  }\n  \n  // Extract the main thinking text\n  const thinkingText = thinkingData.thinking.content[0]?.text || 'No text content found.';\n  const truncatedText = thinkingText.substring(0, 1000); // Show first 1000 characters\n  const needsTruncation = thinkingText.length > 1000;\n  \n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Avatar className={classes.avatar}>\n          <ScienceIcon />\n        </Avatar>\n        <Typography variant=\"h6\" className={classes.headerTitle}>\n          AI Thinking Process\n          {thinkingData.status && (\n            <Chip \n              label={thinkingData.status} \n              color=\"primary\"\n              size=\"small\"\n              icon={thinkingData.status === 'completed' ? <CheckCircleIcon /> : <CircularProgress size={16} />}\n              className={classes.statusChip}\n            />\n          )}\n        </Typography>\n      </div>\n      \n      <Typography variant=\"body2\" style={{ color: 'rgba(255,255,255,0.7)', marginBottom: 16 }}>\n        Generated: {formatDate(thinkingData.timestamp)}\n      </Typography>\n      \n      {/* Molecule Display Section */}\n      {molecules.length > 0 && (\n        <>\n          <Typography variant=\"h6\" className={classes.sectionTitle}>\n            Generated Molecules\n          </Typography>\n          \n          <div className={classes.moleculesGrid}>\n            {molecules.map((molecule, index) => (\n              <Card key={index} className={classes.moleculeCard}>\n                <div className={classes.viewerContainer}>\n                  <MoleculeViewer3D \n                    moleculeData={molecule.smiles}\n                    format=\"smiles\"\n                    height={200}\n                    width=\"100%\"\n                  />\n                </div>\n                <CardContent className={classes.cardContent}>\n                  <Typography className={classes.moleculeName}>\n                    {molecule.name}\n                  </Typography>\n                  <div className={classes.smilesCode}>\n                    {molecule.smiles}\n                  </div>\n                  <Box display=\"flex\" justifyContent=\"space-between\" mt={1}>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      color=\"primary\"\n                      startIcon={<LocalPharmacyIcon />}\n                      onClick={() => handleSelectMolecule(molecule)}\n                    >\n                      Select\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"contained\" \n                      color=\"primary\"\n                      onClick={() => handleSaveMolecule(molecule)}\n                    >\n                      Save\n                    </Button>\n                  </Box>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </>\n      )}\n      \n      {/* Chat Messages */}\n      <Typography variant=\"h6\" className={classes.sectionTitle}>\n        Detailed Analysis\n      </Typography>\n      \n      <div className={classes.messageContainer} ref={messageContainerRef}>\n        {chatMessages.map((message) => (\n          <div key={message.id} className={classes.messageRow}>\n            <Avatar className={`${classes.avatar} ${message.type === 'user' ? classes.userAvatar : ''}`}>\n              {message.type === 'user' ? 'U' : message.type === 'claude' ? <ScienceIcon fontSize=\"small\"/> : '!'}\n            </Avatar>\n            <div className={`${classes.messageContent} ${message.type === 'user' ? classes.userMessageContent : ''}`}>\n              <div className={classes.markdownContent}>\n                <ReactMarkdown>\n                  {message.content}\n                </ReactMarkdown>\n              </div>\n              <Typography variant=\"caption\" style={{ color: theme.palette.text.secondary, marginTop: 8, display: 'block' }}>\n                {formatDate(message.timestamp)}\n              </Typography>\n            </div>\n          </div>\n        ))}\n        \n        {sendingMessage && (\n          <div className={classes.messageRow}>\n            <Avatar className={classes.avatar}>\n              <ScienceIcon fontSize=\"small\"/>\n            </Avatar>\n            <div className={classes.messageContent} style={{ display: 'flex', alignItems: 'center' }}>\n              <CircularProgress size={20} style={{ marginRight: 8 }} />\n              <Typography>Claude is thinking...</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Input Field for Continued Conversation */}\n      <div className={classes.inputContainer}>\n        <TextField\n          className={classes.input}\n          variant=\"outlined\"\n          placeholder=\"Ask a follow-up question or request refinements...\"\n          fullWidth\n          multiline\n          rows={2}\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          disabled={sendingMessage}\n        />\n        <IconButton \n          className={classes.sendButton} \n          onClick={handleSendMessage}\n          disabled={!userInput.trim() || sendingMessage}\n          color=\"primary\"\n        >\n          <SendIcon />\n        </IconButton>\n      </div>\n      \n      {/* Structured Thinking Process (Accordions) */}\n      <Typography variant=\"h6\" className={classes.sectionTitle} style={{ marginTop: 16 }}>\n        Raw Thinking Output (Sections)\n      </Typography>\n      \n      {sections.length > 0 ? (\n        sections.map((section, index) => (\n          <Accordion\n            key={index}\n            expanded={expandedSection === index}\n            onChange={handleAccordionChange(index)}\n            className={classes.accordionRoot}\n            variant=\"outlined\"\n          >\n            <AccordionSummary \n              expandIcon={<ExpandMoreIcon />}\n              className={classes.accordionSummary}\n            >\n              <Typography>{section.title.replace(/^[#]+\\s*/, '')}</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.accordionDetails}>\n              <div className={classes.markdownContent}>\n                <Collapse in={expandedSection === index} collapsedSize=\"150px\">\n                  <ReactMarkdown>\n                    {section.content}\n                  </ReactMarkdown>\n                </Collapse>\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        ))\n      ) : (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          No structured sections found in the thinking process.\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default ThinkingProcessImproved;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}