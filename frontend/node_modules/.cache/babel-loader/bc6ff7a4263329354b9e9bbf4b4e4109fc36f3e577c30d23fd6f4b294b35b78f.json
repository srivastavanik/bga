{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicks\\\\Downloads\\\\breakinggood\\\\frontend\\\\src\\\\components\\\\StructureEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, CircularProgress, Typography, TextField, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Snackbar, IconButton, Grid, Tooltip, Box } from '@material-ui/core';\nimport { Save, Refresh, FileCopy, Undo, Redo, ZoomIn, ZoomOut, Close as CloseIcon } from '@material-ui/icons';\nimport MoleculeViewer3D from './MoleculeViewer3D';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(3)\n  },\n  editorContainer: {\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    minHeight: '400px',\n    position: 'relative',\n    backgroundColor: '#f9f9f9'\n  },\n  ketcher: {\n    width: '100%',\n    height: '100%',\n    minHeight: '400px'\n  },\n  controlsBar: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(1)\n  },\n  button: {\n    margin: theme.spacing(0.5)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  inputField: {\n    marginBottom: theme.spacing(2)\n  },\n  infoText: {\n    margin: theme.spacing(1, 0)\n  },\n  propertyPaper: {\n    padding: theme.spacing(2),\n    height: '100%'\n  },\n  loading: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  errorMessage: {\n    color: theme.palette.error.main,\n    marginTop: theme.spacing(1)\n  },\n  viewerContainer: {\n    marginTop: theme.spacing(3)\n  },\n  propertyGrid: {\n    marginTop: theme.spacing(2)\n  },\n  propertyLabel: {\n    fontWeight: 'bold'\n  },\n  propertyValue: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst StructureEditor = ({\n  initialMolecule = '',\n  onMoleculeChange = () => {},\n  readOnly = false,\n  showControls = true,\n  showProperties = true\n}) => {\n  _s();\n  var _properties$molWeight, _properties$logP, _properties$tpsa;\n  const classes = useStyles();\n  const ketcherFrame = useRef(null);\n  const ketcherInitialized = useRef(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ketcher, setKetcher] = useState(null);\n  const [smiles, setSmiles] = useState('');\n  const [molfile, setMolfile] = useState('');\n  const [inputType, setInputType] = useState('editor');\n  const [inputValue, setInputValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [properties, setProperties] = useState(null);\n  const [is3DViewActive, setIs3DViewActive] = useState(false);\n\n  // Initialize Ketcher\n  useEffect(() => {\n    const initializeKetcher = async () => {\n      if (!ketcherFrame.current || ketcherInitialized.current) return;\n      try {\n        // Create iframe for Ketcher\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('src', '/ketcher/index.html');\n        iframe.setAttribute('class', classes.ketcher);\n        iframe.setAttribute('id', 'ketcher-frame');\n        iframe.style.border = 'none';\n        ketcherFrame.current.appendChild(iframe);\n\n        // Wait for Ketcher to initialize\n        iframe.onload = () => {\n          const ketcherWindow = iframe.contentWindow;\n          const checkKetcher = setInterval(() => {\n            if (ketcherWindow.ketcher) {\n              clearInterval(checkKetcher);\n              setKetcher(ketcherWindow.ketcher);\n              ketcherInitialized.current = true;\n              setIsLoading(false);\n\n              // Load initial molecule if provided\n              if (initialMolecule) {\n                setTimeout(() => {\n                  loadMolecule(initialMolecule);\n                }, 1000);\n              }\n            }\n          }, 300);\n        };\n      } catch (error) {\n        console.error('Error initializing Ketcher:', error);\n        setErrorMessage('Failed to initialize molecule editor.');\n        setIsLoading(false);\n      }\n    };\n    initializeKetcher();\n    return () => {\n      ketcherInitialized.current = false;\n    };\n  }, [initialMolecule]);\n\n  // Function to load a molecule into Ketcher\n  const loadMolecule = async data => {\n    if (!ketcher) return;\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Determine format and load\n      if (data.startsWith('InChI=')) {\n        await ketcher.setMolecule(data);\n      } else if (data.includes('\\n') || data.includes('M  END')) {\n        // Looks like molfile\n        await ketcher.setMolecule(data);\n      } else {\n        // Assume SMILES\n        const response = await axios.post('/api/simulation/convert', {\n          input: data,\n          inputFormat: 'smiles',\n          outputFormat: 'mol'\n        });\n        if (response.data && response.data.output) {\n          await ketcher.setMolecule(response.data.output);\n        } else {\n          throw new Error('Failed to convert SMILES to molfile');\n        }\n      }\n      updateMoleculeData();\n    } catch (error) {\n      console.error('Error loading molecule:', error);\n      setErrorMessage(`Failed to load molecule: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to update molecule data\n  const updateMoleculeData = async () => {\n    if (!ketcher) return;\n    try {\n      const mol = await ketcher.getMolfile();\n      setMolfile(mol);\n      const response = await axios.post('/api/simulation/convert', {\n        input: mol,\n        inputFormat: 'mol',\n        outputFormat: 'smiles'\n      });\n      if (response.data && response.data.output) {\n        const newSmiles = response.data.output.trim();\n        setSmiles(newSmiles);\n        onMoleculeChange(newSmiles);\n\n        // Get properties if enabled\n        if (showProperties) {\n          calculateProperties(newSmiles);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating molecule data:', error);\n    }\n  };\n\n  // Calculate molecular properties\n  const calculateProperties = async smilesString => {\n    try {\n      const response = await axios.post('/api/simulation/properties', {\n        smiles: smilesString\n      });\n      if (response.data) {\n        setProperties(response.data);\n      }\n    } catch (error) {\n      console.error('Error calculating properties:', error);\n    }\n  };\n\n  // Handle input type change\n  const handleInputTypeChange = event => {\n    setInputType(event.target.value);\n  };\n\n  // Handle input value change\n  const handleInputValueChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Load molecule from input\n  const handleLoadMolecule = () => {\n    if (!inputValue.trim()) {\n      setErrorMessage('Please enter a valid molecule string');\n      return;\n    }\n    loadMolecule(inputValue.trim());\n    setInputValue('');\n  };\n\n  // Handle undo\n  const handleUndo = async () => {\n    if (!ketcher) return;\n    try {\n      await ketcher.undo();\n      updateMoleculeData();\n    } catch (error) {\n      console.error('Error performing undo:', error);\n    }\n  };\n\n  // Handle redo\n  const handleRedo = async () => {\n    if (!ketcher) return;\n    try {\n      await ketcher.redo();\n      updateMoleculeData();\n    } catch (error) {\n      console.error('Error performing redo:', error);\n    }\n  };\n\n  // Handle clear\n  const handleClear = async () => {\n    if (!ketcher) return;\n    try {\n      await ketcher.clear();\n      updateMoleculeData();\n    } catch (error) {\n      console.error('Error clearing editor:', error);\n    }\n  };\n\n  // Copy SMILES to clipboard\n  const copySmilesToClipboard = () => {\n    if (!smiles) return;\n    navigator.clipboard.writeText(smiles).then(() => {\n      setSnackbarMessage('SMILES copied to clipboard');\n      setSnackbarOpen(true);\n    }, err => {\n      console.error('Failed to copy: ', err);\n      setSnackbarMessage('Failed to copy SMILES');\n      setSnackbarOpen(true);\n    });\n  };\n\n  // Save the current molecule\n  const handleSave = async () => {\n    if (!ketcher || !smiles) return;\n    try {\n      const mol = await ketcher.getMolfile();\n\n      // Prepare molecule data\n      const moleculeData = {\n        smiles,\n        molfile: mol,\n        name: 'Untitled Molecule',\n        dateCreated: new Date().toISOString(),\n        properties: properties || {}\n      };\n\n      // Save to backend\n      const response = await axios.post('/api/drug-design/molecules', moleculeData);\n      if (response.data && response.data.id) {\n        setSnackbarMessage('Molecule saved successfully');\n        setSnackbarOpen(true);\n      } else {\n        throw new Error('Failed to save molecule');\n      }\n    } catch (error) {\n      console.error('Error saving molecule:', error);\n      setSnackbarMessage('Failed to save molecule');\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Toggle 3D view\n  const toggle3DView = () => {\n    setIs3DViewActive(!is3DViewActive);\n  };\n\n  // Close snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Molecular Structure Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), showControls && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controlsBar,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Undo\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.button,\n            onClick: handleUndo,\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(Undo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Redo\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.button,\n            onClick: handleRedo,\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(Redo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Clear\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            className: classes.button,\n            onClick: handleClear,\n            disabled: isLoading,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Copy SMILES\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.button,\n            onClick: copySmilesToClipboard,\n            disabled: !smiles || isLoading,\n            children: /*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Save Molecule\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.button,\n            onClick: handleSave,\n            disabled: !smiles || isLoading,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: is3DViewActive ? \"primary\" : \"default\",\n          className: classes.button,\n          onClick: toggle3DView,\n          disabled: !smiles || isLoading,\n          children: is3DViewActive ? \"2D Editor\" : \"3D View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.editorContainer,\n        children: [!is3DViewActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ketcherFrame,\n          className: classes.ketcher\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.viewerContainer,\n          children: /*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n            moleculeData: smiles,\n            format: \"smiles\",\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.errorMessage,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Import Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Input Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: inputType,\n            onChange: handleInputTypeChange,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"smiles\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 26\n              }, this),\n              label: \"SMILES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"molfile\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 26\n              }, this),\n              label: \"Molfile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"inchi\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 26\n              }, this),\n              label: \"InChI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: `Enter ${inputType === 'smiles' ? 'SMILES' : inputType === 'molfile' ? 'Molfile' : 'InChI'}`,\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: inputType === 'molfile',\n          rows: inputType === 'molfile' ? 4 : 1,\n          value: inputValue,\n          onChange: handleInputValueChange,\n          className: classes.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleLoadMolecule,\n          disabled: !inputValue.trim() || isLoading,\n          children: \"Load Molecule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), showProperties && properties && /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Molecular Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.propertyGrid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"Formula:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: properties.formula\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"Molecular Weight:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: [(_properties$molWeight = properties.molWeight) === null || _properties$molWeight === void 0 ? void 0 : _properties$molWeight.toFixed(2), \" g/mol\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"LogP:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: (_properties$logP = properties.logP) === null || _properties$logP === void 0 ? void 0 : _properties$logP.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"TPSA:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: [(_properties$tpsa = properties.tpsa) === null || _properties$tpsa === void 0 ? void 0 : _properties$tpsa.toFixed(2), \" \\xC5\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"H-Bond Donors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: properties.hbondDonorCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"H-Bond Acceptors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: properties.hbondAcceptorCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"Rotatable Bonds:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: properties.rotatableBondCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyLabel,\n              children: \"Lipinski Violations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.propertyValue,\n              children: properties.lipinskiViolations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: snackbarOpen,\n      autoHideDuration: 3000,\n      onClose: handleCloseSnackbar,\n      message: snackbarMessage,\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        color: \"inherit\",\n        onClick: handleCloseSnackbar,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n_s(StructureEditor, \"RbBQRxBruZKXBk7J++kfX/hjwY0=\", false, function () {\n  return [useStyles];\n});\n_c = StructureEditor;\nexport default StructureEditor;\nvar _c;\n$RefreshReg$(_c, \"StructureEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","makeStyles","Paper","Button","CircularProgress","Typography","TextField","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Snackbar","IconButton","Grid","Tooltip","Box","Save","Refresh","FileCopy","Undo","Redo","ZoomIn","ZoomOut","Close","CloseIcon","MoleculeViewer3D","axios","jsxDEV","_jsxDEV","useStyles","theme","root","padding","spacing","paper","marginBottom","editorContainer","border","palette","divider","borderRadius","shape","minHeight","position","backgroundColor","ketcher","width","height","controlsBar","marginTop","display","flexWrap","gap","button","margin","formControl","minWidth","inputField","infoText","propertyPaper","loading","top","left","transform","errorMessage","color","error","main","viewerContainer","propertyGrid","propertyLabel","fontWeight","propertyValue","marginLeft","StructureEditor","initialMolecule","onMoleculeChange","readOnly","showControls","showProperties","_s","_properties$molWeight","_properties$logP","_properties$tpsa","classes","ketcherFrame","ketcherInitialized","isLoading","setIsLoading","setKetcher","smiles","setSmiles","molfile","setMolfile","inputType","setInputType","inputValue","setInputValue","setErrorMessage","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","properties","setProperties","is3DViewActive","setIs3DViewActive","initializeKetcher","current","iframe","document","createElement","setAttribute","style","appendChild","onload","ketcherWindow","contentWindow","checkKetcher","setInterval","clearInterval","setTimeout","loadMolecule","console","data","startsWith","setMolecule","includes","response","post","input","inputFormat","outputFormat","output","Error","updateMoleculeData","message","mol","getMolfile","newSmiles","trim","calculateProperties","smilesString","handleInputTypeChange","event","target","value","handleInputValueChange","handleLoadMolecule","handleUndo","undo","handleRedo","redo","handleClear","clear","copySmilesToClipboard","navigator","clipboard","writeText","then","err","handleSave","moleculeData","name","dateCreated","Date","toISOString","id","toggle3DView","handleCloseSnackbar","reason","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","disabled","ref","format","mt","component","row","onChange","control","label","fullWidth","multiline","rows","container","item","xs","sm","md","formula","molWeight","toFixed","logP","tpsa","hbondDonorCount","hbondAcceptorCount","rotatableBondCount","lipinskiViolations","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","size","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/nicks/Downloads/breakinggood/frontend/src/components/StructureEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Paper, \r\n  Button, \r\n  CircularProgress, \r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Snackbar,\r\n  IconButton,\r\n  Grid,\r\n  Tooltip,\r\n  Box\r\n} from '@material-ui/core';\r\nimport { \r\n  Save, \r\n  Refresh, \r\n  FileCopy, \r\n  Undo, \r\n  Redo, \r\n  ZoomIn, \r\n  ZoomOut,\r\n  Close as CloseIcon\r\n} from '@material-ui/icons';\r\nimport MoleculeViewer3D from './MoleculeViewer3D';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  editorContainer: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    minHeight: '400px',\r\n    position: 'relative',\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  ketcher: {\r\n    width: '100%',\r\n    height: '100%',\r\n    minHeight: '400px',\r\n  },\r\n  controlsBar: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    gap: theme.spacing(1),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  infoText: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  propertyPaper: {\r\n    padding: theme.spacing(2),\r\n    height: '100%',\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  errorMessage: {\r\n    color: theme.palette.error.main,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  viewerContainer: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  propertyGrid: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  propertyLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  propertyValue: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst StructureEditor = ({ \r\n  initialMolecule = '',\r\n  onMoleculeChange = () => {},\r\n  readOnly = false,\r\n  showControls = true,\r\n  showProperties = true \r\n}) => {\r\n  const classes = useStyles();\r\n  const ketcherFrame = useRef(null);\r\n  const ketcherInitialized = useRef(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ketcher, setKetcher] = useState(null);\r\n  const [smiles, setSmiles] = useState('');\r\n  const [molfile, setMolfile] = useState('');\r\n  const [inputType, setInputType] = useState('editor');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [properties, setProperties] = useState(null);\r\n  const [is3DViewActive, setIs3DViewActive] = useState(false);\r\n\r\n  // Initialize Ketcher\r\n  useEffect(() => {\r\n    const initializeKetcher = async () => {\r\n      if (!ketcherFrame.current || ketcherInitialized.current) return;\r\n\r\n      try {\r\n        // Create iframe for Ketcher\r\n        const iframe = document.createElement('iframe');\r\n        iframe.setAttribute('src', '/ketcher/index.html');\r\n        iframe.setAttribute('class', classes.ketcher);\r\n        iframe.setAttribute('id', 'ketcher-frame');\r\n        iframe.style.border = 'none';\r\n        \r\n        ketcherFrame.current.appendChild(iframe);\r\n        \r\n        // Wait for Ketcher to initialize\r\n        iframe.onload = () => {\r\n          const ketcherWindow = iframe.contentWindow;\r\n          \r\n          const checkKetcher = setInterval(() => {\r\n            if (ketcherWindow.ketcher) {\r\n              clearInterval(checkKetcher);\r\n              setKetcher(ketcherWindow.ketcher);\r\n              ketcherInitialized.current = true;\r\n              setIsLoading(false);\r\n              \r\n              // Load initial molecule if provided\r\n              if (initialMolecule) {\r\n                setTimeout(() => {\r\n                  loadMolecule(initialMolecule);\r\n                }, 1000);\r\n              }\r\n            }\r\n          }, 300);\r\n        };\r\n      } catch (error) {\r\n        console.error('Error initializing Ketcher:', error);\r\n        setErrorMessage('Failed to initialize molecule editor.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeKetcher();\r\n\r\n    return () => {\r\n      ketcherInitialized.current = false;\r\n    };\r\n  }, [initialMolecule]);\r\n\r\n  // Function to load a molecule into Ketcher\r\n  const loadMolecule = async (data) => {\r\n    if (!ketcher) return;\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      setErrorMessage('');\r\n      \r\n      // Determine format and load\r\n      if (data.startsWith('InChI=')) {\r\n        await ketcher.setMolecule(data);\r\n      } else if (data.includes('\\n') || data.includes('M  END')) {\r\n        // Looks like molfile\r\n        await ketcher.setMolecule(data);\r\n      } else {\r\n        // Assume SMILES\r\n        const response = await axios.post('/api/simulation/convert', {\r\n          input: data,\r\n          inputFormat: 'smiles',\r\n          outputFormat: 'mol'\r\n        });\r\n        \r\n        if (response.data && response.data.output) {\r\n          await ketcher.setMolecule(response.data.output);\r\n        } else {\r\n          throw new Error('Failed to convert SMILES to molfile');\r\n        }\r\n      }\r\n      \r\n      updateMoleculeData();\r\n    } catch (error) {\r\n      console.error('Error loading molecule:', error);\r\n      setErrorMessage(`Failed to load molecule: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to update molecule data\r\n  const updateMoleculeData = async () => {\r\n    if (!ketcher) return;\r\n    \r\n    try {\r\n      const mol = await ketcher.getMolfile();\r\n      setMolfile(mol);\r\n      \r\n      const response = await axios.post('/api/simulation/convert', {\r\n        input: mol,\r\n        inputFormat: 'mol',\r\n        outputFormat: 'smiles'\r\n      });\r\n      \r\n      if (response.data && response.data.output) {\r\n        const newSmiles = response.data.output.trim();\r\n        setSmiles(newSmiles);\r\n        onMoleculeChange(newSmiles);\r\n        \r\n        // Get properties if enabled\r\n        if (showProperties) {\r\n          calculateProperties(newSmiles);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating molecule data:', error);\r\n    }\r\n  };\r\n\r\n  // Calculate molecular properties\r\n  const calculateProperties = async (smilesString) => {\r\n    try {\r\n      const response = await axios.post('/api/simulation/properties', {\r\n        smiles: smilesString\r\n      });\r\n      \r\n      if (response.data) {\r\n        setProperties(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error calculating properties:', error);\r\n    }\r\n  };\r\n\r\n  // Handle input type change\r\n  const handleInputTypeChange = (event) => {\r\n    setInputType(event.target.value);\r\n  };\r\n\r\n  // Handle input value change\r\n  const handleInputValueChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  // Load molecule from input\r\n  const handleLoadMolecule = () => {\r\n    if (!inputValue.trim()) {\r\n      setErrorMessage('Please enter a valid molecule string');\r\n      return;\r\n    }\r\n    \r\n    loadMolecule(inputValue.trim());\r\n    setInputValue('');\r\n  };\r\n\r\n  // Handle undo\r\n  const handleUndo = async () => {\r\n    if (!ketcher) return;\r\n    try {\r\n      await ketcher.undo();\r\n      updateMoleculeData();\r\n    } catch (error) {\r\n      console.error('Error performing undo:', error);\r\n    }\r\n  };\r\n\r\n  // Handle redo\r\n  const handleRedo = async () => {\r\n    if (!ketcher) return;\r\n    try {\r\n      await ketcher.redo();\r\n      updateMoleculeData();\r\n    } catch (error) {\r\n      console.error('Error performing redo:', error);\r\n    }\r\n  };\r\n\r\n  // Handle clear\r\n  const handleClear = async () => {\r\n    if (!ketcher) return;\r\n    try {\r\n      await ketcher.clear();\r\n      updateMoleculeData();\r\n    } catch (error) {\r\n      console.error('Error clearing editor:', error);\r\n    }\r\n  };\r\n\r\n  // Copy SMILES to clipboard\r\n  const copySmilesToClipboard = () => {\r\n    if (!smiles) return;\r\n    \r\n    navigator.clipboard.writeText(smiles).then(\r\n      () => {\r\n        setSnackbarMessage('SMILES copied to clipboard');\r\n        setSnackbarOpen(true);\r\n      },\r\n      (err) => {\r\n        console.error('Failed to copy: ', err);\r\n        setSnackbarMessage('Failed to copy SMILES');\r\n        setSnackbarOpen(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Save the current molecule\r\n  const handleSave = async () => {\r\n    if (!ketcher || !smiles) return;\r\n    \r\n    try {\r\n      const mol = await ketcher.getMolfile();\r\n      \r\n      // Prepare molecule data\r\n      const moleculeData = {\r\n        smiles,\r\n        molfile: mol,\r\n        name: 'Untitled Molecule',\r\n        dateCreated: new Date().toISOString(),\r\n        properties: properties || {}\r\n      };\r\n      \r\n      // Save to backend\r\n      const response = await axios.post('/api/drug-design/molecules', moleculeData);\r\n      \r\n      if (response.data && response.data.id) {\r\n        setSnackbarMessage('Molecule saved successfully');\r\n        setSnackbarOpen(true);\r\n      } else {\r\n        throw new Error('Failed to save molecule');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving molecule:', error);\r\n      setSnackbarMessage('Failed to save molecule');\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Toggle 3D view\r\n  const toggle3DView = () => {\r\n    setIs3DViewActive(!is3DViewActive);\r\n  };\r\n\r\n  // Close snackbar\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Molecular Structure Editor\r\n        </Typography>\r\n        \r\n        {showControls && (\r\n          <div className={classes.controlsBar}>\r\n            <Tooltip title=\"Undo\">\r\n              <IconButton className={classes.button} onClick={handleUndo} disabled={isLoading}>\r\n                <Undo />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Redo\">\r\n              <IconButton className={classes.button} onClick={handleRedo} disabled={isLoading}>\r\n                <Redo />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Clear\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes.button}\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title=\"Copy SMILES\">\r\n              <IconButton \r\n                className={classes.button} \r\n                onClick={copySmilesToClipboard} \r\n                disabled={!smiles || isLoading}\r\n              >\r\n                <FileCopy />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Save Molecule\">\r\n              <IconButton \r\n                className={classes.button} \r\n                onClick={handleSave} \r\n                disabled={!smiles || isLoading}\r\n                color=\"primary\"\r\n              >\r\n                <Save />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={is3DViewActive ? \"primary\" : \"default\"}\r\n              className={classes.button}\r\n              onClick={toggle3DView}\r\n              disabled={!smiles || isLoading}\r\n            >\r\n              {is3DViewActive ? \"2D Editor\" : \"3D View\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={classes.editorContainer}>\r\n          {!is3DViewActive ? (\r\n            <div ref={ketcherFrame} className={classes.ketcher} />\r\n          ) : (\r\n            <div className={classes.viewerContainer}>\r\n              <MoleculeViewer3D\r\n                moleculeData={smiles}\r\n                format=\"smiles\"\r\n                height={400}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          {isLoading && (\r\n            <div className={classes.loading}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {errorMessage && (\r\n          <Typography className={classes.errorMessage}>\r\n            {errorMessage}\r\n          </Typography>\r\n        )}\r\n        \r\n        <Box mt={3}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Import Structure\r\n          </Typography>\r\n          \r\n          <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\">Input Type</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              value={inputType}\r\n              onChange={handleInputTypeChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"smiles\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"SMILES\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"molfile\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Molfile\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"inchi\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"InChI\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          \r\n          <TextField\r\n            label={`Enter ${inputType === 'smiles' ? 'SMILES' : inputType === 'molfile' ? 'Molfile' : 'InChI'}`}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline={inputType === 'molfile'}\r\n            rows={inputType === 'molfile' ? 4 : 1}\r\n            value={inputValue}\r\n            onChange={handleInputValueChange}\r\n            className={classes.inputField}\r\n          />\r\n          \r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleLoadMolecule}\r\n            disabled={!inputValue.trim() || isLoading}\r\n          >\r\n            Load Molecule\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      \r\n      {showProperties && properties && (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Molecular Properties\r\n          </Typography>\r\n          \r\n          <Grid container spacing={2} className={classes.propertyGrid}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>Formula:</span>\r\n                <span className={classes.propertyValue}>{properties.formula}</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>Molecular Weight:</span>\r\n                <span className={classes.propertyValue}>{properties.molWeight?.toFixed(2)} g/mol</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>LogP:</span>\r\n                <span className={classes.propertyValue}>{properties.logP?.toFixed(2)}</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>TPSA:</span>\r\n                <span className={classes.propertyValue}>{properties.tpsa?.toFixed(2)} Å²</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>H-Bond Donors:</span>\r\n                <span className={classes.propertyValue}>{properties.hbondDonorCount}</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>H-Bond Acceptors:</span>\r\n                <span className={classes.propertyValue}>{properties.hbondAcceptorCount}</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>Rotatable Bonds:</span>\r\n                <span className={classes.propertyValue}>{properties.rotatableBondCount}</span>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.propertyLabel}>Lipinski Violations:</span>\r\n                <span className={classes.propertyValue}>{properties.lipinskiViolations}</span>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n      \r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        message={snackbarMessage}\r\n        action={\r\n          <IconButton\r\n            size=\"small\"\r\n            color=\"inherit\"\r\n            onClick={handleCloseSnackbar}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StructureEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}