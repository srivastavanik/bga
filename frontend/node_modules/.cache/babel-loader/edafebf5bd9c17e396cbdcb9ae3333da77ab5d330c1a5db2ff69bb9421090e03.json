{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicks\\\\Downloads\\\\breakinggood\\\\frontend\\\\src\\\\components\\\\ThinkingProcessImproved.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Paper, Typography, CircularProgress, Divider, Accordion, AccordionSummary, AccordionDetails, Card, CardContent, Box, Chip, Button, TextField, IconButton, Grid, Avatar, Container, makeStyles } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BuildIcon from '@material-ui/icons/Build';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SendIcon from '@material-ui/icons/Send';\nimport ScienceIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects instead of Science\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\nimport ReactMarkdown from 'react-markdown';\nimport { claudeAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  claudeContainer: {\n    padding: theme.spacing(3),\n    backgroundColor: '#1A1A1D',\n    color: '#fff',\n    borderRadius: theme.shape.borderRadius,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    minHeight: '70vh'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n    borderBottom: '1px solid rgba(255,255,255,0.1)',\n    paddingBottom: theme.spacing(2)\n  },\n  headerTitle: {\n    color: '#fff',\n    fontWeight: 500\n  },\n  messageContainer: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: theme.spacing(2, 0),\n    marginBottom: theme.spacing(2)\n  },\n  messageRow: {\n    display: 'flex',\n    marginBottom: theme.spacing(3),\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    marginRight: theme.spacing(2),\n    width: 40,\n    height: 40\n  },\n  userAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  messageContent: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    color: '#fff'\n  },\n  userMessageContent: {\n    backgroundColor: 'rgba(255,255,255,0.1)'\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginTop: 'auto'\n  },\n  input: {\n    flexGrow: 1,\n    borderRadius: theme.shape.borderRadius,\n    '& .MuiInputBase-input': {\n      color: '#fff'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'rgba(255,255,255,0.2)'\n      },\n      '&:hover fieldset': {\n        borderColor: 'rgba(255,255,255,0.4)'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  sendButton: {\n    color: theme.palette.primary.main,\n    marginLeft: theme.spacing(1)\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(4),\n    color: '#fff'\n  },\n  sectionTitle: {\n    color: '#fff',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n    fontWeight: 500\n  },\n  accordionRoot: {\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    color: '#fff',\n    marginBottom: theme.spacing(1)\n  },\n  accordionSummary: {\n    '& .MuiAccordionSummary-content': {\n      color: '#fff'\n    }\n  },\n  accordionDetails: {\n    flexDirection: 'column'\n  },\n  statusChip: {\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff'\n  },\n  codeBlock: {\n    fontFamily: 'monospace',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: '#e0e0e0'\n  },\n  moleculesGrid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  moleculeCard: {\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    color: '#fff',\n    width: 280,\n    margin: theme.spacing(1),\n    overflow: 'hidden'\n  },\n  viewerContainer: {\n    height: 200,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`\n  },\n  cardContent: {\n    padding: theme.spacing(2)\n  },\n  moleculeName: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    marginBottom: theme.spacing(1)\n  },\n  smilesCode: {\n    fontSize: '0.75rem',\n    wordBreak: 'break-all',\n    marginBottom: theme.spacing(1),\n    fontFamily: 'monospace',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius\n  },\n  cardActions: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  markdownContent: {\n    color: '#fff',\n    '& h1, & h2, & h3, & h4, & h5, & h6': {\n      color: '#fff'\n    },\n    '& a': {\n      color: theme.palette.primary.main\n    },\n    '& ul, & ol': {\n      paddingLeft: theme.spacing(3)\n    },\n    '& pre': {\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      overflowX: 'auto',\n      fontFamily: 'monospace',\n      fontSize: '0.875rem'\n    },\n    '& code': {\n      fontFamily: 'monospace',\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: theme.spacing(0.5),\n      borderRadius: theme.shape.borderRadius,\n      fontSize: '0.875rem'\n    },\n    '& table': {\n      borderCollapse: 'collapse',\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    '& th, & td': {\n      border: '1px solid rgba(255,255,255,0.1)',\n      padding: theme.spacing(1)\n    },\n    '& th': {\n      backgroundColor: 'rgba(255,255,255,0.05)'\n    }\n  }\n}));\n\n// This function parses the molecule data from the thinking process\nconst extractMoleculesFromThinking = thinking => {\n  if (!thinking) return [];\n  const molecules = [];\n\n  // Find SMILES strings in the thinking process\n  const smilesRegex = /SMILES:\\s*([^\\s\\n]+)/g;\n  let match;\n  while ((match = smilesRegex.exec(thinking)) !== null) {\n    const smiles = match[1].replace(/[`'\"]/g, '');\n\n    // Try to find a name for this molecule near the SMILES string\n    const nameRegex = /\\*\\*Chemical Name:\\*\\*\\s*([^\\n]+)/;\n    const nameMatch = thinking.substring(Math.max(0, match.index - 200), match.index + 300).match(nameRegex);\n    molecules.push({\n      smiles,\n      name: nameMatch ? nameMatch[1].trim() : `Molecule ${molecules.length + 1}`\n    });\n  }\n  return molecules;\n};\n\n// Extract sections from the thinking process for structured display\nconst extractSections = thinking => {\n  if (!thinking) return [];\n  const sections = [];\n  const lines = thinking.split('\\n');\n  let currentSection = null;\n  let currentContent = [];\n  lines.forEach(line => {\n    const trimmedLine = line.trim();\n    // Check if this line is a header (using # markdown syntax)\n    const isHeader = /^#{1,3}\\s+(.+)$/.test(trimmedLine);\n    if (isHeader) {\n      // Save previous section if it exists\n      if (currentSection) {\n        sections.push({\n          title: currentSection,\n          content: currentContent.join('\\n')\n        });\n      }\n\n      // Start new section\n      currentSection = trimmedLine;\n      currentContent = [];\n    } else if (currentSection) {\n      currentContent.push(line);\n    } else {\n      // First lines before any clear section header\n      if (!currentSection) {\n        currentSection = \"Introduction\";\n      }\n      currentContent.push(line);\n    }\n  });\n\n  // Add the final section\n  if (currentSection) {\n    sections.push({\n      title: currentSection,\n      content: currentContent.join('\\n')\n    });\n  }\n  return sections;\n};\nconst ThinkingProcessImproved = ({\n  requestId,\n  onSelectMolecule,\n  onSaveMolecule\n}) => {\n  _s();\n  const classes = useStyles();\n  const [thinkingData, setThinkingData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n  const [expandedSection, setExpandedSection] = useState(null);\n  const [molecules, setMolecules] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const messageContainerRef = useRef(null);\n\n  // Fetch thinking process data when requestId changes\n  useEffect(() => {\n    if (!requestId) {\n      setError('No request ID provided');\n      setLoading(false);\n      return;\n    }\n    const fetchThinkingProcess = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await claudeAPI.getMoleculeThinking(requestId);\n        setThinkingData(response.data);\n\n        // Extract molecules from the thinking process\n        const extractedMolecules = extractMoleculesFromThinking(response.data.thinking);\n        setMolecules(extractedMolecules);\n\n        // Parse the thinking process into sections\n        const parsedSections = extractSections(response.data.thinking);\n        setSections(parsedSections);\n\n        // Initialize chat messages with the thinking process\n        setChatMessages([{\n          id: 'system-thinking',\n          type: 'claude',\n          content: response.data.thinking,\n          timestamp: response.data.timestamp\n        }]);\n\n        // Expand the first section by default\n        if (parsedSections.length > 0) {\n          setExpandedSection(0);\n        }\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching thinking process:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to load thinking process');\n        setLoading(false);\n      }\n    };\n    fetchThinkingProcess();\n  }, [requestId]);\n\n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // Handle sending user message to continue the conversation\n  const handleSendMessage = async () => {\n    if (!userInput.trim() || sendingMessage) return;\n\n    // Add user message to chat\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      type: 'user',\n      content: userInput,\n      timestamp: new Date().toISOString()\n    };\n    setChatMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setSendingMessage(true);\n    try {\n      // Send user message to Claude API\n      const response = await claudeAPI.askQuestion(userInput, {\n        requestId,\n        context: 'molecule-design'\n      });\n\n      // Add Claude's response to chat\n      const claudeMessage = {\n        id: `claude-${Date.now()}`,\n        type: 'claude',\n        content: response.data.response,\n        timestamp: new Date().toISOString()\n      };\n      setChatMessages(prev => [...prev, claudeMessage]);\n\n      // Check if the response contains new molecules\n      const newMolecules = extractMoleculesFromThinking(response.data.response);\n      if (newMolecules.length > 0) {\n        setMolecules(prev => [...prev, ...newMolecules]);\n      }\n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n\n      // Add error message to chat\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        type: 'system',\n        content: 'Sorry, there was an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      setChatMessages(prev => [...prev, errorMessage]);\n      setSendingMessage(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleAccordionChange = index => (event, isExpanded) => {\n    setExpandedSection(isExpanded ? index : null);\n  };\n  const handleSelectMolecule = molecule => {\n    if (onSelectMolecule) {\n      onSelectMolecule(molecule.smiles);\n    }\n  };\n  const handleSaveMolecule = molecule => {\n    if (onSaveMolecule) {\n      onSaveMolecule(molecule);\n    }\n  };\n\n  // Format timestamp\n  const formatDate = isoString => {\n    if (!isoString) return '';\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.claudeContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loadingContainer,\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          style: {\n            marginTop: 16,\n            color: '#fff'\n          },\n          children: \"Loading thinking process...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this);\n  }\n  if (!thinkingData) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"No Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), \"No thinking process data is available.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.claudeContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(ScienceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.headerTitle,\n        children: [\"AI Thinking Process\", thinkingData.status && /*#__PURE__*/_jsxDEV(Chip, {\n          label: thinkingData.status,\n          color: \"primary\",\n          size: \"small\",\n          icon: thinkingData.status === 'completed' ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 59\n          }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 81\n          }, this),\n          className: classes.statusChip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      style: {\n        color: 'rgba(255,255,255,0.7)',\n        marginBottom: 16\n      },\n      children: [\"Generated: \", formatDate(thinkingData.timestamp)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), molecules.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.sectionTitle,\n        children: \"Generated Molecules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.moleculesGrid,\n        children: molecules.map((molecule, index) => /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.moleculeCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.viewerContainer,\n            children: /*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n              moleculeData: molecule.smiles,\n              format: \"smiles\",\n              height: 200,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.cardContent,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.moleculeName,\n              children: molecule.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.smilesCode,\n              children: molecule.smiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              mt: 1,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(LocalPharmacyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleSelectMolecule(molecule),\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleSaveMolecule(molecule),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.sectionTitle,\n      children: \"Detailed Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messageContainer,\n      ref: messageContainerRef,\n      children: [chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messageRow,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: `${classes.avatar} ${message.type === 'user' ? classes.userAvatar : ''}`,\n          children: message.type === 'user' ? 'U' : message.type === 'claude' ? 'AI' : '!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.messageContent} ${message.type === 'user' ? classes.userMessageContent : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.markdownContent,\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            style: {\n              color: 'rgba(255,255,255,0.5)',\n              marginTop: 8,\n              display: 'block'\n            },\n            children: formatDate(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this)), sendingMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messageRow,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(ScienceIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.messageContent,\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            style: {\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Claude is thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        variant: \"outlined\",\n        placeholder: \"Ask a follow-up question or request refinements...\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: sendingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.sendButton,\n        onClick: handleSendMessage,\n        disabled: !userInput.trim() || sendingMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: classes.sectionTitle,\n      style: {\n        marginTop: 32\n      },\n      children: \"Raw Thinking Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), sections.length > 0 ? sections.map((section, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expandedSection === index,\n      onChange: handleAccordionChange(index),\n      className: classes.accordionRoot,\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n          style: {\n            color: '#fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 27\n        }, this),\n        className: classes.accordionSummary,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        className: classes.accordionDetails,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.markdownContent,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: section.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      style: {\n        color: 'rgba(255,255,255,0.7)'\n      },\n      children: \"No structured sections found in the thinking process.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 5\n  }, this);\n};\n_s(ThinkingProcessImproved, \"SnhxXMig2vZURYB9X1yJH9SfKnY=\", false, function () {\n  return [useStyles];\n});\n_c = ThinkingProcessImproved;\nexport default ThinkingProcessImproved;\nvar _c;\n$RefreshReg$(_c, \"ThinkingProcessImproved\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Paper","Typography","CircularProgress","Divider","Accordion","AccordionSummary","AccordionDetails","Card","CardContent","Box","Chip","Button","TextField","IconButton","Grid","Avatar","Container","makeStyles","ExpandMoreIcon","BuildIcon","FormatQuoteIcon","LocalPharmacyIcon","CheckCircleIcon","WarningIcon","SendIcon","ScienceIcon","ChatIcon","Alert","AlertTitle","MoleculeViewer3D","ReactMarkdown","claudeAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","root","width","marginTop","spacing","marginBottom","display","flexDirection","height","claudeContainer","padding","backgroundColor","color","borderRadius","shape","minHeight","header","alignItems","borderBottom","paddingBottom","headerTitle","fontWeight","messageContainer","flexGrow","overflowY","messageRow","avatar","palette","primary","main","marginRight","userAvatar","secondary","messageContent","userMessageContent","inputContainer","input","borderColor","sendButton","marginLeft","loadingContainer","justifyContent","sectionTitle","accordionRoot","accordionSummary","accordionDetails","statusChip","codeBlock","fontFamily","overflowX","moleculesGrid","flexWrap","gap","moleculeCard","margin","overflow","viewerContainer","cardContent","moleculeName","fontSize","smilesCode","wordBreak","cardActions","markdownContent","paddingLeft","borderCollapse","border","extractMoleculesFromThinking","thinking","molecules","smilesRegex","match","exec","smiles","replace","nameRegex","nameMatch","substring","Math","max","index","push","name","trim","length","extractSections","sections","lines","split","currentSection","currentContent","forEach","line","trimmedLine","isHeader","test","title","content","join","ThinkingProcessImproved","requestId","onSelectMolecule","onSaveMolecule","_s","classes","thinkingData","setThinkingData","loading","setLoading","error","setError","setSections","expandedSection","setExpandedSection","setMolecules","chatMessages","setChatMessages","userInput","setUserInput","sendingMessage","setSendingMessage","messageContainerRef","fetchThinkingProcess","response","getMoleculeThinking","data","extractedMolecules","parsedSections","id","type","timestamp","err","_err$response","_err$response$data","console","current","scrollTop","scrollHeight","handleSendMessage","userMessage","Date","now","toISOString","prev","askQuestion","context","claudeMessage","newMolecules","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleAccordionChange","event","isExpanded","handleSelectMolecule","molecule","handleSaveMolecule","formatDate","isoString","date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","severity","status","label","size","icon","map","moleculeData","format","mt","startIcon","onClick","ref","message","placeholder","fullWidth","multiline","rows","value","onChange","target","onKeyPress","disabled","section","expanded","expandIcon","_c","$RefreshReg$"],"sources":["C:/Users/nicks/Downloads/breakinggood/frontend/src/components/ThinkingProcessImproved.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Paper, \n  Typography, \n  CircularProgress,\n  Divider,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Box,\n  Chip,\n  Button,\n  TextField,\n  IconButton,\n  Grid,\n  Avatar,\n  Container,\n  makeStyles \n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BuildIcon from '@material-ui/icons/Build';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SendIcon from '@material-ui/icons/Send';\nimport ScienceIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects instead of Science\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\nimport ReactMarkdown from 'react-markdown';\nimport { claudeAPI } from '../services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  claudeContainer: {\n    padding: theme.spacing(3),\n    backgroundColor: '#1A1A1D',\n    color: '#fff',\n    borderRadius: theme.shape.borderRadius,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    minHeight: '70vh'\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n    borderBottom: '1px solid rgba(255,255,255,0.1)',\n    paddingBottom: theme.spacing(2)\n  },\n  headerTitle: {\n    color: '#fff',\n    fontWeight: 500\n  },\n  messageContainer: {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: theme.spacing(2, 0),\n    marginBottom: theme.spacing(2)\n  },\n  messageRow: {\n    display: 'flex',\n    marginBottom: theme.spacing(3),\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    marginRight: theme.spacing(2),\n    width: 40,\n    height: 40\n  },\n  userAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  messageContent: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    color: '#fff'\n  },\n  userMessageContent: {\n    backgroundColor: 'rgba(255,255,255,0.1)'\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginTop: 'auto'\n  },\n  input: {\n    flexGrow: 1,\n    borderRadius: theme.shape.borderRadius,\n    '& .MuiInputBase-input': {\n      color: '#fff'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'rgba(255,255,255,0.2)'\n      },\n      '&:hover fieldset': {\n        borderColor: 'rgba(255,255,255,0.4)'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  sendButton: {\n    color: theme.palette.primary.main,\n    marginLeft: theme.spacing(1)\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(4),\n    color: '#fff'\n  },\n  sectionTitle: {\n    color: '#fff',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n    fontWeight: 500\n  },\n  accordionRoot: {\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    color: '#fff',\n    marginBottom: theme.spacing(1)\n  },\n  accordionSummary: {\n    '& .MuiAccordionSummary-content': {\n      color: '#fff'\n    }\n  },\n  accordionDetails: {\n    flexDirection: 'column'\n  },\n  statusChip: {\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff'\n  },\n  codeBlock: {\n    fontFamily: 'monospace',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    overflowX: 'auto',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: '#e0e0e0'\n  },\n  moleculesGrid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  moleculeCard: {\n    backgroundColor: 'rgba(255,255,255,0.05)',\n    color: '#fff',\n    width: 280,\n    margin: theme.spacing(1),\n    overflow: 'hidden'\n  },\n  viewerContainer: {\n    height: 200,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`\n  },\n  cardContent: {\n    padding: theme.spacing(2),\n  },\n  moleculeName: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    marginBottom: theme.spacing(1)\n  },\n  smilesCode: {\n    fontSize: '0.75rem',\n    wordBreak: 'break-all',\n    marginBottom: theme.spacing(1),\n    fontFamily: 'monospace',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius\n  },\n  cardActions: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  markdownContent: {\n    color: '#fff',\n    '& h1, & h2, & h3, & h4, & h5, & h6': {\n      color: '#fff'\n    },\n    '& a': {\n      color: theme.palette.primary.main\n    },\n    '& ul, & ol': {\n      paddingLeft: theme.spacing(3)\n    },\n    '& pre': {\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      overflowX: 'auto',\n      fontFamily: 'monospace',\n      fontSize: '0.875rem'\n    },\n    '& code': {\n      fontFamily: 'monospace',\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: theme.spacing(0.5),\n      borderRadius: theme.shape.borderRadius,\n      fontSize: '0.875rem'\n    },\n    '& table': {\n      borderCollapse: 'collapse',\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    '& th, & td': {\n      border: '1px solid rgba(255,255,255,0.1)',\n      padding: theme.spacing(1)\n    },\n    '& th': {\n      backgroundColor: 'rgba(255,255,255,0.05)'\n    }\n  }\n}));\n\n// This function parses the molecule data from the thinking process\nconst extractMoleculesFromThinking = (thinking) => {\n  if (!thinking) return [];\n  \n  const molecules = [];\n  \n  // Find SMILES strings in the thinking process\n  const smilesRegex = /SMILES:\\s*([^\\s\\n]+)/g;\n  let match;\n  \n  while ((match = smilesRegex.exec(thinking)) !== null) {\n    const smiles = match[1].replace(/[`'\"]/g, '');\n    \n    // Try to find a name for this molecule near the SMILES string\n    const nameRegex = /\\*\\*Chemical Name:\\*\\*\\s*([^\\n]+)/;\n    const nameMatch = thinking.substring(Math.max(0, match.index - 200), match.index + 300).match(nameRegex);\n    \n    molecules.push({\n      smiles,\n      name: nameMatch ? nameMatch[1].trim() : `Molecule ${molecules.length + 1}`\n    });\n  }\n  \n  return molecules;\n};\n\n// Extract sections from the thinking process for structured display\nconst extractSections = (thinking) => {\n  if (!thinking) return [];\n  \n  const sections = [];\n  const lines = thinking.split('\\n');\n  let currentSection = null;\n  let currentContent = [];\n  \n  lines.forEach(line => {\n    const trimmedLine = line.trim();\n    // Check if this line is a header (using # markdown syntax)\n    const isHeader = /^#{1,3}\\s+(.+)$/.test(trimmedLine);\n    \n    if (isHeader) {\n      // Save previous section if it exists\n      if (currentSection) {\n        sections.push({\n          title: currentSection,\n          content: currentContent.join('\\n')\n        });\n      }\n      \n      // Start new section\n      currentSection = trimmedLine;\n      currentContent = [];\n    } else if (currentSection) {\n      currentContent.push(line);\n    } else {\n      // First lines before any clear section header\n      if (!currentSection) {\n        currentSection = \"Introduction\";\n      }\n      currentContent.push(line);\n    }\n  });\n  \n  // Add the final section\n  if (currentSection) {\n    sections.push({\n      title: currentSection,\n      content: currentContent.join('\\n')\n    });\n  }\n  \n  return sections;\n};\n\nconst ThinkingProcessImproved = ({ requestId, onSelectMolecule, onSaveMolecule }) => {\n  const classes = useStyles();\n  const [thinkingData, setThinkingData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n  const [expandedSection, setExpandedSection] = useState(null);\n  const [molecules, setMolecules] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const messageContainerRef = useRef(null);\n  \n  // Fetch thinking process data when requestId changes\n  useEffect(() => {\n    if (!requestId) {\n      setError('No request ID provided');\n      setLoading(false);\n      return;\n    }\n    \n    const fetchThinkingProcess = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await claudeAPI.getMoleculeThinking(requestId);\n        setThinkingData(response.data);\n        \n        // Extract molecules from the thinking process\n        const extractedMolecules = extractMoleculesFromThinking(response.data.thinking);\n        setMolecules(extractedMolecules);\n        \n        // Parse the thinking process into sections\n        const parsedSections = extractSections(response.data.thinking);\n        setSections(parsedSections);\n        \n        // Initialize chat messages with the thinking process\n        setChatMessages([\n          {\n            id: 'system-thinking',\n            type: 'claude',\n            content: response.data.thinking,\n            timestamp: response.data.timestamp\n          }\n        ]);\n        \n        // Expand the first section by default\n        if (parsedSections.length > 0) {\n          setExpandedSection(0);\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching thinking process:', err);\n        setError(err.response?.data?.error || 'Failed to load thinking process');\n        setLoading(false);\n      }\n    };\n    \n    fetchThinkingProcess();\n  }, [requestId]);\n  \n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  // Handle sending user message to continue the conversation\n  const handleSendMessage = async () => {\n    if (!userInput.trim() || sendingMessage) return;\n    \n    // Add user message to chat\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      type: 'user',\n      content: userInput,\n      timestamp: new Date().toISOString()\n    };\n    \n    setChatMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    setSendingMessage(true);\n    \n    try {\n      // Send user message to Claude API\n      const response = await claudeAPI.askQuestion(userInput, { requestId, context: 'molecule-design' });\n      \n      // Add Claude's response to chat\n      const claudeMessage = {\n        id: `claude-${Date.now()}`,\n        type: 'claude',\n        content: response.data.response,\n        timestamp: new Date().toISOString()\n      };\n      \n      setChatMessages(prev => [...prev, claudeMessage]);\n      \n      // Check if the response contains new molecules\n      const newMolecules = extractMoleculesFromThinking(response.data.response);\n      if (newMolecules.length > 0) {\n        setMolecules(prev => [...prev, ...newMolecules]);\n      }\n      \n      setSendingMessage(false);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      \n      // Add error message to chat\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        type: 'system',\n        content: 'Sorry, there was an error processing your request. Please try again.',\n        timestamp: new Date().toISOString()\n      };\n      \n      setChatMessages(prev => [...prev, errorMessage]);\n      setSendingMessage(false);\n    }\n  };\n  \n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  \n  const handleAccordionChange = (index) => (event, isExpanded) => {\n    setExpandedSection(isExpanded ? index : null);\n  };\n  \n  const handleSelectMolecule = (molecule) => {\n    if (onSelectMolecule) {\n      onSelectMolecule(molecule.smiles);\n    }\n  };\n  \n  const handleSaveMolecule = (molecule) => {\n    if (onSaveMolecule) {\n      onSaveMolecule(molecule);\n    }\n  };\n  \n  // Format timestamp\n  const formatDate = (isoString) => {\n    if (!isoString) return '';\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  \n  if (loading) {\n    return (\n      <Paper className={classes.claudeContainer}>\n        <div className={classes.loadingContainer}>\n          <CircularProgress color=\"primary\" />\n          <Typography variant=\"body1\" style={{ marginTop: 16, color: '#fff' }}>\n            Loading thinking process...\n          </Typography>\n        </div>\n      </Paper>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Alert severity=\"error\" className={classes.root}>\n        <AlertTitle>Error</AlertTitle>\n        {error}\n      </Alert>\n    );\n  }\n  \n  if (!thinkingData) {\n    return (\n      <Alert severity=\"warning\" className={classes.root}>\n        <AlertTitle>No Data</AlertTitle>\n        No thinking process data is available.\n      </Alert>\n    );\n  }\n  \n  return (\n    <Paper className={classes.claudeContainer}>\n      <div className={classes.header}>\n        <Avatar className={classes.avatar}>\n          <ScienceIcon />\n        </Avatar>\n        <Typography variant=\"h6\" className={classes.headerTitle}>\n          AI Thinking Process\n          {thinkingData.status && (\n            <Chip \n              label={thinkingData.status} \n              color=\"primary\"\n              size=\"small\"\n              icon={thinkingData.status === 'completed' ? <CheckCircleIcon /> : <CircularProgress size={16} />}\n              className={classes.statusChip}\n            />\n          )}\n        </Typography>\n      </div>\n      \n      <Typography variant=\"body2\" style={{ color: 'rgba(255,255,255,0.7)', marginBottom: 16 }}>\n        Generated: {formatDate(thinkingData.timestamp)}\n      </Typography>\n      \n      {/* Molecule Display Section */}\n      {molecules.length > 0 && (\n        <>\n          <Typography variant=\"h6\" className={classes.sectionTitle}>\n            Generated Molecules\n          </Typography>\n          \n          <div className={classes.moleculesGrid}>\n            {molecules.map((molecule, index) => (\n              <Card key={index} className={classes.moleculeCard}>\n                <div className={classes.viewerContainer}>\n                  <MoleculeViewer3D \n                    moleculeData={molecule.smiles}\n                    format=\"smiles\"\n                    height={200}\n                    width=\"100%\"\n                  />\n                </div>\n                <CardContent className={classes.cardContent}>\n                  <Typography className={classes.moleculeName}>\n                    {molecule.name}\n                  </Typography>\n                  <div className={classes.smilesCode}>\n                    {molecule.smiles}\n                  </div>\n                  <Box display=\"flex\" justifyContent=\"space-between\" mt={1}>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      color=\"primary\"\n                      startIcon={<LocalPharmacyIcon />}\n                      onClick={() => handleSelectMolecule(molecule)}\n                    >\n                      Select\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"contained\" \n                      color=\"primary\"\n                      onClick={() => handleSaveMolecule(molecule)}\n                    >\n                      Save\n                    </Button>\n                  </Box>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </>\n      )}\n      \n      {/* Chat Messages */}\n      <Typography variant=\"h6\" className={classes.sectionTitle}>\n        Detailed Analysis\n      </Typography>\n      \n      <div className={classes.messageContainer} ref={messageContainerRef}>\n        {chatMessages.map((message) => (\n          <div key={message.id} className={classes.messageRow}>\n            <Avatar className={`${classes.avatar} ${message.type === 'user' ? classes.userAvatar : ''}`}>\n              {message.type === 'user' ? 'U' : message.type === 'claude' ? 'AI' : '!'}\n            </Avatar>\n            <div className={`${classes.messageContent} ${message.type === 'user' ? classes.userMessageContent : ''}`}>\n              <div className={classes.markdownContent}>\n                <ReactMarkdown>\n                  {message.content}\n                </ReactMarkdown>\n              </div>\n              <Typography variant=\"caption\" style={{ color: 'rgba(255,255,255,0.5)', marginTop: 8, display: 'block' }}>\n                {formatDate(message.timestamp)}\n              </Typography>\n            </div>\n          </div>\n        ))}\n        \n        {sendingMessage && (\n          <div className={classes.messageRow}>\n            <Avatar className={classes.avatar}>\n              <ScienceIcon />\n            </Avatar>\n            <div className={classes.messageContent} style={{ display: 'flex', alignItems: 'center' }}>\n              <CircularProgress size={20} style={{ marginRight: 8 }} />\n              <Typography>Claude is thinking...</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Input Field for Continued Conversation */}\n      <div className={classes.inputContainer}>\n        <TextField\n          className={classes.input}\n          variant=\"outlined\"\n          placeholder=\"Ask a follow-up question or request refinements...\"\n          fullWidth\n          multiline\n          rows={2}\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          disabled={sendingMessage}\n        />\n        <IconButton \n          className={classes.sendButton} \n          onClick={handleSendMessage}\n          disabled={!userInput.trim() || sendingMessage}\n        >\n          <SendIcon />\n        </IconButton>\n      </div>\n      \n      {/* Structured Thinking Process (Collapsed by Default) */}\n      <Typography variant=\"h6\" className={classes.sectionTitle} style={{ marginTop: 32 }}>\n        Raw Thinking Output\n      </Typography>\n      \n      {sections.length > 0 ? (\n        sections.map((section, index) => (\n          <Accordion\n            key={index}\n            expanded={expandedSection === index}\n            onChange={handleAccordionChange(index)}\n            className={classes.accordionRoot}\n          >\n            <AccordionSummary \n              expandIcon={<ExpandMoreIcon style={{ color: '#fff' }} />}\n              className={classes.accordionSummary}\n            >\n              <Typography>{section.title}</Typography>\n            </AccordionSummary>\n            <AccordionDetails className={classes.accordionDetails}>\n              <div className={classes.markdownContent}>\n                <ReactMarkdown>\n                  {section.content}\n                </ReactMarkdown>\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        ))\n      ) : (\n        <Typography variant=\"body2\" style={{ color: 'rgba(255,255,255,0.7)' }}>\n          No structured sections found in the thinking process.\n        </Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default ThinkingProcessImproved;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}