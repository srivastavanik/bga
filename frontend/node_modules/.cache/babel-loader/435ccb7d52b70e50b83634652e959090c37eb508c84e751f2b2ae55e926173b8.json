{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicks\\\\Downloads\\\\breakinggood\\\\frontend\\\\src\\\\components\\\\MoleculeDesigner.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Typography, Grid, Paper, TextField, Button, Divider, CircularProgress, Tabs, Tab, Box, Chip, FormControlLabel, Checkbox, makeStyles, Card, CardContent, FormControl, InputLabel, Select, MenuItem, Snackbar, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogActions, DialogContent, DialogTitle, LinearProgress } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport BuildIcon from '@material-ui/icons/Build'; // Using Build icon instead of Science\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport PsychologyAltIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects icon instead of Psychology\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\nimport ThinkingProcess from './ThinkingProcessImproved';\nimport AIChatInterface from './AIChatInterface'; // Import the chat interface\nimport { drugDesignAPI, simulationAPI, claudeAPI } from '../services/api';\nimport StructureEditor from './StructureEditor'; // Import the actual editor\n\n// This would be imported from a third-party library in a real implementation\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoleculeViewer = ({\n  smiles,\n  height = 400\n}) => {\n  _s();\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    if (smiles && viewerRef.current) {\n      // In a real implementation, this would initialize 3Dmol.js\n      // and render the molecule\n      const placeholder = document.createElement('div');\n      placeholder.style.width = '100%';\n      placeholder.style.height = `${height}px`;\n      placeholder.style.backgroundColor = '#f5f5f5';\n      placeholder.style.display = 'flex';\n      placeholder.style.alignItems = 'center';\n      placeholder.style.justifyContent = 'center';\n      const text = document.createElement('div');\n      text.innerHTML = `<strong>SMILES:</strong> ${smiles}<br><br>3D Molecule Viewer would render here`;\n      text.style.textAlign = 'center';\n      text.style.padding = '20px';\n      placeholder.appendChild(text);\n      viewerRef.current.innerHTML = '';\n      viewerRef.current.appendChild(placeholder);\n    }\n  }, [smiles, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: viewerRef,\n    style: {\n      width: '100%',\n      height: `${height}px`,\n      border: '1px solid #e0e0e0'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n\n// TabPanel component for tabbed interface\n_s(MoleculeViewer, \"WZlWBGTTx29lA8KL541/EmcE3B8=\");\n_c = MoleculeViewer;\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TabPanel;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  title: {\n    marginBottom: theme.spacing(4),\n    fontWeight: 500\n  },\n  paper: {\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n  formContainer: {\n    marginBottom: theme.spacing(3)\n  },\n  inputField: {\n    marginBottom: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  viewerContainer: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  resultContainer: {\n    marginTop: theme.spacing(3)\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  progress: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  section: {\n    marginBottom: theme.spacing(3)\n  },\n  propertyItem: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 0),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  propertyLabel: {\n    fontWeight: 500\n  },\n  referenceItem: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    backgroundColor: '#f9f9f9'\n  },\n  tabs: {\n    marginBottom: theme.spacing(2)\n  },\n  toggleContainer: {\n    margin: theme.spacing(2, 0)\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  buttonWrapper: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  formControl: {\n    marginBottom: theme.spacing(2),\n    minWidth: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(2)\n  },\n  canvasContainer: {\n    height: 400,\n    border: '1px solid #ddd',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: '#f9f9f9',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: theme.spacing(2)\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(3)\n  },\n  resultCard: {\n    marginTop: theme.spacing(2),\n    position: 'relative'\n  },\n  propertyGrid: {\n    marginTop: theme.spacing(2)\n  },\n  actionButtons: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    display: 'flex'\n  },\n  tableContainer: {\n    marginTop: theme.spacing(2),\n    maxHeight: 440\n  },\n  tableRow: {\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  editorContainer: {\n    border: '1px solid #ddd',\n    borderRadius: theme.shape.borderRadius,\n    height: 400,\n    marginTop: theme.spacing(2),\n    backgroundColor: '#f9f9f9'\n  },\n  structureButtons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(2)\n  },\n  uploadInput: {\n    display: 'none'\n  },\n  buttonIconMargin: {\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: theme.spacing(2)\n  },\n  aiGenerationCard: {\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(2),\n    backgroundColor: '#f0f7ff'\n  },\n  thinkingContainer: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  aiControlsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  aiParameterCard: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  generationRequirements: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst MoleculeDesigner = () => {\n  _s2();\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [structureInput, setStructureInput] = useState('');\n  const [targetReceptor, setTargetReceptor] = useState('');\n  const [generatedMolecules, setGeneratedMolecules] = useState([]);\n  const [savedMolecules, setSavedMolecules] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedMolecule, setSelectedMolecule] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editMolecule, setEditMolecule] = useState(null);\n  const [moleculeName, setMoleculeName] = useState('');\n  const [smilesStructure, setSmilesStructure] = useState('');\n  const [simulationDialogOpen, setSimulationDialogOpen] = useState(false);\n  const [simulationType, setSimulationType] = useState('docking');\n\n  // AI generation states\n  const [aiRequirements, setAiRequirements] = useState('');\n  const [aiTargetReceptors, setAiTargetReceptors] = useState('dopamine/norepinephrine transporters');\n  const [aiMinimizeSideEffects, setAiMinimizeSideEffects] = useState(true);\n  const [aiIncludeReferences, setAiIncludeReferences] = useState(true);\n  const [aiGenerating, setAiGenerating] = useState(false);\n  const [aiGeneratedMolecules, setAiGeneratedMolecules] = useState([]);\n  const [aiRequestId, setAiRequestId] = useState(null);\n  const [showThinkingProcess, setShowThinkingProcess] = useState(false);\n  const [editorSmiles, setEditorSmiles] = useState('');\n  const [chatContext, setChatContext] = useState('General molecule design'); // Context for the chat\n\n  // Load saved molecules from localStorage on component mount\n  useEffect(() => {\n    const loadSavedMolecules = () => {\n      try {\n        const saved = localStorage.getItem('savedMolecules');\n        if (saved) {\n          setSavedMolecules(JSON.parse(saved));\n        }\n      } catch (err) {\n        console.error('Error loading saved molecules:', err);\n        showSnackbar('Failed to load saved molecules', 'error');\n      }\n    };\n    loadSavedMolecules();\n  }, []);\n\n  // Save to localStorage when savedMolecules changes\n  useEffect(() => {\n    if (savedMolecules.length > 0) {\n      try {\n        localStorage.setItem('savedMolecules', JSON.stringify(savedMolecules));\n      } catch (err) {\n        console.error('Error saving molecules:', err);\n      }\n    }\n  }, [savedMolecules]);\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbarMessage(message);\n    setSnackbarSeverity(severity);\n    setSnackbarOpen(true);\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  const handleGenerate = () => {\n    setLoading(true);\n    setError(null);\n\n    // Simulate API call\n    setTimeout(() => {\n      setLoading(false);\n      const newMolecules = [{\n        id: Date.now(),\n        name: `Compound-${Math.floor(Math.random() * 1000)}`,\n        smiles: 'CC1=C(C(=O)OC1=O)C2=CC=CC=C2',\n        properties: {\n          molecularWeight: '228.24 g/mol',\n          logP: '1.8',\n          hBondDonors: '0',\n          hBondAcceptors: '3',\n          rotableBonds: '2',\n          psa: '52.6 Å²',\n          targetAffinity: targetReceptor ? `${(Math.random() * 10 - 12).toFixed(1)} kcal/mol` : 'N/A'\n        },\n        timestamp: new Date().toISOString()\n      }, {\n        id: Date.now() + 1,\n        name: `Compound-${Math.floor(Math.random() * 1000)}`,\n        smiles: 'CC1=CC=C(C=C1)C2=CC(=NN2C)C(=O)N',\n        properties: {\n          molecularWeight: '215.25 g/mol',\n          logP: '2.1',\n          hBondDonors: '1',\n          hBondAcceptors: '4',\n          rotableBonds: '2',\n          psa: '71.2 Å²',\n          targetAffinity: targetReceptor ? `${(Math.random() * 10 - 12).toFixed(1)} kcal/mol` : 'N/A'\n        },\n        timestamp: new Date().toISOString()\n      }];\n      setGeneratedMolecules(newMolecules);\n      setSelectedMolecule(newMolecules[0]);\n    }, 2000);\n  };\n\n  // Generate molecules using Claude AI\n  const handleAiGenerate = async () => {\n    try {\n      if (!aiRequirements.trim()) {\n        showSnackbar('Please enter generation requirements', 'error');\n        return;\n      }\n      setAiGenerating(true);\n      setError(null);\n      setAiGeneratedMolecules([]);\n      setAiRequestId(null);\n      setShowThinkingProcess(false);\n      const response = await claudeAPI.generateMolecule({\n        requirements: aiRequirements,\n        targetReceptors: aiTargetReceptors,\n        minimizeSideEffects: aiMinimizeSideEffects,\n        includeLiteratureReferences: aiIncludeReferences\n      });\n\n      // Extract SMILES and create molecule objects\n      const molecules = [];\n      if (response.data.smiles && response.data.smiles.length > 0) {\n        for (let i = 0; i < response.data.smiles.length; i++) {\n          const smiles = response.data.smiles[i];\n\n          // Get molecule properties\n          try {\n            const propertiesResponse = await simulationAPI.runRDKit({\n              smiles: smiles,\n              operation: 'descriptors'\n            });\n            const molecule = {\n              id: Date.now() + i,\n              name: `AI-Compound-${i + 1}`,\n              smiles: smiles,\n              properties: {\n                molecularWeight: `${propertiesResponse.data.molecular_weight.toFixed(2)} g/mol`,\n                logP: propertiesResponse.data.logp.toFixed(2),\n                hBondDonors: propertiesResponse.data.num_h_donors,\n                hBondAcceptors: propertiesResponse.data.num_h_acceptors,\n                rotableBonds: propertiesResponse.data.num_rotatable_bonds,\n                psa: `${propertiesResponse.data.tpsa.toFixed(1)} Å²`,\n                formula: propertiesResponse.data.formula\n              },\n              timestamp: new Date().toISOString(),\n              aiGenerated: true,\n              requestId: response.data.requestId\n            };\n            molecules.push(molecule);\n          } catch (err) {\n            console.error('Error getting molecule properties:', err);\n            // Add molecule with limited properties\n            molecules.push({\n              id: Date.now() + i,\n              name: `AI-Compound-${i + 1}`,\n              smiles: smiles,\n              properties: {\n                formula: 'Unknown'\n              },\n              timestamp: new Date().toISOString(),\n              aiGenerated: true,\n              requestId: response.data.requestId\n            });\n          }\n        }\n      }\n\n      // Set generated molecules\n      setAiGeneratedMolecules(molecules);\n      if (molecules.length > 0) {\n        setSelectedMolecule(molecules[0]);\n      }\n\n      // Save request ID for thinking process\n      setAiRequestId(response.data.requestId);\n      setShowThinkingProcess(true);\n      showSnackbar('AI generated molecules successfully', 'success');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error generating molecules with AI:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to generate molecules with AI');\n      showSnackbar('Failed to generate molecules with AI', 'error');\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n  const handleSelectFromThinking = smiles => {\n    // Find if this SMILES is already in the generated molecules\n    const existingMolecule = aiGeneratedMolecules.find(m => m.smiles === smiles);\n    if (existingMolecule) {\n      setSelectedMolecule(existingMolecule);\n      return;\n    }\n\n    // Otherwise, create a new molecule entry and add it to the list\n    const addNewMolecule = async () => {\n      try {\n        // Get properties\n        const propertiesResponse = await simulationAPI.runRDKit({\n          smiles: smiles,\n          operation: 'descriptors'\n        });\n        const newMolecule = {\n          id: Date.now(),\n          name: `AI-Compound-Extra-${aiGeneratedMolecules.length + 1}`,\n          smiles: smiles,\n          properties: {\n            molecularWeight: `${propertiesResponse.data.molecular_weight.toFixed(2)} g/mol`,\n            logP: propertiesResponse.data.logp.toFixed(2),\n            hBondDonors: propertiesResponse.data.num_h_donors,\n            hBondAcceptors: propertiesResponse.data.num_h_acceptors,\n            rotableBonds: propertiesResponse.data.num_rotatable_bonds,\n            psa: `${propertiesResponse.data.tpsa.toFixed(1)} Å²`,\n            formula: propertiesResponse.data.formula\n          },\n          timestamp: new Date().toISOString(),\n          aiGenerated: true,\n          requestId: aiRequestId\n        };\n        setAiGeneratedMolecules(prev => [...prev, newMolecule]);\n        setSelectedMolecule(newMolecule);\n      } catch (err) {\n        console.error('Error creating molecule from SMILES:', err);\n\n        // Create basic molecule without properties\n        const basicMolecule = {\n          id: Date.now(),\n          name: `AI-Compound-Extra-${aiGeneratedMolecules.length + 1}`,\n          smiles: smiles,\n          properties: {\n            formula: 'Unknown'\n          },\n          timestamp: new Date().toISOString(),\n          aiGenerated: true,\n          requestId: aiRequestId\n        };\n        setAiGeneratedMolecules(prev => [...prev, basicMolecule]);\n        setSelectedMolecule(basicMolecule);\n      }\n    };\n    addNewMolecule();\n  };\n  const handleSaveMolecule = molecule => {\n    // Check if molecule already exists in savedMolecules\n    const exists = savedMolecules.some(m => m.id === molecule.id);\n    if (!exists) {\n      const updatedSavedMolecules = [...savedMolecules, molecule];\n      setSavedMolecules(updatedSavedMolecules);\n      showSnackbar(`${molecule.name} saved successfully`);\n    } else {\n      showSnackbar(`${molecule.name} is already saved`, 'warning');\n    }\n  };\n  const handleDeleteMolecule = id => {\n    const updatedMolecules = savedMolecules.filter(molecule => molecule.id !== id);\n    setSavedMolecules(updatedMolecules);\n    showSnackbar('Molecule deleted successfully');\n  };\n  const handleMoleculeSelection = molecule => {\n    setSelectedMolecule(molecule);\n  };\n  const handleEditDialogOpen = molecule => {\n    setEditMolecule(molecule);\n    setMoleculeName(molecule.name);\n    setSmilesStructure(molecule.smiles);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setEditMolecule(null);\n    setMoleculeName('');\n    setSmilesStructure('');\n  };\n  const handleEditSave = () => {\n    if (!moleculeName.trim() || !smilesStructure.trim()) {\n      showSnackbar('Please fill in all fields', 'error');\n      return;\n    }\n    const updatedMolecules = savedMolecules.map(molecule => molecule.id === editMolecule.id ? {\n      ...molecule,\n      name: moleculeName,\n      smiles: smilesStructure\n    } : molecule);\n    setSavedMolecules(updatedMolecules);\n    showSnackbar('Molecule updated successfully');\n    handleEditDialogClose();\n  };\n  const handleSimulationDialogOpen = molecule => {\n    setSelectedMolecule(molecule);\n    setSimulationDialogOpen(true);\n  };\n  const handleSimulationDialogClose = () => {\n    setSimulationDialogOpen(false);\n  };\n  const handleRunSimulation = () => {\n    // In a real app, this would trigger a simulation in the Simulations component\n    showSnackbar(`Simulation request for ${selectedMolecule.name} sent to Simulations`);\n    handleSimulationDialogClose();\n\n    // This is where integration with the Simulations component would happen\n    // You would dispatch an action or use a context to send the molecule data\n    console.log('Running simulation with:', {\n      molecule: selectedMolecule,\n      simulationType: simulationType\n    });\n  };\n  const handleExportMolecules = () => {\n    try {\n      const dataStr = JSON.stringify(savedMolecules, null, 2);\n      const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n      const exportFileDefaultName = 'molecules.json';\n      const linkElement = document.createElement('a');\n      linkElement.setAttribute('href', dataUri);\n      linkElement.setAttribute('download', exportFileDefaultName);\n      linkElement.click();\n      showSnackbar('Molecules exported successfully');\n    } catch (err) {\n      console.error('Error exporting molecules:', err);\n      showSnackbar('Failed to export molecules', 'error');\n    }\n  };\n  const handleImportMolecules = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedMolecules = JSON.parse(e.target.result);\n        if (Array.isArray(importedMolecules)) {\n          // Merge with existing molecules, avoiding duplicates by ID\n          const existingIds = savedMolecules.map(m => m.id);\n          const newMolecules = importedMolecules.filter(m => !existingIds.includes(m.id));\n          if (newMolecules.length > 0) {\n            setSavedMolecules([...savedMolecules, ...newMolecules]);\n            showSnackbar(`Imported ${newMolecules.length} new molecules successfully`);\n          } else {\n            showSnackbar('No new molecules to import', 'info');\n          }\n        } else {\n          showSnackbar('Invalid import file format', 'error');\n        }\n      } catch (err) {\n        console.error('Error importing molecules:', err);\n        showSnackbar('Failed to import molecules: Invalid JSON', 'error');\n      }\n    };\n    reader.readAsText(file);\n\n    // Reset the file input\n    event.target.value = '';\n  };\n  const receptors = [{\n    value: 'D1',\n    label: 'Dopamine D1 Receptor'\n  }, {\n    value: 'D2',\n    label: 'Dopamine D2 Receptor'\n  }, {\n    value: 'DAT',\n    label: 'Dopamine Transporter (DAT)'\n  }, {\n    value: 'NET',\n    label: 'Norepinephrine Transporter (NET)'\n  }, {\n    value: '5HT2A',\n    label: 'Serotonin 5-HT2A Receptor'\n  }, {\n    value: 'AMPA',\n    label: 'AMPA Receptor'\n  }];\n  const simulationTypes = [{\n    value: 'docking',\n    label: 'Molecular Docking'\n  }, {\n    value: 'md',\n    label: 'Molecular Dynamics'\n  }, {\n    value: 'admet',\n    label: 'ADMET Prediction'\n  }];\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Function to handle changes from StructureEditor\n  const handleEditorMoleculeChange = newSmiles => {\n    setEditorSmiles(newSmiles);\n    // Optionally, select this molecule for viewing/saving\n    // This requires converting SMILES back to a molecule object structure\n    // For now, just update the SMILES state\n  };\n\n  // Handler for when the chat mentions a molecule SMILES\n  const handleMoleculeMentionedInChat = smiles => {\n    console.log('Chat mentioned SMILES:', smiles);\n    // Potentially load this SMILES into the viewer or editor\n    // Example: If a molecule object can be created/found, update selectedMolecule\n    // For now, just log it\n    showSnackbar(`AI mentioned molecule: ${smiles}`, 'info');\n  };\n\n  // Update chat context when a molecule is selected\n  useEffect(() => {\n    if (selectedMolecule) {\n      setChatContext(`Discussing molecule: ${selectedMolecule.name} (SMILES: ${selectedMolecule.smiles})`);\n    } else {\n      setChatContext('General molecule design');\n    }\n  }, [selectedMolecule]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      children: \"Molecule Designer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"AI Designer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Structure Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Saved Molecules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Molecule Generation Parameters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Target Receptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: targetReceptor,\n                onChange: e => setTargetReceptor(e.target.value),\n                label: \"Target Receptor\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 19\n                }, this), receptors.map(receptor => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: receptor.value,\n                  children: receptor.label\n                }, receptor.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.formControl,\n              label: \"Starting Structure (SMILES or Scaffold)\",\n              variant: \"outlined\",\n              multiline: true,\n              rows: 4,\n              value: structureInput,\n              onChange: e => setStructureInput(e.target.value),\n              placeholder: \"Enter SMILES notation or describe desired scaffold...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: handleGenerate,\n              disabled: loading,\n              fullWidth: true,\n              startIcon: /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 28\n              }, this),\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 28\n              }, this) : 'Generate Molecules'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              style: {\n                marginTop: 16\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Molecule Viewer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.loadingContainer,\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  marginTop: 16\n                },\n                children: \"Generating molecules...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: selectedMolecule ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n                  smiles: selectedMolecule.smiles\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.resultCard,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.actionButtons,\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleSaveMolecule(selectedMolecule),\n                      title: \"Save molecule\",\n                      children: /*#__PURE__*/_jsxDEV(SaveIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 821,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleSimulationDialogOpen(selectedMolecule),\n                      title: \"Run simulation\",\n                      children: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 828,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: selectedMolecule.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      gutterBottom: true,\n                      children: [\"SMILES: \", selectedMolecule.smiles]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 833,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      gutterBottom: true,\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Properties:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 837,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      className: classes.propertyGrid,\n                      children: Object.entries(selectedMolecule.properties).map(([key, value]) => /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        sm: 4,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: [key, \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 844,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          children: value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 847,\n                          columnNumber: 33\n                        }, this)]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 23\n                }, this), generatedMolecules.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Other Generated Molecules:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 858,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexWrap: 'wrap'\n                    },\n                    children: generatedMolecules.filter(m => m.id !== selectedMolecule.id).map(molecule => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: molecule.name,\n                      clickable: true,\n                      onClick: () => handleMoleculeSelection(molecule),\n                      className: classes.chip\n                    }, molecule.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 865,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 21\n              }, this) : generatedMolecules.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.canvasContainer,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    color: \"textSecondary\",\n                    children: \"Select a molecule to view details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Generated Molecules:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexWrap: 'wrap'\n                    },\n                    children: generatedMolecules.map(molecule => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: molecule.name,\n                      clickable: true,\n                      onClick: () => handleMoleculeSelection(molecule),\n                      className: classes.chip\n                    }, molecule.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 890,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.canvasContainer,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"textSecondary\",\n                  children: \"No molecules generated yet. Set parameters and click \\\"Generate Molecules\\\".\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"AI-Powered Molecule Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.aiParameterCard,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Design Requirements\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: classes.generationRequirements,\n                  label: \"Design Goals and Requirements\",\n                  variant: \"outlined\",\n                  multiline: true,\n                  rows: 4,\n                  fullWidth: true,\n                  value: aiRequirements,\n                  onChange: e => setAiRequirements(e.target.value),\n                  placeholder: \"Describe what you want in the molecule. For example: a novel dopamine reuptake inhibitor with reduced cardiovascular side effects, improved BBB penetration, and a half-life of 8-12 hours.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Target Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: classes.formControl,\n                  label: \"Target Receptors\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  value: aiTargetReceptors,\n                  onChange: e => setAiTargetReceptors(e.target.value),\n                  placeholder: \"e.g., dopamine/norepinephrine transporters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: aiMinimizeSideEffects,\n                    onChange: e => setAiMinimizeSideEffects(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 23\n                  }, this),\n                  label: \"Minimize side effects\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: aiIncludeReferences,\n                    onChange: e => setAiIncludeReferences(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 23\n                  }, this),\n                  label: \"Include literature references\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  fullWidth: true,\n                  onClick: handleAiGenerate,\n                  disabled: aiGenerating || !aiRequirements.trim(),\n                  startIcon: /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 32\n                  }, this),\n                  className: classes.button,\n                  children: aiGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 24\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 37\n                  }, this) : 'Generate with AI'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this), aiGenerating && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              style: {\n                marginTop: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                gutterBottom: true,\n                children: \"AI is designing molecules based on your requirements...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                style: {\n                  marginTop: 8\n                },\n                children: \"This may take a minute or two as the AI considers various approaches and chemical structures.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              style: {\n                marginTop: 24\n              },\n              children: \"Chat with AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AIChatInterface, {\n              initialContext: chatContext,\n              onMoleculeMentioned: handleMoleculeMentionedInChat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Generated Molecules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 15\n            }, this), aiGeneratedMolecules.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: selectedMolecule && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n                  smiles: selectedMolecule.smiles\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1020,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.resultCard,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.actionButtons,\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleSaveMolecule(selectedMolecule),\n                      title: \"Save molecule\",\n                      children: /*#__PURE__*/_jsxDEV(SaveIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1029,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1024,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleSimulationDialogOpen(selectedMolecule),\n                      title: \"Run simulation\",\n                      children: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1036,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1031,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: selectedMolecule.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      gutterBottom: true,\n                      children: [\"SMILES: \", selectedMolecule.smiles]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1041,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      gutterBottom: true,\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Properties:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1045,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      className: classes.propertyGrid,\n                      children: Object.entries(selectedMolecule.properties).map(([key, value]) => /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        sm: 4,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: [key, \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1052,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body1\",\n                          children: value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1055,\n                          columnNumber: 33\n                        }, this)]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1051,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1049,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 16\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Other AI-Generated Molecules:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexWrap: 'wrap'\n                    },\n                    children: aiGeneratedMolecules.filter(m => m.id !== selectedMolecule.id).map(molecule => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: molecule.name,\n                      clickable: true,\n                      onClick: () => handleMoleculeSelection(molecule),\n                      className: classes.chip,\n                      color: \"primary\",\n                      variant: \"outlined\"\n                    }, molecule.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1072,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1068,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.canvasContainer,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textSecondary\",\n                align: \"center\",\n                children: aiGenerating ? 'Working on your molecular designs...' : 'No AI-generated molecules yet. Set your requirements and click \"Generate with AI\".'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this), showThinkingProcess && aiRequestId && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.thinkingContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"AI Thinking Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThinkingProcess, {\n              requestId: aiRequestId,\n              onSelectMolecule: handleSelectFromThinking\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(StructureEditor, {\n          initialMolecule: editorSmiles // Pass current editor SMILES or initial value\n          ,\n          onMoleculeChange: handleEditorMoleculeChange // Handle updates from the editor\n          ,\n          showControls: true,\n          showProperties: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginBottom: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Saved Molecules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  accept: \".json\",\n                  className: classes.uploadInput,\n                  id: \"import-molecules-button\",\n                  type: \"file\",\n                  onChange: handleImportMolecules\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"import-molecules-button\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    component: \"span\",\n                    startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 34\n                    }, this),\n                    style: {\n                      marginRight: 8\n                    },\n                    children: \"Import\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudDownloadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 32\n                  }, this),\n                  onClick: handleExportMolecules,\n                  disabled: savedMolecules.length === 0,\n                  children: \"Export\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this), savedMolecules.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n              style: {\n                padding: 24,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: \"No molecules saved yet. Generate and save molecules to see them here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                \"aria-label\": \"saved molecules table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1172,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"SMILES\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1173,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Molecular Weight\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1174,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Date Added\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1175,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1176,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1171,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: savedMolecules.map(molecule => {\n                    var _molecule$properties;\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      className: classes.tableRow,\n                      hover: true,\n                      onClick: () => handleMoleculeSelection(molecule),\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: molecule.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1187,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: molecule.smiles.length > 20 ? `${molecule.smiles.substring(0, 20)}...` : molecule.smiles\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1188,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: ((_molecule$properties = molecule.properties) === null || _molecule$properties === void 0 ? void 0 : _molecule$properties.molecularWeight) || 'N/A'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1193,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: molecule.timestamp ? formatDate(molecule.timestamp) : 'N/A'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1194,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"small\",\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleEditDialogOpen(molecule);\n                          },\n                          title: \"Edit molecule\",\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1204,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1196,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"small\",\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleSimulationDialogOpen(molecule);\n                          },\n                          title: \"Run simulation\",\n                          children: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1214,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1206,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"small\",\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleDeleteMolecule(molecule.id);\n                          },\n                          title: \"Delete molecule\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1224,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1216,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1195,\n                        columnNumber: 27\n                      }, this)]\n                    }, molecule.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1181,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1179,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }, this), selectedMolecule && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Selected Molecule Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MoleculeViewer3D, {\n              smiles: selectedMolecule.smiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Molecule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Molecule Name\",\n          type: \"text\",\n          fullWidth: true,\n          value: moleculeName,\n          onChange: e => setMoleculeName(e.target.value),\n          variant: \"outlined\",\n          className: classes.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"SMILES Structure\",\n          type: \"text\",\n          fullWidth: true,\n          value: smilesStructure,\n          onChange: e => setSmilesStructure(e.target.value),\n          variant: \"outlined\",\n          className: classes.inputField,\n          multiline: true,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditDialogClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSave,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: simulationDialogOpen,\n      onClose: handleSimulationDialogClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Run Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedMolecule && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: selectedMolecule.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"SMILES: \", selectedMolecule.smiles]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            style: {\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Simulation Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: simulationType,\n              onChange: e => setSimulationType(e.target.value),\n              label: \"Simulation Type\",\n              children: simulationTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Target Receptor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: targetReceptor,\n              onChange: e => setTargetReceptor(e.target.value),\n              label: \"Target Receptor\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1320,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 19\n              }, this), receptors.map(receptor => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: receptor.value,\n                children: receptor.label\n              }, receptor.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSimulationDialogClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRunSimulation,\n          color: \"primary\",\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(CompareArrowsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 24\n          }, this),\n          children: \"Run Simulation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: snackbarSeverity,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 725,\n    columnNumber: 5\n  }, this);\n};\n_s2(MoleculeDesigner, \"uaz5UCAa29yfpSiOc4JqtqyGSr4=\", false, function () {\n  return [useStyles];\n});\n_c3 = MoleculeDesigner;\nexport default MoleculeDesigner;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MoleculeViewer\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"MoleculeDesigner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Typography","Grid","Paper","TextField","Button","Divider","CircularProgress","Tabs","Tab","Box","Chip","FormControlLabel","Checkbox","makeStyles","Card","CardContent","FormControl","InputLabel","Select","MenuItem","Snackbar","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Dialog","DialogActions","DialogContent","DialogTitle","LinearProgress","Alert","BuildIcon","FormatQuoteIcon","SaveIcon","DeleteIcon","EditIcon","CompareArrowsIcon","AddCircleOutlineIcon","CloudUploadIcon","CloudDownloadIcon","PsychologyAltIcon","DescriptionIcon","ToggleButton","ToggleButtonGroup","MoleculeViewer3D","ThinkingProcess","AIChatInterface","drugDesignAPI","simulationAPI","claudeAPI","StructureEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","MoleculeViewer","smiles","height","_s","viewerRef","current","placeholder","document","createElement","style","width","backgroundColor","display","alignItems","justifyContent","text","innerHTML","textAlign","padding","appendChild","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","TabPanel","props","children","value","index","other","role","hidden","id","p","_c2","useStyles","theme","root","flexGrow","spacing","title","marginBottom","fontWeight","paper","formContainer","inputField","divider","margin","viewerContainer","marginTop","resultContainer","chip","progress","section","propertyItem","borderBottom","palette","propertyLabel","referenceItem","tabs","toggleContainer","buttonProgress","position","top","left","marginLeft","buttonWrapper","formControl","minWidth","button","canvasContainer","borderRadius","shape","loadingContainer","flexDirection","resultCard","propertyGrid","actionButtons","right","tableContainer","maxHeight","tableRow","cursor","action","hover","editorContainer","structureButtons","uploadInput","buttonIconMargin","marginRight","actionsContainer","aiGenerationCard","thinkingContainer","aiControlsContainer","gap","aiParameterCard","generationRequirements","MoleculeDesigner","_s2","classes","activeTab","setActiveTab","loading","setLoading","structureInput","setStructureInput","targetReceptor","setTargetReceptor","generatedMolecules","setGeneratedMolecules","savedMolecules","setSavedMolecules","error","setError","selectedMolecule","setSelectedMolecule","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","editDialogOpen","setEditDialogOpen","editMolecule","setEditMolecule","moleculeName","setMoleculeName","smilesStructure","setSmilesStructure","simulationDialogOpen","setSimulationDialogOpen","simulationType","setSimulationType","aiRequirements","setAiRequirements","aiTargetReceptors","setAiTargetReceptors","aiMinimizeSideEffects","setAiMinimizeSideEffects","aiIncludeReferences","setAiIncludeReferences","aiGenerating","setAiGenerating","aiGeneratedMolecules","setAiGeneratedMolecules","aiRequestId","setAiRequestId","showThinkingProcess","setShowThinkingProcess","editorSmiles","setEditorSmiles","chatContext","setChatContext","loadSavedMolecules","saved","localStorage","getItem","JSON","parse","err","console","showSnackbar","length","setItem","stringify","handleTabChange","event","newValue","message","severity","handleSnackbarClose","reason","handleGenerate","setTimeout","newMolecules","Date","now","name","Math","floor","random","properties","molecularWeight","logP","hBondDonors","hBondAcceptors","rotableBonds","psa","targetAffinity","toFixed","timestamp","toISOString","handleAiGenerate","trim","response","generateMolecule","requirements","targetReceptors","minimizeSideEffects","includeLiteratureReferences","molecules","data","i","propertiesResponse","runRDKit","operation","molecule","molecular_weight","logp","num_h_donors","num_h_acceptors","num_rotatable_bonds","tpsa","formula","aiGenerated","requestId","push","_err$response","_err$response$data","handleSelectFromThinking","existingMolecule","find","m","addNewMolecule","newMolecule","prev","basicMolecule","handleSaveMolecule","exists","some","updatedSavedMolecules","handleDeleteMolecule","updatedMolecules","filter","handleMoleculeSelection","handleEditDialogOpen","handleEditDialogClose","handleEditSave","map","handleSimulationDialogOpen","handleSimulationDialogClose","handleRunSimulation","log","handleExportMolecules","dataStr","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","setAttribute","click","handleImportMolecules","file","target","files","reader","FileReader","onload","e","importedMolecules","result","Array","isArray","existingIds","includes","readAsText","receptors","label","simulationTypes","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","handleEditorMoleculeChange","newSmiles","handleMoleculeMentionedInChat","className","variant","onChange","indicatorColor","textColor","container","item","xs","md","gutterBottom","receptor","multiline","rows","color","onClick","disabled","fullWidth","startIcon","size","fontSize","Object","entries","key","sm","flexWrap","clickable","control","checked","align","initialContext","onMoleculeMentioned","onSelectMolecule","initialMolecule","onMoleculeChange","showControls","showProperties","accept","type","htmlFor","component","stickyHeader","_molecule$properties","substring","stopPropagation","open","onClose","maxWidth","autoFocus","autoHideDuration","anchorOrigin","vertical","horizontal","_c3","$RefreshReg$"],"sources":["C:/Users/nicks/Downloads/breakinggood/frontend/src/components/MoleculeDesigner.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Typography, \r\n  Grid, \r\n  Paper, \r\n  TextField, \r\n  Button, \r\n  Divider, \r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Chip,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  makeStyles,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Snackbar,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport BuildIcon from '@material-ui/icons/Build'; // Using Build icon instead of Science\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport PsychologyAltIcon from '@material-ui/icons/EmojiObjects'; // Using EmojiObjects icon instead of Psychology\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport MoleculeViewer3D from './MoleculeViewer3DImproved';\r\nimport ThinkingProcess from './ThinkingProcessImproved';\r\nimport AIChatInterface from './AIChatInterface'; // Import the chat interface\r\nimport { drugDesignAPI, simulationAPI, claudeAPI } from '../services/api';\r\nimport StructureEditor from './StructureEditor'; // Import the actual editor\r\n\r\n// This would be imported from a third-party library in a real implementation\r\nconst MoleculeViewer = ({ smiles, height = 400 }) => {\r\n  const viewerRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (smiles && viewerRef.current) {\r\n      // In a real implementation, this would initialize 3Dmol.js\r\n      // and render the molecule\r\n      const placeholder = document.createElement('div');\r\n      placeholder.style.width = '100%';\r\n      placeholder.style.height = `${height}px`;\r\n      placeholder.style.backgroundColor = '#f5f5f5';\r\n      placeholder.style.display = 'flex';\r\n      placeholder.style.alignItems = 'center';\r\n      placeholder.style.justifyContent = 'center';\r\n      \r\n      const text = document.createElement('div');\r\n      text.innerHTML = `<strong>SMILES:</strong> ${smiles}<br><br>3D Molecule Viewer would render here`;\r\n      text.style.textAlign = 'center';\r\n      text.style.padding = '20px';\r\n      \r\n      placeholder.appendChild(text);\r\n      \r\n      viewerRef.current.innerHTML = '';\r\n      viewerRef.current.appendChild(placeholder);\r\n    }\r\n  }, [smiles, height]);\r\n  \r\n  return <div ref={viewerRef} style={{ width: '100%', height: `${height}px`, border: '1px solid #e0e0e0' }}></div>;\r\n};\r\n\r\n// TabPanel component for tabbed interface\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(4),\r\n    fontWeight: 500,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    height: '100%',\r\n  },\r\n  formContainer: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  viewerContainer: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  resultContainer: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  progress: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  section: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  propertyItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(1, 0),\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  propertyLabel: {\r\n    fontWeight: 500,\r\n  },\r\n  referenceItem: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  tabs: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  buttonWrapper: {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing(2),\r\n    minWidth: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  canvasContainer: {\r\n    height: 400,\r\n    border: '1px solid #ddd',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: '#f9f9f9',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(3),\r\n  },\r\n  resultCard: {\r\n    marginTop: theme.spacing(2),\r\n    position: 'relative',\r\n  },\r\n  propertyGrid: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    display: 'flex',\r\n  },\r\n  tableContainer: {\r\n    marginTop: theme.spacing(2),\r\n    maxHeight: 440,\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  editorContainer: {\r\n    border: '1px solid #ddd',\r\n    borderRadius: theme.shape.borderRadius,\r\n    height: 400,\r\n    marginTop: theme.spacing(2),\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  structureButtons: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  uploadInput: {\r\n    display: 'none',\r\n  },\r\n  buttonIconMargin: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  aiGenerationCard: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    backgroundColor: '#f0f7ff',\r\n  },\r\n  thinkingContainer: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  aiControlsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  aiParameterCard: {\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  generationRequirements: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MoleculeDesigner = () => {\r\n  const classes = useStyles();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [structureInput, setStructureInput] = useState('');\r\n  const [targetReceptor, setTargetReceptor] = useState('');\r\n  const [generatedMolecules, setGeneratedMolecules] = useState([]);\r\n  const [savedMolecules, setSavedMolecules] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMolecule, setSelectedMolecule] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editMolecule, setEditMolecule] = useState(null);\r\n  const [moleculeName, setMoleculeName] = useState('');\r\n  const [smilesStructure, setSmilesStructure] = useState('');\r\n  const [simulationDialogOpen, setSimulationDialogOpen] = useState(false);\r\n  const [simulationType, setSimulationType] = useState('docking');\r\n  \r\n  // AI generation states\r\n  const [aiRequirements, setAiRequirements] = useState('');\r\n  const [aiTargetReceptors, setAiTargetReceptors] = useState('dopamine/norepinephrine transporters');\r\n  const [aiMinimizeSideEffects, setAiMinimizeSideEffects] = useState(true);\r\n  const [aiIncludeReferences, setAiIncludeReferences] = useState(true);\r\n  const [aiGenerating, setAiGenerating] = useState(false);\r\n  const [aiGeneratedMolecules, setAiGeneratedMolecules] = useState([]);\r\n  const [aiRequestId, setAiRequestId] = useState(null);\r\n  const [showThinkingProcess, setShowThinkingProcess] = useState(false);\r\n  \r\n  const [editorSmiles, setEditorSmiles] = useState('');\r\n  const [chatContext, setChatContext] = useState('General molecule design'); // Context for the chat\r\n  \r\n  // Load saved molecules from localStorage on component mount\r\n  useEffect(() => {\r\n    const loadSavedMolecules = () => {\r\n      try {\r\n        const saved = localStorage.getItem('savedMolecules');\r\n        if (saved) {\r\n          setSavedMolecules(JSON.parse(saved));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading saved molecules:', err);\r\n        showSnackbar('Failed to load saved molecules', 'error');\r\n      }\r\n    };\r\n    \r\n    loadSavedMolecules();\r\n  }, []);\r\n  \r\n  // Save to localStorage when savedMolecules changes\r\n  useEffect(() => {\r\n    if (savedMolecules.length > 0) {\r\n      try {\r\n        localStorage.setItem('savedMolecules', JSON.stringify(savedMolecules));\r\n      } catch (err) {\r\n        console.error('Error saving molecules:', err);\r\n      }\r\n    }\r\n  }, [savedMolecules]);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n  \r\n  const showSnackbar = (message, severity = 'success') => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setSnackbarOpen(true);\r\n  };\r\n  \r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleGenerate = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      \r\n      const newMolecules = [\r\n        {\r\n          id: Date.now(),\r\n          name: `Compound-${Math.floor(Math.random() * 1000)}`,\r\n          smiles: 'CC1=C(C(=O)OC1=O)C2=CC=CC=C2',\r\n          properties: {\r\n            molecularWeight: '228.24 g/mol',\r\n            logP: '1.8',\r\n            hBondDonors: '0',\r\n            hBondAcceptors: '3',\r\n            rotableBonds: '2',\r\n            psa: '52.6 Å²',\r\n            targetAffinity: targetReceptor ? `${(Math.random() * 10 - 12).toFixed(1)} kcal/mol` : 'N/A',\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n        {\r\n          id: Date.now() + 1,\r\n          name: `Compound-${Math.floor(Math.random() * 1000)}`,\r\n          smiles: 'CC1=CC=C(C=C1)C2=CC(=NN2C)C(=O)N',\r\n          properties: {\r\n            molecularWeight: '215.25 g/mol',\r\n            logP: '2.1',\r\n            hBondDonors: '1',\r\n            hBondAcceptors: '4',\r\n            rotableBonds: '2',\r\n            psa: '71.2 Å²',\r\n            targetAffinity: targetReceptor ? `${(Math.random() * 10 - 12).toFixed(1)} kcal/mol` : 'N/A',\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n        }\r\n      ];\r\n      \r\n      setGeneratedMolecules(newMolecules);\r\n      setSelectedMolecule(newMolecules[0]);\r\n    }, 2000);\r\n  };\r\n  \r\n  // Generate molecules using Claude AI\r\n  const handleAiGenerate = async () => {\r\n    try {\r\n      if (!aiRequirements.trim()) {\r\n        showSnackbar('Please enter generation requirements', 'error');\r\n        return;\r\n      }\r\n      \r\n      setAiGenerating(true);\r\n      setError(null);\r\n      setAiGeneratedMolecules([]);\r\n      setAiRequestId(null);\r\n      setShowThinkingProcess(false);\r\n      \r\n      const response = await claudeAPI.generateMolecule({\r\n        requirements: aiRequirements,\r\n        targetReceptors: aiTargetReceptors,\r\n        minimizeSideEffects: aiMinimizeSideEffects,\r\n        includeLiteratureReferences: aiIncludeReferences\r\n      });\r\n      \r\n      // Extract SMILES and create molecule objects\r\n      const molecules = [];\r\n      if (response.data.smiles && response.data.smiles.length > 0) {\r\n        for (let i = 0; i < response.data.smiles.length; i++) {\r\n          const smiles = response.data.smiles[i];\r\n          \r\n          // Get molecule properties\r\n          try {\r\n            const propertiesResponse = await simulationAPI.runRDKit({\r\n              smiles: smiles,\r\n              operation: 'descriptors'\r\n            });\r\n            \r\n            const molecule = {\r\n              id: Date.now() + i,\r\n              name: `AI-Compound-${i+1}`,\r\n              smiles: smiles,\r\n              properties: {\r\n                molecularWeight: `${propertiesResponse.data.molecular_weight.toFixed(2)} g/mol`,\r\n                logP: propertiesResponse.data.logp.toFixed(2),\r\n                hBondDonors: propertiesResponse.data.num_h_donors,\r\n                hBondAcceptors: propertiesResponse.data.num_h_acceptors,\r\n                rotableBonds: propertiesResponse.data.num_rotatable_bonds,\r\n                psa: `${propertiesResponse.data.tpsa.toFixed(1)} Å²`,\r\n                formula: propertiesResponse.data.formula,\r\n              },\r\n              timestamp: new Date().toISOString(),\r\n              aiGenerated: true,\r\n              requestId: response.data.requestId,\r\n            };\r\n            \r\n            molecules.push(molecule);\r\n          } catch (err) {\r\n            console.error('Error getting molecule properties:', err);\r\n            // Add molecule with limited properties\r\n            molecules.push({\r\n              id: Date.now() + i,\r\n              name: `AI-Compound-${i+1}`,\r\n              smiles: smiles,\r\n              properties: {\r\n                formula: 'Unknown',\r\n              },\r\n              timestamp: new Date().toISOString(),\r\n              aiGenerated: true,\r\n              requestId: response.data.requestId,\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Set generated molecules\r\n      setAiGeneratedMolecules(molecules);\r\n      if (molecules.length > 0) {\r\n        setSelectedMolecule(molecules[0]);\r\n      }\r\n      \r\n      // Save request ID for thinking process\r\n      setAiRequestId(response.data.requestId);\r\n      setShowThinkingProcess(true);\r\n      showSnackbar('AI generated molecules successfully', 'success');\r\n      \r\n    } catch (err) {\r\n      console.error('Error generating molecules with AI:', err);\r\n      setError(err.response?.data?.error || 'Failed to generate molecules with AI');\r\n      showSnackbar('Failed to generate molecules with AI', 'error');\r\n    } finally {\r\n      setAiGenerating(false);\r\n    }\r\n  };\r\n  \r\n  const handleSelectFromThinking = (smiles) => {\r\n    // Find if this SMILES is already in the generated molecules\r\n    const existingMolecule = aiGeneratedMolecules.find(m => m.smiles === smiles);\r\n    \r\n    if (existingMolecule) {\r\n      setSelectedMolecule(existingMolecule);\r\n      return;\r\n    }\r\n    \r\n    // Otherwise, create a new molecule entry and add it to the list\r\n    const addNewMolecule = async () => {\r\n      try {\r\n        // Get properties\r\n        const propertiesResponse = await simulationAPI.runRDKit({\r\n          smiles: smiles,\r\n          operation: 'descriptors'\r\n        });\r\n        \r\n        const newMolecule = {\r\n          id: Date.now(),\r\n          name: `AI-Compound-Extra-${aiGeneratedMolecules.length + 1}`,\r\n          smiles: smiles,\r\n          properties: {\r\n            molecularWeight: `${propertiesResponse.data.molecular_weight.toFixed(2)} g/mol`,\r\n            logP: propertiesResponse.data.logp.toFixed(2),\r\n            hBondDonors: propertiesResponse.data.num_h_donors,\r\n            hBondAcceptors: propertiesResponse.data.num_h_acceptors,\r\n            rotableBonds: propertiesResponse.data.num_rotatable_bonds,\r\n            psa: `${propertiesResponse.data.tpsa.toFixed(1)} Å²`,\r\n            formula: propertiesResponse.data.formula,\r\n          },\r\n          timestamp: new Date().toISOString(),\r\n          aiGenerated: true,\r\n          requestId: aiRequestId,\r\n        };\r\n        \r\n        setAiGeneratedMolecules(prev => [...prev, newMolecule]);\r\n        setSelectedMolecule(newMolecule);\r\n        \r\n      } catch (err) {\r\n        console.error('Error creating molecule from SMILES:', err);\r\n        \r\n        // Create basic molecule without properties\r\n        const basicMolecule = {\r\n          id: Date.now(),\r\n          name: `AI-Compound-Extra-${aiGeneratedMolecules.length + 1}`,\r\n          smiles: smiles,\r\n          properties: { formula: 'Unknown' },\r\n          timestamp: new Date().toISOString(),\r\n          aiGenerated: true,\r\n          requestId: aiRequestId,\r\n        };\r\n        \r\n        setAiGeneratedMolecules(prev => [...prev, basicMolecule]);\r\n        setSelectedMolecule(basicMolecule);\r\n      }\r\n    };\r\n    \r\n    addNewMolecule();\r\n  };\r\n  \r\n  const handleSaveMolecule = (molecule) => {\r\n    // Check if molecule already exists in savedMolecules\r\n    const exists = savedMolecules.some(m => m.id === molecule.id);\r\n    \r\n    if (!exists) {\r\n      const updatedSavedMolecules = [...savedMolecules, molecule];\r\n      setSavedMolecules(updatedSavedMolecules);\r\n      showSnackbar(`${molecule.name} saved successfully`);\r\n    } else {\r\n      showSnackbar(`${molecule.name} is already saved`, 'warning');\r\n    }\r\n  };\r\n  \r\n  const handleDeleteMolecule = (id) => {\r\n    const updatedMolecules = savedMolecules.filter(molecule => molecule.id !== id);\r\n    setSavedMolecules(updatedMolecules);\r\n    showSnackbar('Molecule deleted successfully');\r\n  };\r\n  \r\n  const handleMoleculeSelection = (molecule) => {\r\n    setSelectedMolecule(molecule);\r\n  };\r\n  \r\n  const handleEditDialogOpen = (molecule) => {\r\n    setEditMolecule(molecule);\r\n    setMoleculeName(molecule.name);\r\n    setSmilesStructure(molecule.smiles);\r\n    setEditDialogOpen(true);\r\n  };\r\n  \r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setEditMolecule(null);\r\n    setMoleculeName('');\r\n    setSmilesStructure('');\r\n  };\r\n  \r\n  const handleEditSave = () => {\r\n    if (!moleculeName.trim() || !smilesStructure.trim()) {\r\n      showSnackbar('Please fill in all fields', 'error');\r\n      return;\r\n    }\r\n    \r\n    const updatedMolecules = savedMolecules.map(molecule => \r\n      molecule.id === editMolecule.id \r\n        ? { ...molecule, name: moleculeName, smiles: smilesStructure }\r\n        : molecule\r\n    );\r\n    \r\n    setSavedMolecules(updatedMolecules);\r\n    showSnackbar('Molecule updated successfully');\r\n    handleEditDialogClose();\r\n  };\r\n  \r\n  const handleSimulationDialogOpen = (molecule) => {\r\n    setSelectedMolecule(molecule);\r\n    setSimulationDialogOpen(true);\r\n  };\r\n  \r\n  const handleSimulationDialogClose = () => {\r\n    setSimulationDialogOpen(false);\r\n  };\r\n  \r\n  const handleRunSimulation = () => {\r\n    // In a real app, this would trigger a simulation in the Simulations component\r\n    showSnackbar(`Simulation request for ${selectedMolecule.name} sent to Simulations`);\r\n    handleSimulationDialogClose();\r\n    \r\n    // This is where integration with the Simulations component would happen\r\n    // You would dispatch an action or use a context to send the molecule data\r\n    console.log('Running simulation with:', {\r\n      molecule: selectedMolecule,\r\n      simulationType: simulationType\r\n    });\r\n  };\r\n  \r\n  const handleExportMolecules = () => {\r\n    try {\r\n      const dataStr = JSON.stringify(savedMolecules, null, 2);\r\n      const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n      \r\n      const exportFileDefaultName = 'molecules.json';\r\n      \r\n      const linkElement = document.createElement('a');\r\n      linkElement.setAttribute('href', dataUri);\r\n      linkElement.setAttribute('download', exportFileDefaultName);\r\n      linkElement.click();\r\n      \r\n      showSnackbar('Molecules exported successfully');\r\n    } catch (err) {\r\n      console.error('Error exporting molecules:', err);\r\n      showSnackbar('Failed to export molecules', 'error');\r\n    }\r\n  };\r\n  \r\n  const handleImportMolecules = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedMolecules = JSON.parse(e.target.result);\r\n        if (Array.isArray(importedMolecules)) {\r\n          // Merge with existing molecules, avoiding duplicates by ID\r\n          const existingIds = savedMolecules.map(m => m.id);\r\n          const newMolecules = importedMolecules.filter(m => !existingIds.includes(m.id));\r\n          \r\n          if (newMolecules.length > 0) {\r\n            setSavedMolecules([...savedMolecules, ...newMolecules]);\r\n            showSnackbar(`Imported ${newMolecules.length} new molecules successfully`);\r\n          } else {\r\n            showSnackbar('No new molecules to import', 'info');\r\n          }\r\n        } else {\r\n          showSnackbar('Invalid import file format', 'error');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error importing molecules:', err);\r\n        showSnackbar('Failed to import molecules: Invalid JSON', 'error');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    \r\n    // Reset the file input\r\n    event.target.value = '';\r\n  };\r\n\r\n  const receptors = [\r\n    { value: 'D1', label: 'Dopamine D1 Receptor' },\r\n    { value: 'D2', label: 'Dopamine D2 Receptor' },\r\n    { value: 'DAT', label: 'Dopamine Transporter (DAT)' },\r\n    { value: 'NET', label: 'Norepinephrine Transporter (NET)' },\r\n    { value: '5HT2A', label: 'Serotonin 5-HT2A Receptor' },\r\n    { value: 'AMPA', label: 'AMPA Receptor' },\r\n  ];\r\n  \r\n  const simulationTypes = [\r\n    { value: 'docking', label: 'Molecular Docking' },\r\n    { value: 'md', label: 'Molecular Dynamics' },\r\n    { value: 'admet', label: 'ADMET Prediction' },\r\n  ];\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Function to handle changes from StructureEditor\r\n  const handleEditorMoleculeChange = (newSmiles) => {\r\n    setEditorSmiles(newSmiles);\r\n    // Optionally, select this molecule for viewing/saving\r\n    // This requires converting SMILES back to a molecule object structure\r\n    // For now, just update the SMILES state\r\n  };\r\n\r\n  // Handler for when the chat mentions a molecule SMILES\r\n  const handleMoleculeMentionedInChat = (smiles) => {\r\n    console.log('Chat mentioned SMILES:', smiles);\r\n    // Potentially load this SMILES into the viewer or editor\r\n    // Example: If a molecule object can be created/found, update selectedMolecule\r\n    // For now, just log it\r\n    showSnackbar(`AI mentioned molecule: ${smiles}`, 'info');\r\n  };\r\n\r\n  // Update chat context when a molecule is selected\r\n  useEffect(() => {\r\n    if (selectedMolecule) {\r\n      setChatContext(`Discussing molecule: ${selectedMolecule.name} (SMILES: ${selectedMolecule.smiles})`);\r\n    } else {\r\n      setChatContext('General molecule design');\r\n    }\r\n  }, [selectedMolecule]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" className={classes.title}>\r\n        Molecule Designer\r\n      </Typography>\r\n      \r\n      <Paper className={classes.paper}>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Generator\" />\r\n          <Tab label=\"AI Designer\" />\r\n          <Tab label=\"Structure Editor\" />\r\n          <Tab label=\"Saved Molecules\" />\r\n        </Tabs>\r\n        \r\n        <TabPanel value={activeTab} index={0}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Molecule Generation Parameters\r\n              </Typography>\r\n              \r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>Target Receptor</InputLabel>\r\n                <Select\r\n                  value={targetReceptor}\r\n                  onChange={(e) => setTargetReceptor(e.target.value)}\r\n                  label=\"Target Receptor\"\r\n                >\r\n                  <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                  {receptors.map((receptor) => (\r\n                    <MenuItem key={receptor.value} value={receptor.value}>\r\n                      {receptor.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <TextField\r\n                className={classes.formControl}\r\n                label=\"Starting Structure (SMILES or Scaffold)\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={4}\r\n                value={structureInput}\r\n                onChange={(e) => setStructureInput(e.target.value)}\r\n                placeholder=\"Enter SMILES notation or describe desired scaffold...\"\r\n              />\r\n              \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleGenerate}\r\n                disabled={loading}\r\n                fullWidth\r\n                startIcon={<BuildIcon />}\r\n              >\r\n                {loading ? <CircularProgress size={24} /> : 'Generate Molecules'}\r\n              </Button>\r\n              \r\n              {error && (\r\n                <Alert severity=\"error\" style={{ marginTop: 16 }}>\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Molecule Viewer\r\n              </Typography>\r\n              \r\n              {loading ? (\r\n                <div className={classes.loadingContainer}>\r\n                  <CircularProgress />\r\n                  <Typography variant=\"body1\" style={{ marginTop: 16 }}>\r\n                    Generating molecules...\r\n                  </Typography>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {selectedMolecule ? (\r\n                    <div>\r\n                      <MoleculeViewer3D smiles={selectedMolecule.smiles} />\r\n                      \r\n                      <Card className={classes.resultCard}>\r\n                        <div className={classes.actionButtons}>\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleSaveMolecule(selectedMolecule)}\r\n                            title=\"Save molecule\"\r\n                          >\r\n                            <SaveIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleSimulationDialogOpen(selectedMolecule)}\r\n                            title=\"Run simulation\"\r\n                          >\r\n                            <CompareArrowsIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </div>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\">{selectedMolecule.name}</Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                            SMILES: {selectedMolecule.smiles}\r\n                          </Typography>\r\n                          \r\n                          <Typography variant=\"subtitle1\" gutterBottom style={{ marginTop: 8 }}>\r\n                            Properties:\r\n                          </Typography>\r\n                          \r\n                          <Grid container spacing={2} className={classes.propertyGrid}>\r\n                            {Object.entries(selectedMolecule.properties).map(([key, value]) => (\r\n                              <Grid item xs={6} sm={4} key={key}>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                  {key}:\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                  {value}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ))}\r\n                          </Grid>\r\n                        </CardContent>\r\n                      </Card>\r\n                      \r\n                      {generatedMolecules.length > 1 && (\r\n                        <div style={{ marginTop: 16 }}>\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Other Generated Molecules:\r\n                          </Typography>\r\n                          <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                            {generatedMolecules\r\n                              .filter(m => m.id !== selectedMolecule.id)\r\n                              .map(molecule => (\r\n                                <Chip\r\n                                  key={molecule.id}\r\n                                  label={molecule.name}\r\n                                  clickable\r\n                                  onClick={() => handleMoleculeSelection(molecule)}\r\n                                  className={classes.chip}\r\n                                />\r\n                              ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : generatedMolecules.length > 0 ? (\r\n                    <div>\r\n                      <div className={classes.canvasContainer}>\r\n                        <Typography variant=\"body1\" color=\"textSecondary\">\r\n                          Select a molecule to view details\r\n                        </Typography>\r\n                      </div>\r\n                      <div style={{ marginTop: 16 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Generated Molecules:\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                          {generatedMolecules.map(molecule => (\r\n                            <Chip\r\n                              key={molecule.id}\r\n                              label={molecule.name}\r\n                              clickable\r\n                              onClick={() => handleMoleculeSelection(molecule)}\r\n                              className={classes.chip}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className={classes.canvasContainer}>\r\n                      <Typography variant=\"body1\" color=\"textSecondary\">\r\n                        No molecules generated yet. Set parameters and click \"Generate Molecules\".\r\n                      </Typography>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        \r\n        <TabPanel value={activeTab} index={1}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                AI-Powered Molecule Design\r\n              </Typography>\r\n              \r\n              <Card className={classes.aiParameterCard}>\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Design Requirements\r\n                  </Typography>\r\n                  \r\n                  <TextField\r\n                    className={classes.generationRequirements}\r\n                    label=\"Design Goals and Requirements\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rows={4}\r\n                    fullWidth\r\n                    value={aiRequirements}\r\n                    onChange={(e) => setAiRequirements(e.target.value)}\r\n                    placeholder=\"Describe what you want in the molecule. For example: a novel dopamine reuptake inhibitor with reduced cardiovascular side effects, improved BBB penetration, and a half-life of 8-12 hours.\"\r\n                  />\r\n                  \r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Target Parameters\r\n                  </Typography>\r\n                  \r\n                  <TextField\r\n                    className={classes.formControl}\r\n                    label=\"Target Receptors\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={aiTargetReceptors}\r\n                    onChange={(e) => setAiTargetReceptors(e.target.value)}\r\n                    placeholder=\"e.g., dopamine/norepinephrine transporters\"\r\n                  />\r\n                  \r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={aiMinimizeSideEffects}\r\n                        onChange={(e) => setAiMinimizeSideEffects(e.target.checked)}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Minimize side effects\"\r\n                  />\r\n                  \r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={aiIncludeReferences}\r\n                        onChange={(e) => setAiIncludeReferences(e.target.checked)}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Include literature references\"\r\n                  />\r\n                  \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={handleAiGenerate}\r\n                    disabled={aiGenerating || !aiRequirements.trim()}\r\n                    startIcon={<BuildIcon />}\r\n                    className={classes.button}\r\n                  >\r\n                    {aiGenerating ? <CircularProgress size={24} /> : 'Generate with AI'}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              {aiGenerating && (\r\n                <Paper className={classes.paper} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body1\" align=\"center\" gutterBottom>\r\n                    AI is designing molecules based on your requirements...\r\n                  </Typography>\r\n                  <LinearProgress />\r\n                  <Typography variant=\"body2\" align=\"center\" style={{ marginTop: 8 }}>\r\n                    This may take a minute or two as the AI considers various approaches and chemical structures.\r\n                  </Typography>\r\n                </Paper>\r\n              )}\r\n\r\n              {/* Add Chat Interface Below Controls */}\r\n              <Typography variant=\"h6\" gutterBottom style={{ marginTop: 24 }}>\r\n                Chat with AI Assistant\r\n              </Typography>\r\n              <AIChatInterface \r\n                initialContext={chatContext} \r\n                onMoleculeMentioned={handleMoleculeMentionedInChat}\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Generated Molecules\r\n              </Typography>\r\n              \r\n              {aiGeneratedMolecules.length > 0 ? (\r\n                <div>\r\n                  {selectedMolecule && (\r\n                    <div>\r\n                      <MoleculeViewer3D smiles={selectedMolecule.smiles} />\r\n                      \r\n                      <Card className={classes.resultCard}>\r\n                        <div className={classes.actionButtons}>\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleSaveMolecule(selectedMolecule)}\r\n                            title=\"Save molecule\"\r\n                          >\r\n                            <SaveIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleSimulationDialogOpen(selectedMolecule)}\r\n                            title=\"Run simulation\"\r\n                          >\r\n                            <CompareArrowsIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </div>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\">{selectedMolecule.name}</Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                            SMILES: {selectedMolecule.smiles}\r\n                          </Typography>\r\n                          \r\n                          <Typography variant=\"subtitle1\" gutterBottom style={{ marginTop: 8 }}>\r\n                            Properties:\r\n                          </Typography>\r\n                          \r\n                          <Grid container spacing={2} className={classes.propertyGrid}>\r\n                            {Object.entries(selectedMolecule.properties).map(([key, value]) => (\r\n                              <Grid item xs={6} sm={4} key={key}>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                  {key}:\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                  {value}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ))}\r\n                          </Grid>\r\n                        </CardContent>\r\n                      </Card>\r\n                      \r\n                      <div style={{ marginTop: 16 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          Other AI-Generated Molecules:\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                          {aiGeneratedMolecules\r\n                            .filter(m => m.id !== selectedMolecule.id)\r\n                            .map(molecule => (\r\n                              <Chip\r\n                                key={molecule.id}\r\n                                label={molecule.name}\r\n                                clickable\r\n                                onClick={() => handleMoleculeSelection(molecule)}\r\n                                className={classes.chip}\r\n                                color=\"primary\"\r\n                                variant=\"outlined\"\r\n                              />\r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className={classes.canvasContainer}>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n                    {aiGenerating ? (\r\n                      'Working on your molecular designs...'\r\n                    ) : (\r\n                      'No AI-generated molecules yet. Set your requirements and click \"Generate with AI\".'\r\n                    )}\r\n                  </Typography>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            \r\n            {showThinkingProcess && aiRequestId && (\r\n              <Grid item xs={12} className={classes.thinkingContainer}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  AI Thinking Process\r\n                </Typography>\r\n                <ThinkingProcess \r\n                  requestId={aiRequestId}\r\n                  onSelectMolecule={handleSelectFromThinking}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </TabPanel>\r\n        \r\n        <TabPanel value={activeTab} index={2}>\r\n          <StructureEditor \r\n            initialMolecule={editorSmiles} // Pass current editor SMILES or initial value\r\n            onMoleculeChange={handleEditorMoleculeChange} // Handle updates from the editor\r\n            showControls={true}\r\n            showProperties={true}\r\n          />\r\n        </TabPanel>\r\n        \r\n        <TabPanel value={activeTab} index={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>\r\n                <Typography variant=\"h6\">\r\n                  Saved Molecules\r\n                </Typography>\r\n                \r\n                <div>\r\n                  <input\r\n                    accept=\".json\"\r\n                    className={classes.uploadInput}\r\n                    id=\"import-molecules-button\"\r\n                    type=\"file\"\r\n                    onChange={handleImportMolecules}\r\n                  />\r\n                  <label htmlFor=\"import-molecules-button\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                      style={{ marginRight: 8 }}\r\n                    >\r\n                      Import\r\n                    </Button>\r\n                  </label>\r\n                  \r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={handleExportMolecules}\r\n                    disabled={savedMolecules.length === 0}\r\n                  >\r\n                    Export\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              \r\n              {savedMolecules.length === 0 ? (\r\n                <Paper style={{ padding: 24, textAlign: 'center' }}>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    No molecules saved yet. Generate and save molecules to see them here.\r\n                  </Typography>\r\n                </Paper>\r\n              ) : (\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table stickyHeader aria-label=\"saved molecules table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>SMILES</TableCell>\r\n                        <TableCell>Molecular Weight</TableCell>\r\n                        <TableCell>Date Added</TableCell>\r\n                        <TableCell align=\"center\">Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {savedMolecules.map((molecule) => (\r\n                        <TableRow \r\n                          key={molecule.id} \r\n                          className={classes.tableRow}\r\n                          hover\r\n                          onClick={() => handleMoleculeSelection(molecule)}\r\n                        >\r\n                          <TableCell>{molecule.name}</TableCell>\r\n                          <TableCell>\r\n                            {molecule.smiles.length > 20 \r\n                              ? `${molecule.smiles.substring(0, 20)}...` \r\n                              : molecule.smiles}\r\n                          </TableCell>\r\n                          <TableCell>{molecule.properties?.molecularWeight || 'N/A'}</TableCell>\r\n                          <TableCell>{molecule.timestamp ? formatDate(molecule.timestamp) : 'N/A'}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleEditDialogOpen(molecule);\r\n                              }}\r\n                              title=\"Edit molecule\"\r\n                            >\r\n                              <EditIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleSimulationDialogOpen(molecule);\r\n                              }}\r\n                              title=\"Run simulation\"\r\n                            >\r\n                              <CompareArrowsIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleDeleteMolecule(molecule.id);\r\n                              }}\r\n                              title=\"Delete molecule\"\r\n                            >\r\n                              <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </Grid>\r\n            \r\n            {selectedMolecule && (\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Selected Molecule Preview\r\n                </Typography>\r\n                <MoleculeViewer3D smiles={selectedMolecule.smiles} />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </TabPanel>\r\n      </Paper>\r\n      \r\n      {/* Edit Molecule Dialog */}\r\n      <Dialog open={editDialogOpen} onClose={handleEditDialogClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Edit Molecule</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Molecule Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={moleculeName}\r\n            onChange={(e) => setMoleculeName(e.target.value)}\r\n            variant=\"outlined\"\r\n            className={classes.inputField}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"SMILES Structure\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={smilesStructure}\r\n            onChange={(e) => setSmilesStructure(e.target.value)}\r\n            variant=\"outlined\"\r\n            className={classes.inputField}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEditSave} color=\"primary\" variant=\"contained\">\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Simulation Dialog */}\r\n      <Dialog open={simulationDialogOpen} onClose={handleSimulationDialogClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Run Simulation</DialogTitle>\r\n        <DialogContent>\r\n          {selectedMolecule && (\r\n            <>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {selectedMolecule.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                SMILES: {selectedMolecule.smiles}\r\n              </Typography>\r\n              \r\n              <FormControl variant=\"outlined\" className={classes.formControl} style={{ marginTop: 16 }}>\r\n                <InputLabel>Simulation Type</InputLabel>\r\n                <Select\r\n                  value={simulationType}\r\n                  onChange={(e) => setSimulationType(e.target.value)}\r\n                  label=\"Simulation Type\"\r\n                >\r\n                  {simulationTypes.map((type) => (\r\n                    <MenuItem key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>Target Receptor</InputLabel>\r\n                <Select\r\n                  value={targetReceptor}\r\n                  onChange={(e) => setTargetReceptor(e.target.value)}\r\n                  label=\"Target Receptor\"\r\n                >\r\n                  <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                  {receptors.map((receptor) => (\r\n                    <MenuItem key={receptor.value} value={receptor.value}>\r\n                      {receptor.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSimulationDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleRunSimulation} \r\n            color=\"primary\" \r\n            variant=\"contained\"\r\n            startIcon={<CompareArrowsIcon />}\r\n          >\r\n            Run Simulation\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Snackbar for notifications */}\r\n      <Snackbar \r\n        open={snackbarOpen} \r\n        autoHideDuration={6000} \r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity}>\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoleculeDesigner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}